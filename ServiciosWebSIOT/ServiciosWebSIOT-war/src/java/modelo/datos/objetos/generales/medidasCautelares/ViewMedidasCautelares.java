package modelo.datos.objetos.generales.medidasCautelares;

import java.io.*;
import java.sql.*;
import java.util.*;
import java.math.*;

 /**
  * ViewMedidasCautelares Value Object.
  * This class is value object representing database table VIEW_MEDIDASCAUTELARES
  * This class is intented to be used together with associated Dao object.
  */

 /**
  * This sourcecode has been generated by FREE DaoGen generator version 2.4.1.
  * The usage of generated code is restricted to OpenSource software projects
  * only. DaoGen is available in http://titaniclinux.net/daogen/
  * It has been programmed by Tuomo Lukka, Tuomo.Lukka@iki.fi
  *
  * DaoGen license: The following DaoGen generated source code is licensed
  * under the terms of GNU GPL license. The full text for license is available
  * in GNU project's pages: http://www.gnu.org/copyleft/gpl.html
  *
  * If you wish to use the DaoGen generator to produce code for closed-source
  * commercial applications, you must pay the lisence fee. The price is
  * 5 USD or 5 Eur for each database table, you are generating code for.
  * (That includes unlimited amount of iterations with all supported languages
  * for each database table you are paying for.) Send mail to
  * "Tuomo.Lukka@iki.fi" for more information. Thank you!
  */



public class ViewMedidasCautelares implements Cloneable, Serializable {

    /** 
     * Persistent Instance variables. This data is directly 
     * mapped to the columns of database table.
     */
    private String je_nombre;
    private String jtp_codrunt;
    private String jtp_nombre;
    private String jp_numrad_ente;
    private String jp_fecha;
    private int jp_activo;
    private String jp_fin_sumario;
    private int jp_v_id;
    private String jp_fin_num_ente;



    /** 
     * Constructors. DaoGen generates two constructors by default.
     * The first one takes no arguments and provides the most simple
     * way to create object instance. The another one takes one
     * argument, which is the primary key of the corresponding table.
     */

    public ViewMedidasCautelares () {

    }

    public ViewMedidasCautelares (String je_nombreIn) {

          this.je_nombre = je_nombreIn;

    }


    /** 
     * Get- and Set-methods for persistent variables. The default
     * behaviour does not make any checks against malformed data,
     * so these might require some manual additions.
     */

    public String getJe_nombre() {
          return this.je_nombre;
    }
    public void setJe_nombre(String je_nombreIn) {
          this.je_nombre = je_nombreIn;
    }

    public String getJtp_codrunt() {
          return this.jtp_codrunt;
    }
    public void setJtp_codrunt(String jtp_codruntIn) {
          this.jtp_codrunt = jtp_codruntIn;
    }

    public String getJtp_nombre() {
          return this.jtp_nombre;
    }
    public void setJtp_nombre(String jtp_nombreIn) {
          this.jtp_nombre = jtp_nombreIn;
    }

    public String getJp_numrad_ente() {
          return this.jp_numrad_ente;
    }
    public void setJp_numrad_ente(String jp_numrad_enteIn) {
          this.jp_numrad_ente = jp_numrad_enteIn;
    }

    public String getJp_fecha() {
          return this.jp_fecha;
    }
    public void setJp_fecha(String jp_fechaIn) {
          this.jp_fecha = jp_fechaIn;
    }

    public int getJp_activo() {
          return this.jp_activo;
    }
    public void setJp_activo(int jp_activoIn) {
          this.jp_activo = jp_activoIn;
    }

    public String getJp_fin_sumario() {
          return this.jp_fin_sumario;
    }
    public void setJp_fin_sumario(String jp_fin_sumarioIn) {
          this.jp_fin_sumario = jp_fin_sumarioIn;
    }

    public int getJp_v_id() {
          return this.jp_v_id;
    }
    public void setJp_v_id(int jp_v_idIn) {
          this.jp_v_id = jp_v_idIn;
    }

    public String getJp_fin_num_ente() {
          return this.jp_fin_num_ente;
    }
    public void setJp_fin_num_ente(String jp_fin_num_enteIn) {
          this.jp_fin_num_ente = jp_fin_num_enteIn;
    }



    /** 
     * setAll allows to set all persistent variables in one method call.
     * This is useful, when all data is available and it is needed to 
     * set the initial state of this object. Note that this method will
     * directly modify instance variales, without going trough the 
     * individual set-methods.
     */

    public void setAll(String je_nombreIn,
          String jtp_codruntIn,
          String jtp_nombreIn,
          String jp_numrad_enteIn,
          String jp_fechaIn,
          int jp_activoIn,
          String jp_fin_sumarioIn,
          int jp_v_idIn,
          String jp_fin_num_enteIn) {
          this.je_nombre = je_nombreIn;
          this.jtp_codrunt = jtp_codruntIn;
          this.jtp_nombre = jtp_nombreIn;
          this.jp_numrad_ente = jp_numrad_enteIn;
          this.jp_fecha = jp_fechaIn;
          this.jp_activo = jp_activoIn;
          this.jp_fin_sumario = jp_fin_sumarioIn;
          this.jp_v_id = jp_v_idIn;
          this.jp_fin_num_ente = jp_fin_num_enteIn;
    }


    /** 
     * hasEqualMapping-method will compare two ViewMedidasCautelares instances
     * and return true if they contain same values in all persistent instance 
     * variables. If hasEqualMapping returns true, it does not mean the objects
     * are the same instance. However it does mean that in that moment, they 
     * are mapped to the same row in database.
     */
    public boolean hasEqualMapping(ViewMedidasCautelares valueObject) {

          if (this.je_nombre == null) {
                    if (valueObject.getJe_nombre() != null)
                           return(false);
          } else if (!this.je_nombre.equals(valueObject.getJe_nombre())) {
                    return(false);
          }
          if (this.jtp_codrunt == null) {
                    if (valueObject.getJtp_codrunt() != null)
                           return(false);
          } else if (!this.jtp_codrunt.equals(valueObject.getJtp_codrunt())) {
                    return(false);
          }
          if (this.jtp_nombre == null) {
                    if (valueObject.getJtp_nombre() != null)
                           return(false);
          } else if (!this.jtp_nombre.equals(valueObject.getJtp_nombre())) {
                    return(false);
          }
          if (this.jp_numrad_ente == null) {
                    if (valueObject.getJp_numrad_ente() != null)
                           return(false);
          } else if (!this.jp_numrad_ente.equals(valueObject.getJp_numrad_ente())) {
                    return(false);
          }
          if (this.jp_fecha == null) {
                    if (valueObject.getJp_fecha() != null)
                           return(false);
          } else if (!this.jp_fecha.equals(valueObject.getJp_fecha())) {
                    return(false);
          }
          if (valueObject.getJp_activo() != this.jp_activo) {
                    return(false);
          }
          if (this.jp_fin_sumario == null) {
                    if (valueObject.getJp_fin_sumario() != null)
                           return(false);
          } else if (!this.jp_fin_sumario.equals(valueObject.getJp_fin_sumario())) {
                    return(false);
          }
          if (valueObject.getJp_v_id() != this.jp_v_id) {
                    return(false);
          }
          if (this.jp_fin_num_ente == null) {
                    if (valueObject.getJp_fin_num_ente() != null)
                           return(false);
          } else if (!this.jp_fin_num_ente.equals(valueObject.getJp_fin_num_ente())) {
                    return(false);
          }

          return true;
    }



    /**
     * toString will return String object representing the state of this 
     * valueObject. This is useful during application development, and 
     * possibly when application is writing object states in textlog.
     */
    public String toString() {
        StringBuffer out = new StringBuffer(this.getDaogenVersion());
        out.append("\nclass ViewMedidasCautelares, mapping to table VIEW_MEDIDASCAUTELARES\n");
        out.append("Persistent attributes: \n"); 
        out.append("je_nombre = " + this.je_nombre + "\n"); 
        out.append("jtp_codrunt = " + this.jtp_codrunt + "\n"); 
        out.append("jtp_nombre = " + this.jtp_nombre + "\n"); 
        out.append("jp_numrad_ente = " + this.jp_numrad_ente + "\n"); 
        out.append("jp_fecha = " + this.jp_fecha + "\n"); 
        out.append("jp_activo = " + this.jp_activo + "\n"); 
        out.append("jp_fin_sumario = " + this.jp_fin_sumario + "\n"); 
        out.append("jp_v_id = " + this.jp_v_id + "\n"); 
        out.append("jp_fin_num_ente = " + this.jp_fin_num_ente + "\n"); 
        return out.toString();
    }


    /**
     * Clone will return identical deep copy of this valueObject.
     * Note, that this method is different than the clone() which
     * is defined in java.lang.Object. Here, the retuned cloned object
     * will also have all its attributes cloned.
     */
    public Object clone() {
        ViewMedidasCautelares cloned = new ViewMedidasCautelares();

        if (this.je_nombre != null)
             cloned.setJe_nombre(new String(this.je_nombre)); 
        if (this.jtp_codrunt != null)
             cloned.setJtp_codrunt(new String(this.jtp_codrunt)); 
        if (this.jtp_nombre != null)
             cloned.setJtp_nombre(new String(this.jtp_nombre)); 
        if (this.jp_numrad_ente != null)
             cloned.setJp_numrad_ente(new String(this.jp_numrad_ente)); 
        if (this.jp_fecha != null)
             cloned.setJp_fecha(new String(this.jp_fecha)); 
        cloned.setJp_activo(this.jp_activo); 
        if (this.jp_fin_sumario != null)
             cloned.setJp_fin_sumario(new String(this.jp_fin_sumario)); 
        cloned.setJp_v_id(this.jp_v_id); 
        if (this.jp_fin_num_ente != null)
             cloned.setJp_fin_num_ente(new String(this.jp_fin_num_ente)); 
        return cloned;
    }



    /** 
     * getDaogenVersion will return information about
     * generator which created these sources.
     */
    public String getDaogenVersion() {
        return "DaoGen version 2.4.1";
    }

}
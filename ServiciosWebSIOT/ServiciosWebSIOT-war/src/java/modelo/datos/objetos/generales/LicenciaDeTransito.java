package modelo.datos.objetos.generales;

import java.io.*;
import java.sql.*;
import java.util.*;
import java.math.*;

 /**
  * LicenciaDeTransito Value Object.
  * This class is value object representing database table LICENCIADETRANSITO
  * This class is intented to be used together with associated Dao object.
  */

 /**
  * This sourcecode has been generated by FREE DaoGen generator version 2.4.1.
  * The usage of generated code is restricted to OpenSource software projects
  * only. DaoGen is available in http://titaniclinux.net/daogen/
  * It has been programmed by Tuomo Lukka, Tuomo.Lukka@iki.fi
  *
  * DaoGen license: The following DaoGen generated source code is licensed
  * under the terms of GNU GPL license. The full text for license is available
  * in GNU project's pages: http://www.gnu.org/copyleft/gpl.html
  *
  * If you wish to use the DaoGen generator to produce code for closed-source
  * commercial applications, you must pay the lisence fee. The price is
  * 5 USD or 5 Eur for each database table, you are generating code for.
  * (That includes unlimited amount of iterations with all supported languages
  * for each database table you are paying for.) Send mail to
  * "Tuomo.Lukka@iki.fi" for more information. Thank you!
  */



public class LicenciaDeTransito implements Cloneable, Serializable {

    /** 
     * Persistent Instance variables. This data is directly 
     * mapped to the columns of database table.
     */
    private int GEN_IDTRANSITO;
    private String ID_LICTRANSITO;
    private String FECHA_EXP;
    private String PLACA;
    private int ID_TRANSITO;
    private String ANULADA;
    private int ID_VEHICULO;
    private int NUMRECIBO_LIQUIDACION;
    private int ID_RECIBOLIQ;
    private String NRODECLARACIONEXPORTACION;
    private int ID_MOTCANCELACON_LIC;
    private String NROCERTIFICADO_CHATA;
    private String RUNT_CANCELADA;



    /** 
     * Constructors. DaoGen generates two constructors by default.
     * The first one takes no arguments and provides the most simple
     * way to create object instance. The another one takes one
     * argument, which is the primary key of the corresponding table.
     */

    public LicenciaDeTransito () {

    }

    public LicenciaDeTransito (int GEN_IDTRANSITOIn) {

          this.GEN_IDTRANSITO = GEN_IDTRANSITOIn;

    }


    /** 
     * Get- and Set-methods for persistent variables. The default
     * behaviour does not make any checks against malformed data,
     * so these might require some manual additions.
     */

    public int getGEN_IDTRANSITO() {
          return this.GEN_IDTRANSITO;
    }
    public void setGEN_IDTRANSITO(int GEN_IDTRANSITOIn) {
          this.GEN_IDTRANSITO = GEN_IDTRANSITOIn;
    }

    public String getID_LICTRANSITO() {
          return this.ID_LICTRANSITO;
    }
    public void setID_LICTRANSITO(String ID_LICTRANSITOIn) {
          this.ID_LICTRANSITO = ID_LICTRANSITOIn;
    }

    public String getFECHA_EXP() {
          return this.FECHA_EXP;
    }
    public void setFECHA_EXP(String FECHA_EXPIn) {
          this.FECHA_EXP = FECHA_EXPIn;
    }

    public String getPLACA() {
          return this.PLACA;
    }
    public void setPLACA(String PLACAIn) {
          this.PLACA = PLACAIn;
    }

    public int getID_TRANSITO() {
          return this.ID_TRANSITO;
    }
    public void setID_TRANSITO(int ID_TRANSITOIn) {
          this.ID_TRANSITO = ID_TRANSITOIn;
    }

    public String getANULADA() {
          return this.ANULADA;
    }
    public void setANULADA(String ANULADAIn) {
          this.ANULADA = ANULADAIn;
    }

    public int getID_VEHICULO() {
          return this.ID_VEHICULO;
    }
    public void setID_VEHICULO(int ID_VEHICULOIn) {
          this.ID_VEHICULO = ID_VEHICULOIn;
    }

    public int getNUMRECIBO_LIQUIDACION() {
          return this.NUMRECIBO_LIQUIDACION;
    }
    public void setNUMRECIBO_LIQUIDACION(int NUMRECIBO_LIQUIDACIONIn) {
          this.NUMRECIBO_LIQUIDACION = NUMRECIBO_LIQUIDACIONIn;
    }

    public int getID_RECIBOLIQ() {
          return this.ID_RECIBOLIQ;
    }
    public void setID_RECIBOLIQ(int ID_RECIBOLIQIn) {
          this.ID_RECIBOLIQ = ID_RECIBOLIQIn;
    }

    public String getNRODECLARACIONEXPORTACION() {
          return this.NRODECLARACIONEXPORTACION;
    }
    public void setNRODECLARACIONEXPORTACION(String NRODECLARACIONEXPORTACIONIn) {
          this.NRODECLARACIONEXPORTACION = NRODECLARACIONEXPORTACIONIn;
    }

    public int getID_MOTCANCELACON_LIC() {
          return this.ID_MOTCANCELACON_LIC;
    }
    public void setID_MOTCANCELACON_LIC(int ID_MOTCANCELACON_LICIn) {
          this.ID_MOTCANCELACON_LIC = ID_MOTCANCELACON_LICIn;
    }

    public String getNROCERTIFICADO_CHATA() {
          return this.NROCERTIFICADO_CHATA;
    }
    public void setNROCERTIFICADO_CHATA(String NROCERTIFICADO_CHATAIn) {
          this.NROCERTIFICADO_CHATA = NROCERTIFICADO_CHATAIn;
    }

    public String getRUNT_CANCELADA() {
          return this.RUNT_CANCELADA;
    }
    public void setRUNT_CANCELADA(String RUNT_CANCELADAIn) {
          this.RUNT_CANCELADA = RUNT_CANCELADAIn;
    }



    /** 
     * setAll allows to set all persistent variables in one method call.
     * This is useful, when all data is available and it is needed to 
     * set the initial state of this object. Note that this method will
     * directly modify instance variales, without going trough the 
     * individual set-methods.
     */

    public void setAll(int GEN_IDTRANSITOIn,
          String ID_LICTRANSITOIn,
          String FECHA_EXPIn,
          String PLACAIn,
          int ID_TRANSITOIn,
          String ANULADAIn,
          int ID_VEHICULOIn,
          int NUMRECIBO_LIQUIDACIONIn,
          int ID_RECIBOLIQIn,
          String NRODECLARACIONEXPORTACIONIn,
          int ID_MOTCANCELACON_LICIn,
          String NROCERTIFICADO_CHATAIn,
          String RUNT_CANCELADAIn) {
          this.GEN_IDTRANSITO = GEN_IDTRANSITOIn;
          this.ID_LICTRANSITO = ID_LICTRANSITOIn;
          this.FECHA_EXP = FECHA_EXPIn;
          this.PLACA = PLACAIn;
          this.ID_TRANSITO = ID_TRANSITOIn;
          this.ANULADA = ANULADAIn;
          this.ID_VEHICULO = ID_VEHICULOIn;
          this.NUMRECIBO_LIQUIDACION = NUMRECIBO_LIQUIDACIONIn;
          this.ID_RECIBOLIQ = ID_RECIBOLIQIn;
          this.NRODECLARACIONEXPORTACION = NRODECLARACIONEXPORTACIONIn;
          this.ID_MOTCANCELACON_LIC = ID_MOTCANCELACON_LICIn;
          this.NROCERTIFICADO_CHATA = NROCERTIFICADO_CHATAIn;
          this.RUNT_CANCELADA = RUNT_CANCELADAIn;
    }


    /** 
     * hasEqualMapping-method will compare two LicenciaDeTransito instances
     * and return true if they contain same values in all persistent instance 
     * variables. If hasEqualMapping returns true, it does not mean the objects
     * are the same instance. However it does mean that in that moment, they 
     * are mapped to the same row in database.
     */
    public boolean hasEqualMapping(LicenciaDeTransito valueObject) {

          if (valueObject.getGEN_IDTRANSITO() != this.GEN_IDTRANSITO) {
                    return(false);
          }
          if (this.ID_LICTRANSITO == null) {
                    if (valueObject.getID_LICTRANSITO() != null)
                           return(false);
          } else if (!this.ID_LICTRANSITO.equals(valueObject.getID_LICTRANSITO())) {
                    return(false);
          }
          if (this.FECHA_EXP == null) {
                    if (valueObject.getFECHA_EXP() != null)
                           return(false);
          } else if (!this.FECHA_EXP.equals(valueObject.getFECHA_EXP())) {
                    return(false);
          }
          if (this.PLACA == null) {
                    if (valueObject.getPLACA() != null)
                           return(false);
          } else if (!this.PLACA.equals(valueObject.getPLACA())) {
                    return(false);
          }
          if (valueObject.getID_TRANSITO() != this.ID_TRANSITO) {
                    return(false);
          }
          if (this.ANULADA == null) {
                    if (valueObject.getANULADA() != null)
                           return(false);
          } else if (!this.ANULADA.equals(valueObject.getANULADA())) {
                    return(false);
          }
          if (valueObject.getID_VEHICULO() != this.ID_VEHICULO) {
                    return(false);
          }
          if (valueObject.getNUMRECIBO_LIQUIDACION() != this.NUMRECIBO_LIQUIDACION) {
                    return(false);
          }
          if (valueObject.getID_RECIBOLIQ() != this.ID_RECIBOLIQ) {
                    return(false);
          }
          if (this.NRODECLARACIONEXPORTACION == null) {
                    if (valueObject.getNRODECLARACIONEXPORTACION() != null)
                           return(false);
          } else if (!this.NRODECLARACIONEXPORTACION.equals(valueObject.getNRODECLARACIONEXPORTACION())) {
                    return(false);
          }
          if (valueObject.getID_MOTCANCELACON_LIC() != this.ID_MOTCANCELACON_LIC) {
                    return(false);
          }
          if (this.NROCERTIFICADO_CHATA == null) {
                    if (valueObject.getNROCERTIFICADO_CHATA() != null)
                           return(false);
          } else if (!this.NROCERTIFICADO_CHATA.equals(valueObject.getNROCERTIFICADO_CHATA())) {
                    return(false);
          }
          if (this.RUNT_CANCELADA == null) {
                    if (valueObject.getRUNT_CANCELADA() != null)
                           return(false);
          } else if (!this.RUNT_CANCELADA.equals(valueObject.getRUNT_CANCELADA())) {
                    return(false);
          }

          return true;
    }



    /**
     * toString will return String object representing the state of this 
     * valueObject. This is useful during application development, and 
     * possibly when application is writing object states in textlog.
     */
    public String toString() {
        StringBuffer out = new StringBuffer(this.getDaogenVersion());
        out.append("\nclass LicenciaDeTransito, mapping to table LICENCIADETRANSITO\n");
        out.append("Persistent attributes: \n"); 
        out.append("GEN_IDTRANSITO = " + this.GEN_IDTRANSITO + "\n"); 
        out.append("ID_LICTRANSITO = " + this.ID_LICTRANSITO + "\n"); 
        out.append("FECHA_EXP = " + this.FECHA_EXP + "\n"); 
        out.append("PLACA = " + this.PLACA + "\n"); 
        out.append("ID_TRANSITO = " + this.ID_TRANSITO + "\n"); 
        out.append("ANULADA = " + this.ANULADA + "\n"); 
        out.append("ID_VEHICULO = " + this.ID_VEHICULO + "\n"); 
        out.append("NUMRECIBO_LIQUIDACION = " + this.NUMRECIBO_LIQUIDACION + "\n"); 
        out.append("ID_RECIBOLIQ = " + this.ID_RECIBOLIQ + "\n"); 
        out.append("NRODECLARACIONEXPORTACION = " + this.NRODECLARACIONEXPORTACION + "\n"); 
        out.append("ID_MOTCANCELACON_LIC = " + this.ID_MOTCANCELACON_LIC + "\n"); 
        out.append("NROCERTIFICADO_CHATA = " + this.NROCERTIFICADO_CHATA + "\n"); 
        out.append("RUNT_CANCELADA = " + this.RUNT_CANCELADA + "\n"); 
        return out.toString();
    }


    /**
     * Clone will return identical deep copy of this valueObject.
     * Note, that this method is different than the clone() which
     * is defined in java.lang.Object. Here, the retuned cloned object
     * will also have all its attributes cloned.
     */
    public Object clone() {
        LicenciaDeTransito cloned = new LicenciaDeTransito();

        cloned.setGEN_IDTRANSITO(this.GEN_IDTRANSITO); 
        if (this.ID_LICTRANSITO != null)
             cloned.setID_LICTRANSITO(new String(this.ID_LICTRANSITO)); 
        if (this.FECHA_EXP != null)
             cloned.setFECHA_EXP(new String(this.FECHA_EXP)); 
        if (this.PLACA != null)
             cloned.setPLACA(new String(this.PLACA)); 
        cloned.setID_TRANSITO(this.ID_TRANSITO); 
        if (this.ANULADA != null)
             cloned.setANULADA(new String(this.ANULADA)); 
        cloned.setID_VEHICULO(this.ID_VEHICULO); 
        cloned.setNUMRECIBO_LIQUIDACION(this.NUMRECIBO_LIQUIDACION); 
        cloned.setID_RECIBOLIQ(this.ID_RECIBOLIQ); 
        if (this.NRODECLARACIONEXPORTACION != null)
             cloned.setNRODECLARACIONEXPORTACION(new String(this.NRODECLARACIONEXPORTACION)); 
        cloned.setID_MOTCANCELACON_LIC(this.ID_MOTCANCELACON_LIC); 
        if (this.NROCERTIFICADO_CHATA != null)
             cloned.setNROCERTIFICADO_CHATA(new String(this.NROCERTIFICADO_CHATA)); 
        if (this.RUNT_CANCELADA != null)
             cloned.setRUNT_CANCELADA(new String(this.RUNT_CANCELADA)); 
        return cloned;
    }



    /** 
     * getDaogenVersion will return information about
     * generator which created these sources.
     */
    public String getDaogenVersion() {
        return "DaoGen version 2.4.1";
    }

}
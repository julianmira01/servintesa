package modelo.datos.objetos.generales;

import java.io.*;
import java.sql.*;
import java.util.*;
import java.math.*;

 /**
  * Sucursal Value Object.
  * This class is value object representing database table SUCURSAL
  * This class is intented to be used together with associated Dao object.
  */

 /**
  * This sourcecode has been generated by FREE DaoGen generator version 2.4.1.
  * The usage of generated code is restricted to OpenSource software projects
  * only. DaoGen is available in http://titaniclinux.net/daogen/
  * It has been programmed by Tuomo Lukka, Tuomo.Lukka@iki.fi
  *
  * DaoGen license: The following DaoGen generated source code is licensed
  * under the terms of GNU GPL license. The full text for license is available
  * in GNU project's pages: http://www.gnu.org/copyleft/gpl.html
  *
  * If you wish to use the DaoGen generator to produce code for closed-source
  * commercial applications, you must pay the lisence fee. The price is
  * 5 USD or 5 Eur for each database table, you are generating code for.
  * (That includes unlimited amount of iterations with all supported languages
  * for each database table you are paying for.) Send mail to
  * "Tuomo.Lukka@iki.fi" for more information. Thank you!
  */



public class Sucursal implements Cloneable, Serializable {

    /** 
     * Persistent Instance variables. This data is directly 
     * mapped to the columns of database table.
     */
    private int ID_SUCURSAL;
    private int NRODIRECCION;
    private String DIRECCION;
    private String TELEFONO1;
    private String TELEFONO2;
    private String FAX1;
    private String FAX2;
    private String WEB;
    private int ID_PERSONA;
    private int ID_EMPRESA;
    private int ID_CIUDAD;
    private String FECHARES;
    private String EMAIL;
    private int IDTIPO;
    private String CELULAR;
    private String COD_TIPODIRECCION;
    private String DIRPRINCIPAL;
    private String ID_PAIS;
    private String ID_DEPARTAMENTO;



    /** 
     * Constructors. DaoGen generates two constructors by default.
     * The first one takes no arguments and provides the most simple
     * way to create object instance. The another one takes one
     * argument, which is the primary key of the corresponding table.
     */

    public Sucursal () {

    }

    public Sucursal (int ID_SUCURSALIn) {

          this.ID_SUCURSAL = ID_SUCURSALIn;

    }


    /** 
     * Get- and Set-methods for persistent variables. The default
     * behaviour does not make any checks against malformed data,
     * so these might require some manual additions.
     */

    public int getID_SUCURSAL() {
          return this.ID_SUCURSAL;
    }
    public void setID_SUCURSAL(int ID_SUCURSALIn) {
          this.ID_SUCURSAL = ID_SUCURSALIn;
    }

    public int getNRODIRECCION() {
          return this.NRODIRECCION;
    }
    public void setNRODIRECCION(int NRODIRECCIONIn) {
          this.NRODIRECCION = NRODIRECCIONIn;
    }

    public String getDIRECCION() {
          return this.DIRECCION;
    }
    public void setDIRECCION(String DIRECCIONIn) {
          this.DIRECCION = DIRECCIONIn;
    }

    public String getTELEFONO1() {
          return this.TELEFONO1;
    }
    public void setTELEFONO1(String TELEFONO1In) {
          this.TELEFONO1 = TELEFONO1In;
    }

    public String getTELEFONO2() {
          return this.TELEFONO2;
    }
    public void setTELEFONO2(String TELEFONO2In) {
          this.TELEFONO2 = TELEFONO2In;
    }

    public String getFAX1() {
          return this.FAX1;
    }
    public void setFAX1(String FAX1In) {
          this.FAX1 = FAX1In;
    }

    public String getFAX2() {
          return this.FAX2;
    }
    public void setFAX2(String FAX2In) {
          this.FAX2 = FAX2In;
    }

    public String getWEB() {
          return this.WEB;
    }
    public void setWEB(String WEBIn) {
          this.WEB = WEBIn;
    }

    public int getID_PERSONA() {
          return this.ID_PERSONA;
    }
    public void setID_PERSONA(int ID_PERSONAIn) {
          this.ID_PERSONA = ID_PERSONAIn;
    }

    public int getID_EMPRESA() {
          return this.ID_EMPRESA;
    }
    public void setID_EMPRESA(int ID_EMPRESAIn) {
          this.ID_EMPRESA = ID_EMPRESAIn;
    }

    public int getID_CIUDAD() {
          return this.ID_CIUDAD;
    }
    public void setID_CIUDAD(int ID_CIUDADIn) {
          this.ID_CIUDAD = ID_CIUDADIn;
    }

    public String getFECHARES() {
          return this.FECHARES;
    }
    public void setFECHARES(String FECHARESIn) {
          this.FECHARES = FECHARESIn;
    }

    public String getEMAIL() {
          return this.EMAIL;
    }
    public void setEMAIL(String EMAILIn) {
          this.EMAIL = EMAILIn;
    }

    public int getIDTIPO() {
          return this.IDTIPO;
    }
    public void setIDTIPO(int IDTIPOIn) {
          this.IDTIPO = IDTIPOIn;
    }

    public String getCELULAR() {
          return this.CELULAR;
    }
    public void setCELULAR(String CELULARIn) {
          this.CELULAR = CELULARIn;
    }

    public String getCOD_TIPODIRECCION() {
          return this.COD_TIPODIRECCION;
    }
    public void setCOD_TIPODIRECCION(String COD_TIPODIRECCIONIn) {
          this.COD_TIPODIRECCION = COD_TIPODIRECCIONIn;
    }

    public String getDIRPRINCIPAL() {
          return this.DIRPRINCIPAL;
    }
    public void setDIRPRINCIPAL(String DIRPRINCIPALIn) {
          this.DIRPRINCIPAL = DIRPRINCIPALIn;
    }



    /** 
     * setAll allows to set all persistent variables in one method call.
     * This is useful, when all data is available and it is needed to 
     * set the initial state of this object. Note that this method will
     * directly modify instance variales, without going trough the 
     * individual set-methods.
     */

    public void setAll(int ID_SUCURSALIn,
          int NRODIRECCIONIn,
          String DIRECCIONIn,
          String TELEFONO1In,
          String TELEFONO2In,
          String FAX1In,
          String FAX2In,
          String WEBIn,
          int ID_PERSONAIn,
          int ID_EMPRESAIn,
          int ID_CIUDADIn,
          String FECHARESIn,
          String EMAILIn,
          int IDTIPOIn,
          String CELULARIn,
          String COD_TIPODIRECCIONIn,
          String DIRPRINCIPALIn) {
          this.ID_SUCURSAL = ID_SUCURSALIn;
          this.NRODIRECCION = NRODIRECCIONIn;
          this.DIRECCION = DIRECCIONIn;
          this.TELEFONO1 = TELEFONO1In;
          this.TELEFONO2 = TELEFONO2In;
          this.FAX1 = FAX1In;
          this.FAX2 = FAX2In;
          this.WEB = WEBIn;
          this.ID_PERSONA = ID_PERSONAIn;
          this.ID_EMPRESA = ID_EMPRESAIn;
          this.ID_CIUDAD = ID_CIUDADIn;
          this.FECHARES = FECHARESIn;
          this.EMAIL = EMAILIn;
          this.IDTIPO = IDTIPOIn;
          this.CELULAR = CELULARIn;
          this.COD_TIPODIRECCION = COD_TIPODIRECCIONIn;
          this.DIRPRINCIPAL = DIRPRINCIPALIn;
    }


    /** 
     * hasEqualMapping-method will compare two Sucursal instances
     * and return true if they contain same values in all persistent instance 
     * variables. If hasEqualMapping returns true, it does not mean the objects
     * are the same instance. However it does mean that in that moment, they 
     * are mapped to the same row in database.
     */
    public boolean hasEqualMapping(Sucursal valueObject) {

          if (valueObject.getID_SUCURSAL() != this.ID_SUCURSAL) {
                    return(false);
          }
          if (valueObject.getNRODIRECCION() != this.NRODIRECCION) {
                    return(false);
          }
          if (this.DIRECCION == null) {
                    if (valueObject.getDIRECCION() != null)
                           return(false);
          } else if (!this.DIRECCION.equals(valueObject.getDIRECCION())) {
                    return(false);
          }
          if (this.TELEFONO1 == null) {
                    if (valueObject.getTELEFONO1() != null)
                           return(false);
          } else if (!this.TELEFONO1.equals(valueObject.getTELEFONO1())) {
                    return(false);
          }
          if (this.TELEFONO2 == null) {
                    if (valueObject.getTELEFONO2() != null)
                           return(false);
          } else if (!this.TELEFONO2.equals(valueObject.getTELEFONO2())) {
                    return(false);
          }
          if (this.FAX1 == null) {
                    if (valueObject.getFAX1() != null)
                           return(false);
          } else if (!this.FAX1.equals(valueObject.getFAX1())) {
                    return(false);
          }
          if (this.FAX2 == null) {
                    if (valueObject.getFAX2() != null)
                           return(false);
          } else if (!this.FAX2.equals(valueObject.getFAX2())) {
                    return(false);
          }
          if (this.WEB == null) {
                    if (valueObject.getWEB() != null)
                           return(false);
          } else if (!this.WEB.equals(valueObject.getWEB())) {
                    return(false);
          }
          if (valueObject.getID_PERSONA() != this.ID_PERSONA) {
                    return(false);
          }
          if (valueObject.getID_EMPRESA() != this.ID_EMPRESA) {
                    return(false);
          }
          if (valueObject.getID_CIUDAD() != this.ID_CIUDAD) {
                    return(false);
          }
          if (this.FECHARES == null) {
                    if (valueObject.getFECHARES() != null)
                           return(false);
          } else if (!this.FECHARES.equals(valueObject.getFECHARES())) {
                    return(false);
          }
          if (this.EMAIL == null) {
                    if (valueObject.getEMAIL() != null)
                           return(false);
          } else if (!this.EMAIL.equals(valueObject.getEMAIL())) {
                    return(false);
          }
          if (valueObject.getIDTIPO() != this.IDTIPO) {
                    return(false);
          }
          if (this.CELULAR == null) {
                    if (valueObject.getCELULAR() != null)
                           return(false);
          } else if (!this.CELULAR.equals(valueObject.getCELULAR())) {
                    return(false);
          }
          if (this.COD_TIPODIRECCION == null) {
                    if (valueObject.getCOD_TIPODIRECCION() != null)
                           return(false);
          } else if (!this.COD_TIPODIRECCION.equals(valueObject.getCOD_TIPODIRECCION())) {
                    return(false);
          }
          if (this.DIRPRINCIPAL == null) {
                    if (valueObject.getDIRPRINCIPAL() != null)
                           return(false);
          } else if (!this.DIRPRINCIPAL.equals(valueObject.getDIRPRINCIPAL())) {
                    return(false);
          }

          return true;
    }



    /**
     * toString will return String object representing the state of this 
     * valueObject. This is useful during application development, and 
     * possibly when application is writing object states in textlog.
     */
    public String toString() {
        StringBuffer out = new StringBuffer(this.getDaogenVersion());
        out.append("\nclass Sucursal, mapping to table SUCURSAL\n");
        out.append("Persistent attributes: \n"); 
        out.append("ID_SUCURSAL = " + this.ID_SUCURSAL + "\n"); 
        out.append("NRODIRECCION = " + this.NRODIRECCION + "\n"); 
        out.append("DIRECCION = " + this.DIRECCION + "\n"); 
        out.append("TELEFONO1 = " + this.TELEFONO1 + "\n"); 
        out.append("TELEFONO2 = " + this.TELEFONO2 + "\n"); 
        out.append("FAX1 = " + this.FAX1 + "\n"); 
        out.append("FAX2 = " + this.FAX2 + "\n"); 
        out.append("WEB = " + this.WEB + "\n"); 
        out.append("ID_PERSONA = " + this.ID_PERSONA + "\n"); 
        out.append("ID_EMPRESA = " + this.ID_EMPRESA + "\n"); 
        out.append("ID_CIUDAD = " + this.ID_CIUDAD + "\n"); 
        out.append("FECHARES = " + this.FECHARES + "\n"); 
        out.append("EMAIL = " + this.EMAIL + "\n"); 
        out.append("IDTIPO = " + this.IDTIPO + "\n"); 
        out.append("CELULAR = " + this.CELULAR + "\n"); 
        out.append("COD_TIPODIRECCION = " + this.COD_TIPODIRECCION + "\n"); 
        out.append("DIRPRINCIPAL = " + this.DIRPRINCIPAL + "\n"); 
        return out.toString();
    }


    /**
     * Clone will return identical deep copy of this valueObject.
     * Note, that this method is different than the clone() which
     * is defined in java.lang.Object. Here, the retuned cloned object
     * will also have all its attributes cloned.
     */
    public Object clone() {
        Sucursal cloned = new Sucursal();

        cloned.setID_SUCURSAL(this.ID_SUCURSAL); 
        cloned.setNRODIRECCION(this.NRODIRECCION); 
        if (this.DIRECCION != null)
             cloned.setDIRECCION(new String(this.DIRECCION)); 
        if (this.TELEFONO1 != null)
             cloned.setTELEFONO1(new String(this.TELEFONO1)); 
        if (this.TELEFONO2 != null)
             cloned.setTELEFONO2(new String(this.TELEFONO2)); 
        if (this.FAX1 != null)
             cloned.setFAX1(new String(this.FAX1)); 
        if (this.FAX2 != null)
             cloned.setFAX2(new String(this.FAX2)); 
        if (this.WEB != null)
             cloned.setWEB(new String(this.WEB)); 
        cloned.setID_PERSONA(this.ID_PERSONA); 
        cloned.setID_EMPRESA(this.ID_EMPRESA); 
        cloned.setID_CIUDAD(this.ID_CIUDAD); 
        if (this.FECHARES != null)
             cloned.setFECHARES(new String(this.FECHARES)); 
        if (this.EMAIL != null)
             cloned.setEMAIL(new String(this.EMAIL)); 
        cloned.setIDTIPO(this.IDTIPO); 
        if (this.CELULAR != null)
             cloned.setCELULAR(new String(this.CELULAR)); 
        if (this.COD_TIPODIRECCION != null)
             cloned.setCOD_TIPODIRECCION(new String(this.COD_TIPODIRECCION)); 
        if (this.DIRPRINCIPAL != null)
             cloned.setDIRPRINCIPAL(new String(this.DIRPRINCIPAL)); 
        return cloned;
    }
    
  
    /** 
     * getDaogenVersion will return information about
     * generator which created these sources.
     */
    public String getDaogenVersion() {
        return "DaoGen version 2.4.1";
    }

    public String getID_PAIS() {
        return ID_PAIS;
    }

    public void setID_PAIS(String ID_PAIS) {
        this.ID_PAIS = ID_PAIS;
    }

    public String getID_DEPARTAMENTO() {
        return ID_DEPARTAMENTO;
    }

    public void setID_DEPARTAMENTO(String ID_DEPARTAMENTO) {
        this.ID_DEPARTAMENTO = ID_DEPARTAMENTO;
    }
}

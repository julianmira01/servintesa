package modelo.datos.objetos.generales;


import java.io.*;
import java.sql.*;
import java.util.*;
import java.math.*;

 /**
  * AuditoriaSystem Value Object.
  * This class is value object representing database table AUDITORIASYSTEM
  * This class is intented to be used together with associated Dao object.
  */

 /**
  * This sourcecode has been generated by FREE DaoGen generator version 2.4.1.
  * The usage of generated code is restricted to OpenSource software projects
  * only. DaoGen is available in http://titaniclinux.net/daogen/
  * It has been programmed by Tuomo Lukka, Tuomo.Lukka@iki.fi
  *
  * DaoGen license: The following DaoGen generated source code is licensed
  * under the terms of GNU GPL license. The full text for license is available
  * in GNU project's pages: http://www.gnu.org/copyleft/gpl.html
  *
  * If you wish to use the DaoGen generator to produce code for closed-source
  * commercial applications, you must pay the lisence fee. The price is
  * 5 USD or 5 Eur for each database table, you are generating code for.
  * (That includes unlimited amount of iterations with all supported languages
  * for each database table you are paying for.) Send mail to
  * "Tuomo.Lukka@iki.fi" for more information. Thank you!
  */



public class AuditoriaSystem implements Cloneable, Serializable {

    /** 
     * Persistent Instance variables. This data is directly 
     * mapped to the columns of database table.
     */
    private int ID_AUDSYSTEM;
    private String CAMPOCLAVE;
    private String TIPOPERACION;
    private int ID_USUARIO;
    private String FECHAOPERACION;
    private String HORAOPERACION;
    private String TABLAAFECTADA;
    private String DESCRIPOPERACION;
    private String VLRCAMPOCLAVE;
    private String NOMBREEQUIPO;
    private String IP;



    /** 
     * Constructors. DaoGen generates two constructors by default.
     * The first one takes no arguments and provides the most simple
     * way to create object instance. The another one takes one
     * argument, which is the primary key of the corresponding table.
     */

    public AuditoriaSystem () {

    }

    public AuditoriaSystem (int ID_AUDSYSTEMIn) {

          this.ID_AUDSYSTEM = ID_AUDSYSTEMIn;

    }


    /** 
     * Get- and Set-methods for persistent variables. The default
     * behaviour does not make any checks against malformed data,
     * so these might require some manual additions.
     */

    public int getID_AUDSYSTEM() {
          return this.ID_AUDSYSTEM;
    }
    public void setID_AUDSYSTEM(int ID_AUDSYSTEMIn) {
          this.ID_AUDSYSTEM = ID_AUDSYSTEMIn;
    }

    public String getCAMPOCLAVE() {
          return this.CAMPOCLAVE;
    }
    public void setCAMPOCLAVE(String CAMPOCLAVEIn) {
          this.CAMPOCLAVE = CAMPOCLAVEIn;
    }

    public String getTIPOPERACION() {
          return this.TIPOPERACION;
    }
    public void setTIPOPERACION(String TIPOPERACIONIn) {
          this.TIPOPERACION = TIPOPERACIONIn;
    }

    public int getID_USUARIO() {
          return this.ID_USUARIO;
    }
    public void setID_USUARIO(int ID_USUARIOIn) {
          this.ID_USUARIO = ID_USUARIOIn;
    }

    public String getFECHAOPERACION() {
          return this.FECHAOPERACION;
    }
    public void setFECHAOPERACION(String FECHAOPERACIONIn) {
          this.FECHAOPERACION = FECHAOPERACIONIn;
    }

    public String getHORAOPERACION() {
          return this.HORAOPERACION;
    }
    public void setHORAOPERACION(String HORAOPERACIONIn) {
          this.HORAOPERACION = HORAOPERACIONIn;
    }

    public String getTABLAAFECTADA() {
          return this.TABLAAFECTADA;
    }
    public void setTABLAAFECTADA(String TABLAAFECTADAIn) {
          this.TABLAAFECTADA = TABLAAFECTADAIn;
    }

    public String getDESCRIPOPERACION() {
          return this.DESCRIPOPERACION;
    }
    public void setDESCRIPOPERACION(String DESCRIPOPERACIONIn) {
          this.DESCRIPOPERACION = DESCRIPOPERACIONIn;
    }

    public String getVLRCAMPOCLAVE() {
          return this.VLRCAMPOCLAVE;
    }
    public void setVLRCAMPOCLAVE(String VLRCAMPOCLAVEIn) {
          this.VLRCAMPOCLAVE = VLRCAMPOCLAVEIn;
    }

    public String getNOMBREEQUIPO() {
          return this.NOMBREEQUIPO;
    }
    public void setNOMBREEQUIPO(String NOMBREEQUIPOIn) {
          this.NOMBREEQUIPO = NOMBREEQUIPOIn;
    }

    public String getIP() {
          return this.IP;
    }
    public void setIP(String IPIn) {
          this.IP = IPIn;
    }



    /** 
     * setAll allows to set all persistent variables in one method call.
     * This is useful, when all data is available and it is needed to 
     * set the initial state of this object. Note that this method will
     * directly modify instance variales, without going trough the 
     * individual set-methods.
     */

    public void setAll(int ID_AUDSYSTEMIn,
          String CAMPOCLAVEIn,
          String TIPOPERACIONIn,
          int ID_USUARIOIn,
          String FECHAOPERACIONIn,
          String HORAOPERACIONIn,
          String TABLAAFECTADAIn,
          String DESCRIPOPERACIONIn,
          String VLRCAMPOCLAVEIn,
          String NOMBREEQUIPOIn,
          String IPIn) {
          this.ID_AUDSYSTEM = ID_AUDSYSTEMIn;
          this.CAMPOCLAVE = CAMPOCLAVEIn;
          this.TIPOPERACION = TIPOPERACIONIn;
          this.ID_USUARIO = ID_USUARIOIn;
          this.FECHAOPERACION = FECHAOPERACIONIn;
          this.HORAOPERACION = HORAOPERACIONIn;
          this.TABLAAFECTADA = TABLAAFECTADAIn;
          this.DESCRIPOPERACION = DESCRIPOPERACIONIn;
          this.VLRCAMPOCLAVE = VLRCAMPOCLAVEIn;
          this.NOMBREEQUIPO = NOMBREEQUIPOIn;
          this.IP = IPIn;
    }


    /** 
     * hasEqualMapping-method will compare two AuditoriaSystem instances
     * and return true if they contain same values in all persistent instance 
     * variables. If hasEqualMapping returns true, it does not mean the objects
     * are the same instance. However it does mean that in that moment, they 
     * are mapped to the same row in database.
     */
    public boolean hasEqualMapping(AuditoriaSystem valueObject) {

          if (valueObject.getID_AUDSYSTEM() != this.ID_AUDSYSTEM) {
                    return(false);
          }
          if (this.CAMPOCLAVE == null) {
                    if (valueObject.getCAMPOCLAVE() != null)
                           return(false);
          } else if (!this.CAMPOCLAVE.equals(valueObject.getCAMPOCLAVE())) {
                    return(false);
          }
          if (this.TIPOPERACION == null) {
                    if (valueObject.getTIPOPERACION() != null)
                           return(false);
          } else if (!this.TIPOPERACION.equals(valueObject.getTIPOPERACION())) {
                    return(false);
          }
          if (valueObject.getID_USUARIO() != this.ID_USUARIO) {
                    return(false);
          }
          if (this.FECHAOPERACION == null) {
                    if (valueObject.getFECHAOPERACION() != null)
                           return(false);
          } else if (!this.FECHAOPERACION.equals(valueObject.getFECHAOPERACION())) {
                    return(false);
          }
          if (this.HORAOPERACION == null) {
                    if (valueObject.getHORAOPERACION() != null)
                           return(false);
          } else if (!this.HORAOPERACION.equals(valueObject.getHORAOPERACION())) {
                    return(false);
          }
          if (this.TABLAAFECTADA == null) {
                    if (valueObject.getTABLAAFECTADA() != null)
                           return(false);
          } else if (!this.TABLAAFECTADA.equals(valueObject.getTABLAAFECTADA())) {
                    return(false);
          }
          if (this.DESCRIPOPERACION == null) {
                    if (valueObject.getDESCRIPOPERACION() != null)
                           return(false);
          } else if (!this.DESCRIPOPERACION.equals(valueObject.getDESCRIPOPERACION())) {
                    return(false);
          }
          if (this.VLRCAMPOCLAVE == null) {
                    if (valueObject.getVLRCAMPOCLAVE() != null)
                           return(false);
          } else if (!this.VLRCAMPOCLAVE.equals(valueObject.getVLRCAMPOCLAVE())) {
                    return(false);
          }
          if (this.NOMBREEQUIPO == null) {
                    if (valueObject.getNOMBREEQUIPO() != null)
                           return(false);
          } else if (!this.NOMBREEQUIPO.equals(valueObject.getNOMBREEQUIPO())) {
                    return(false);
          }
          if (this.IP == null) {
                    if (valueObject.getIP() != null)
                           return(false);
          } else if (!this.IP.equals(valueObject.getIP())) {
                    return(false);
          }

          return true;
    }



    /**
     * toString will return String object representing the state of this 
     * valueObject. This is useful during application development, and 
     * possibly when application is writing object states in textlog.
     */
    public String toString() {
        StringBuffer out = new StringBuffer(this.getDaogenVersion());
        out.append("\nclass AuditoriaSystem, mapping to table AUDITORIASYSTEM\n");
        out.append("Persistent attributes: \n"); 
        out.append("ID_AUDSYSTEM = " + this.ID_AUDSYSTEM + "\n"); 
        out.append("CAMPOCLAVE = " + this.CAMPOCLAVE + "\n"); 
        out.append("TIPOPERACION = " + this.TIPOPERACION + "\n"); 
        out.append("ID_USUARIO = " + this.ID_USUARIO + "\n"); 
        out.append("FECHAOPERACION = " + this.FECHAOPERACION + "\n"); 
        out.append("HORAOPERACION = " + this.HORAOPERACION + "\n"); 
        out.append("TABLAAFECTADA = " + this.TABLAAFECTADA + "\n"); 
        out.append("DESCRIPOPERACION = " + this.DESCRIPOPERACION + "\n"); 
        out.append("VLRCAMPOCLAVE = " + this.VLRCAMPOCLAVE + "\n"); 
        out.append("NOMBREEQUIPO = " + this.NOMBREEQUIPO + "\n"); 
        out.append("IP = " + this.IP + "\n"); 
        return out.toString();
    }


    /**
     * Clone will return identical deep copy of this valueObject.
     * Note, that this method is different than the clone() which
     * is defined in java.lang.Object. Here, the retuned cloned object
     * will also have all its attributes cloned.
     */
    public Object clone() {
        AuditoriaSystem cloned = new AuditoriaSystem();

        cloned.setID_AUDSYSTEM(this.ID_AUDSYSTEM); 
        if (this.CAMPOCLAVE != null)
             cloned.setCAMPOCLAVE(new String(this.CAMPOCLAVE)); 
        if (this.TIPOPERACION != null)
             cloned.setTIPOPERACION(new String(this.TIPOPERACION)); 
        cloned.setID_USUARIO(this.ID_USUARIO); 
        if (this.FECHAOPERACION != null)
             cloned.setFECHAOPERACION(new String(this.FECHAOPERACION)); 
        if (this.HORAOPERACION != null)
             cloned.setHORAOPERACION(new String(this.HORAOPERACION)); 
        if (this.TABLAAFECTADA != null)
             cloned.setTABLAAFECTADA(new String(this.TABLAAFECTADA)); 
        if (this.DESCRIPOPERACION != null)
             cloned.setDESCRIPOPERACION(new String(this.DESCRIPOPERACION)); 
        if (this.VLRCAMPOCLAVE != null)
             cloned.setVLRCAMPOCLAVE(new String(this.VLRCAMPOCLAVE)); 
        if (this.NOMBREEQUIPO != null)
             cloned.setNOMBREEQUIPO(new String(this.NOMBREEQUIPO)); 
        if (this.IP != null)
             cloned.setIP(new String(this.IP)); 
        return cloned;
    }



    /** 
     * getDaogenVersion will return information about
     * generator which created these sources.
     */
    public String getDaogenVersion() {
        return "DaoGen version 2.4.1";
    }

}


package modelo.datos.objetos.generales;

import java.io.*;
import java.sql.*;
import java.util.*;
import java.math.*;

 /**
  * RuntDuplicadoPlaca Value Object.
  * This class is value object representing database table RUNTDUPLICADOPLACA
  * This class is intented to be used together with associated Dao object.
  */

 /**
  * This sourcecode has been generated by FREE DaoGen generator version 2.4.1.
  * The usage of generated code is restricted to OpenSource software projects
  * only. DaoGen is available in http://titaniclinux.net/daogen/
  * It has been programmed by Tuomo Lukka, Tuomo.Lukka@iki.fi
  *
  * DaoGen license: The following DaoGen generated source code is licensed
  * under the terms of GNU GPL license. The full text for license is available
  * in GNU project's pages: http://www.gnu.org/copyleft/gpl.html
  *
  * If you wish to use the DaoGen generator to produce code for closed-source
  * commercial applications, you must pay the lisence fee. The price is
  * 5 USD or 5 Eur for each database table, you are generating code for.
  * (That includes unlimited amount of iterations with all supported languages
  * for each database table you are paying for.) Send mail to
  * "Tuomo.Lukka@iki.fi" for more information. Thank you!
  */



public class RuntDuplicadoPlaca implements Cloneable, Serializable {

    /** 
     * Persistent Instance variables. This data is directly 
     * mapped to the columns of database table.
     */
    private int ID_RUNTDUPLICADOPLACA;
    private int ID_VEHICULO;
    private String PLACA;
    private int ID_RUNTMOTIVODUPLICADO;
    private String FECHA;
    private int ID_DUPLICADOPLACA;
    private int ID_MOTIVODUPLICADO;
    private int CANTIDAD;
    private String ACTIVO;
    private int ID_RECIBOLIQ;
    private int ID_USUARIO;



    /** 
     * Constructors. DaoGen generates two constructors by default.
     * The first one takes no arguments and provides the most simple
     * way to create object instance. The another one takes one
     * argument, which is the primary key of the corresponding table.
     */

    public RuntDuplicadoPlaca () {

    }

    public RuntDuplicadoPlaca (int ID_RUNTDUPLICADOPLACAIn) {

          this.ID_RUNTDUPLICADOPLACA = ID_RUNTDUPLICADOPLACAIn;

    }


    /** 
     * Get- and Set-methods for persistent variables. The default
     * behaviour does not make any checks against malformed data,
     * so these might require some manual additions.
     */

    public int getID_RUNTDUPLICADOPLACA() {
          return this.ID_RUNTDUPLICADOPLACA;
    }
    public void setID_RUNTDUPLICADOPLACA(int ID_RUNTDUPLICADOPLACAIn) {
          this.ID_RUNTDUPLICADOPLACA = ID_RUNTDUPLICADOPLACAIn;
    }

    public int getID_VEHICULO() {
          return this.ID_VEHICULO;
    }
    public void setID_VEHICULO(int ID_VEHICULOIn) {
          this.ID_VEHICULO = ID_VEHICULOIn;
    }

    public String getPLACA() {
          return this.PLACA;
    }
    public void setPLACA(String PLACAIn) {
          this.PLACA = PLACAIn;
    }

    public int getID_RUNTMOTIVODUPLICADO() {
          return this.ID_RUNTMOTIVODUPLICADO;
    }
    public void setID_RUNTMOTIVODUPLICADO(int ID_RUNTMOTIVODUPLICADOIn) {
          this.ID_RUNTMOTIVODUPLICADO = ID_RUNTMOTIVODUPLICADOIn;
    }

    public String getFECHA() {
          return this.FECHA;
    }
    public void setFECHA(String FECHAIn) {
          this.FECHA = FECHAIn;
    }

    public int getID_DUPLICADOPLACA() {
          return this.ID_DUPLICADOPLACA;
    }
    public void setID_DUPLICADOPLACA(int ID_DUPLICADOPLACAIn) {
          this.ID_DUPLICADOPLACA = ID_DUPLICADOPLACAIn;
    }

    public int getID_MOTIVODUPLICADO() {
          return this.ID_MOTIVODUPLICADO;
    }
    public void setID_MOTIVODUPLICADO(int ID_MOTIVODUPLICADOIn) {
          this.ID_MOTIVODUPLICADO = ID_MOTIVODUPLICADOIn;
    }

    public int getCANTIDAD() {
          return this.CANTIDAD;
    }
    public void setCANTIDAD(int CANTIDADIn) {
          this.CANTIDAD = CANTIDADIn;
    }

    public String getACTIVO() {
          return this.ACTIVO;
    }
    public void setACTIVO(String ACTIVOIn) {
          this.ACTIVO = ACTIVOIn;
    }

    public int getID_RECIBOLIQ() {
          return this.ID_RECIBOLIQ;
    }
    public void setID_RECIBOLIQ(int ID_RECIBOLIQIn) {
          this.ID_RECIBOLIQ = ID_RECIBOLIQIn;
    }

    public int getID_USUARIO() {
          return this.ID_USUARIO;
    }
    public void setID_USUARIO(int ID_USUARIOIn) {
          this.ID_USUARIO = ID_USUARIOIn;
    }



    /** 
     * setAll allows to set all persistent variables in one method call.
     * This is useful, when all data is available and it is needed to 
     * set the initial state of this object. Note that this method will
     * directly modify instance variales, without going trough the 
     * individual set-methods.
     */

    public void setAll(int ID_RUNTDUPLICADOPLACAIn,
          int ID_VEHICULOIn,
          String PLACAIn,
          int ID_RUNTMOTIVODUPLICADOIn,
          String FECHAIn,
          int ID_DUPLICADOPLACAIn,
          int ID_MOTIVODUPLICADOIn,
          int CANTIDADIn,
          String ACTIVOIn,
          int ID_RECIBOLIQIn,
          int ID_USUARIOIn) {
          this.ID_RUNTDUPLICADOPLACA = ID_RUNTDUPLICADOPLACAIn;
          this.ID_VEHICULO = ID_VEHICULOIn;
          this.PLACA = PLACAIn;
          this.ID_RUNTMOTIVODUPLICADO = ID_RUNTMOTIVODUPLICADOIn;
          this.FECHA = FECHAIn;
          this.ID_DUPLICADOPLACA = ID_DUPLICADOPLACAIn;
          this.ID_MOTIVODUPLICADO = ID_MOTIVODUPLICADOIn;
          this.CANTIDAD = CANTIDADIn;
          this.ACTIVO = ACTIVOIn;
          this.ID_RECIBOLIQ = ID_RECIBOLIQIn;
          this.ID_USUARIO = ID_USUARIOIn;
    }


    /** 
     * hasEqualMapping-method will compare two RuntDuplicadoPlaca instances
     * and return true if they contain same values in all persistent instance 
     * variables. If hasEqualMapping returns true, it does not mean the objects
     * are the same instance. However it does mean that in that moment, they 
     * are mapped to the same row in database.
     */
    public boolean hasEqualMapping(RuntDuplicadoPlaca valueObject) {

          if (valueObject.getID_RUNTDUPLICADOPLACA() != this.ID_RUNTDUPLICADOPLACA) {
                    return(false);
          }
          if (valueObject.getID_VEHICULO() != this.ID_VEHICULO) {
                    return(false);
          }
          if (this.PLACA == null) {
                    if (valueObject.getPLACA() != null)
                           return(false);
          } else if (!this.PLACA.equals(valueObject.getPLACA())) {
                    return(false);
          }
          if (valueObject.getID_RUNTMOTIVODUPLICADO() != this.ID_RUNTMOTIVODUPLICADO) {
                    return(false);
          }
          if (this.FECHA == null) {
                    if (valueObject.getFECHA() != null)
                           return(false);
          } else if (!this.FECHA.equals(valueObject.getFECHA())) {
                    return(false);
          }
          if (valueObject.getID_DUPLICADOPLACA() != this.ID_DUPLICADOPLACA) {
                    return(false);
          }
          if (valueObject.getID_MOTIVODUPLICADO() != this.ID_MOTIVODUPLICADO) {
                    return(false);
          }
          if (valueObject.getCANTIDAD() != this.CANTIDAD) {
                    return(false);
          }
          if (this.ACTIVO == null) {
                    if (valueObject.getACTIVO() != null)
                           return(false);
          } else if (!this.ACTIVO.equals(valueObject.getACTIVO())) {
                    return(false);
          }
          if (valueObject.getID_RECIBOLIQ() != this.ID_RECIBOLIQ) {
                    return(false);
          }
          if (valueObject.getID_USUARIO() != this.ID_USUARIO) {
                    return(false);
          }

          return true;
    }



    /**
     * toString will return String object representing the state of this 
     * valueObject. This is useful during application development, and 
     * possibly when application is writing object states in textlog.
     */
    public String toString() {
        StringBuffer out = new StringBuffer(this.getDaogenVersion());
        out.append("\nclass RuntDuplicadoPlaca, mapping to table RUNTDUPLICADOPLACA\n");
        out.append("Persistent attributes: \n"); 
        out.append("ID_RUNTDUPLICADOPLACA = " + this.ID_RUNTDUPLICADOPLACA + "\n"); 
        out.append("ID_VEHICULO = " + this.ID_VEHICULO + "\n"); 
        out.append("PLACA = " + this.PLACA + "\n"); 
        out.append("ID_RUNTMOTIVODUPLICADO = " + this.ID_RUNTMOTIVODUPLICADO + "\n"); 
        out.append("FECHA = " + this.FECHA + "\n"); 
        out.append("ID_DUPLICADOPLACA = " + this.ID_DUPLICADOPLACA + "\n"); 
        out.append("ID_MOTIVODUPLICADO = " + this.ID_MOTIVODUPLICADO + "\n"); 
        out.append("CANTIDAD = " + this.CANTIDAD + "\n"); 
        out.append("ACTIVO = " + this.ACTIVO + "\n"); 
        out.append("ID_RECIBOLIQ = " + this.ID_RECIBOLIQ + "\n"); 
        out.append("ID_USUARIO = " + this.ID_USUARIO + "\n"); 
        return out.toString();
    }


    /**
     * Clone will return identical deep copy of this valueObject.
     * Note, that this method is different than the clone() which
     * is defined in java.lang.Object. Here, the retuned cloned object
     * will also have all its attributes cloned.
     */
    public Object clone() {
        RuntDuplicadoPlaca cloned = new RuntDuplicadoPlaca();

        cloned.setID_RUNTDUPLICADOPLACA(this.ID_RUNTDUPLICADOPLACA); 
        cloned.setID_VEHICULO(this.ID_VEHICULO); 
        if (this.PLACA != null)
             cloned.setPLACA(new String(this.PLACA)); 
        cloned.setID_RUNTMOTIVODUPLICADO(this.ID_RUNTMOTIVODUPLICADO); 
        if (this.FECHA != null)
             cloned.setFECHA(new String(this.FECHA)); 
        cloned.setID_DUPLICADOPLACA(this.ID_DUPLICADOPLACA); 
        cloned.setID_MOTIVODUPLICADO(this.ID_MOTIVODUPLICADO); 
        cloned.setCANTIDAD(this.CANTIDAD); 
        if (this.ACTIVO != null)
             cloned.setACTIVO(new String(this.ACTIVO)); 
        cloned.setID_RECIBOLIQ(this.ID_RECIBOLIQ); 
        cloned.setID_USUARIO(this.ID_USUARIO); 
        return cloned;
    }



    /** 
     * getDaogenVersion will return information about
     * generator which created these sources.
     */
    public String getDaogenVersion() {
        return "DaoGen version 2.4.1";
    }

}
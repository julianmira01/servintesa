package modelo.datos.objetos.liquidacion;

import java.io.*;
import java.sql.*;
import java.util.*;
import java.math.*;

 /**
  * ConceptosTarifa Value Object.
  * This class is value object representing database table VISTA_CONCEPTOSTARIFA
  * This class is intented to be used together with associated Dao object.
  */

 /**
  * This sourcecode has been generated by FREE DaoGen generator version 2.4.1.
  * The usage of generated code is restricted to OpenSource software projects
  * only. DaoGen is available in http://titaniclinux.net/daogen/
  * It has been programmed by Tuomo Lukka, Tuomo.Lukka@iki.fi
  *
  * DaoGen license: The following DaoGen generated source code is licensed
  * under the terms of GNU GPL license. The full text for license is available
  * in GNU project's pages: http://www.gnu.org/copyleft/gpl.html
  *
  * If you wish to use the DaoGen generator to produce code for closed-source
  * commercial applications, you must pay the lisence fee. The price is
  * 5 USD or 5 Eur for each database table, you are generating code for.
  * (That includes unlimited amount of iterations with all supported languages
  * for each database table you are paying for.) Send mail to
  * "Tuomo.Lukka@iki.fi" for more information. Thank you!
  */



public class ConceptosTarifa implements Cloneable, Serializable {

    /** 
     * Persistent Instance variables. This data is directly 
     * mapped to the columns of database table.
     */
    private int LT_ID;
    private String LCC_ID;
    private String LCC_NOMBRE;
    private String LTD_ID;
    private String LT_NOMBRE;
    private String LT_VIGENCIA;
    private String LTD_TIPO;
    private String LTD_VALOR;
    private String LTD_DATO_BASE;
    private String LTD_FACTOR;
    private String LTD_CALCULO;
    private String LTD_DESCONTABLE;
    private String LTD_PARCIAL;
    private String LCC_EDITABLE;



    /** 
     * Constructors. DaoGen generates two constructors by default.
     * The first one takes no arguments and provides the most simple
     * way to create object instance. The another one takes one
     * argument, which is the primary key of the corresponding table.
     */

    public ConceptosTarifa () {

    }

    public ConceptosTarifa (int LT_IDIn) {

          this.LT_ID = LT_IDIn;

    }


    /** 
     * Get- and Set-methods for persistent variables. The default
     * behaviour does not make any checks against malformed data,
     * so these might require some manual additions.
     */

    public int getLT_ID() {
          return this.LT_ID;
    }
    public void setLT_ID(int LT_IDIn) {
          this.LT_ID = LT_IDIn;
    }

    public String getLCC_ID() {
          return this.LCC_ID;
    }
    public void setLCC_ID(String LCC_IDIn) {
          this.LCC_ID = LCC_IDIn;
    }

    public String getLCC_NOMBRE() {
          return this.LCC_NOMBRE;
    }
    public void setLCC_NOMBRE(String LCC_NOMBREIn) {
          this.LCC_NOMBRE = LCC_NOMBREIn;
    }

    public String getLTD_ID() {
          return this.LTD_ID;
    }
    public void setLTD_ID(String LTD_IDIn) {
          this.LTD_ID = LTD_IDIn;
    }

    public String getLT_NOMBRE() {
          return this.LT_NOMBRE;
    }
    public void setLT_NOMBRE(String LT_NOMBREIn) {
          this.LT_NOMBRE = LT_NOMBREIn;
    }

    public String getLT_VIGENCIA() {
          return this.LT_VIGENCIA;
    }
    public void setLT_VIGENCIA(String LT_VIGENCIAIn) {
          this.LT_VIGENCIA = LT_VIGENCIAIn;
    }

    public String getLTD_TIPO() {
          return this.LTD_TIPO;
    }
    public void setLTD_TIPO(String LTD_TIPOIn) {
          this.LTD_TIPO = LTD_TIPOIn;
    }

    public String getLTD_VALOR() {
          return this.LTD_VALOR;
    }
    public void setLTD_VALOR(String LTD_VALORIn) {
          this.LTD_VALOR = LTD_VALORIn;
    }

    public String getLTD_DATO_BASE() {
          return this.LTD_DATO_BASE;
    }
    public void setLTD_DATO_BASE(String LTD_DATO_BASEIn) {
          this.LTD_DATO_BASE = LTD_DATO_BASEIn;
    }

    public String getLTD_FACTOR() {
          return this.LTD_FACTOR;
    }
    public void setLTD_FACTOR(String LTD_FACTORIn) {
          this.LTD_FACTOR = LTD_FACTORIn;
    }

    public String getLTD_CALCULO() {
          return this.LTD_CALCULO;
    }
    public void setLTD_CALCULO(String LTD_CALCULOIn) {
          this.LTD_CALCULO = LTD_CALCULOIn;
    }

    public String getLTD_DESCONTABLE() {
          return this.LTD_DESCONTABLE;
    }
    public void setLTD_DESCONTABLE(String LTD_DESCONTABLEIn) {
          this.LTD_DESCONTABLE = LTD_DESCONTABLEIn;
    }

    public String getLTD_PARCIAL() {
          return this.LTD_PARCIAL;
    }
    public void setLTD_PARCIAL(String LTD_PARCIALIn) {
          this.LTD_PARCIAL = LTD_PARCIALIn;
    }

    public String getLCC_EDITABLE() {
          return this.LCC_EDITABLE;
    }
    public void setLCC_EDITABLE(String LCC_EDITABLEIn) {
          this.LCC_EDITABLE = LCC_EDITABLEIn;
    }



    /** 
     * setAll allows to set all persistent variables in one method call.
     * This is useful, when all data is available and it is needed to 
     * set the initial state of this object. Note that this method will
     * directly modify instance variales, without going trough the 
     * individual set-methods.
     */

    public void setAll(int LT_IDIn,
          String LCC_IDIn,
          String LCC_NOMBREIn,
          String LTD_IDIn,
          String LT_NOMBREIn,
          String LT_VIGENCIAIn,
          String LTD_TIPOIn,
          String LTD_VALORIn,
          String LTD_DATO_BASEIn,
          String LTD_FACTORIn,
          String LTD_CALCULOIn,
          String LTD_DESCONTABLEIn,
          String LTD_PARCIALIn,
          String LCC_EDITABLEIn) {
          this.LT_ID = LT_IDIn;
          this.LCC_ID = LCC_IDIn;
          this.LCC_NOMBRE = LCC_NOMBREIn;
          this.LTD_ID = LTD_IDIn;
          this.LT_NOMBRE = LT_NOMBREIn;
          this.LT_VIGENCIA = LT_VIGENCIAIn;
          this.LTD_TIPO = LTD_TIPOIn;
          this.LTD_VALOR = LTD_VALORIn;
          this.LTD_DATO_BASE = LTD_DATO_BASEIn;
          this.LTD_FACTOR = LTD_FACTORIn;
          this.LTD_CALCULO = LTD_CALCULOIn;
          this.LTD_DESCONTABLE = LTD_DESCONTABLEIn;
          this.LTD_PARCIAL = LTD_PARCIALIn;
          this.LCC_EDITABLE = LCC_EDITABLEIn;
    }


    /** 
     * hasEqualMapping-method will compare two ConceptosTarifa instances
     * and return true if they contain same values in all persistent instance 
     * variables. If hasEqualMapping returns true, it does not mean the objects
     * are the same instance. However it does mean that in that moment, they 
     * are mapped to the same row in database.
     */
    public boolean hasEqualMapping(ConceptosTarifa valueObject) {

          if (valueObject.getLT_ID() != this.LT_ID) {
                    return(false);
          }
          if (this.LCC_ID == null) {
                    if (valueObject.getLCC_ID() != null)
                           return(false);
          } else if (!this.LCC_ID.equals(valueObject.getLCC_ID())) {
                    return(false);
          }
          if (this.LCC_NOMBRE == null) {
                    if (valueObject.getLCC_NOMBRE() != null)
                           return(false);
          } else if (!this.LCC_NOMBRE.equals(valueObject.getLCC_NOMBRE())) {
                    return(false);
          }
          if (this.LTD_ID == null) {
                    if (valueObject.getLTD_ID() != null)
                           return(false);
          } else if (!this.LTD_ID.equals(valueObject.getLTD_ID())) {
                    return(false);
          }
          if (this.LT_NOMBRE == null) {
                    if (valueObject.getLT_NOMBRE() != null)
                           return(false);
          } else if (!this.LT_NOMBRE.equals(valueObject.getLT_NOMBRE())) {
                    return(false);
          }
          if (this.LT_VIGENCIA == null) {
                    if (valueObject.getLT_VIGENCIA() != null)
                           return(false);
          } else if (!this.LT_VIGENCIA.equals(valueObject.getLT_VIGENCIA())) {
                    return(false);
          }
          if (this.LTD_TIPO == null) {
                    if (valueObject.getLTD_TIPO() != null)
                           return(false);
          } else if (!this.LTD_TIPO.equals(valueObject.getLTD_TIPO())) {
                    return(false);
          }
          if (this.LTD_VALOR == null) {
                    if (valueObject.getLTD_VALOR() != null)
                           return(false);
          } else if (!this.LTD_VALOR.equals(valueObject.getLTD_VALOR())) {
                    return(false);
          }
          if (this.LTD_DATO_BASE == null) {
                    if (valueObject.getLTD_DATO_BASE() != null)
                           return(false);
          } else if (!this.LTD_DATO_BASE.equals(valueObject.getLTD_DATO_BASE())) {
                    return(false);
          }
          if (this.LTD_FACTOR == null) {
                    if (valueObject.getLTD_FACTOR() != null)
                           return(false);
          } else if (!this.LTD_FACTOR.equals(valueObject.getLTD_FACTOR())) {
                    return(false);
          }
          if (this.LTD_CALCULO == null) {
                    if (valueObject.getLTD_CALCULO() != null)
                           return(false);
          } else if (!this.LTD_CALCULO.equals(valueObject.getLTD_CALCULO())) {
                    return(false);
          }
          if (this.LTD_DESCONTABLE == null) {
                    if (valueObject.getLTD_DESCONTABLE() != null)
                           return(false);
          } else if (!this.LTD_DESCONTABLE.equals(valueObject.getLTD_DESCONTABLE())) {
                    return(false);
          }
          if (this.LTD_PARCIAL == null) {
                    if (valueObject.getLTD_PARCIAL() != null)
                           return(false);
          } else if (!this.LTD_PARCIAL.equals(valueObject.getLTD_PARCIAL())) {
                    return(false);
          }
          if (this.LCC_EDITABLE == null) {
                    if (valueObject.getLCC_EDITABLE() != null)
                           return(false);
          } else if (!this.LCC_EDITABLE.equals(valueObject.getLCC_EDITABLE())) {
                    return(false);
          }

          return true;
    }



    /**
     * toString will return String object representing the state of this 
     * valueObject. This is useful during application development, and 
     * possibly when application is writing object states in textlog.
     */
    public String toString() {
        StringBuffer out = new StringBuffer(this.getDaogenVersion());
        out.append("\nclass ConceptosTarifa, mapping to table VISTA_CONCEPTOSTARIFA\n");
        out.append("Persistent attributes: \n"); 
        out.append("LT_ID = " + this.LT_ID + "\n"); 
        out.append("LCC_ID = " + this.LCC_ID + "\n"); 
        out.append("LCC_NOMBRE = " + this.LCC_NOMBRE + "\n"); 
        out.append("LTD_ID = " + this.LTD_ID + "\n"); 
        out.append("LT_NOMBRE = " + this.LT_NOMBRE + "\n"); 
        out.append("LT_VIGENCIA = " + this.LT_VIGENCIA + "\n"); 
        out.append("LTD_TIPO = " + this.LTD_TIPO + "\n"); 
        out.append("LTD_VALOR = " + this.LTD_VALOR + "\n"); 
        out.append("LTD_DATO_BASE = " + this.LTD_DATO_BASE + "\n"); 
        out.append("LTD_FACTOR = " + this.LTD_FACTOR + "\n"); 
        out.append("LTD_CALCULO = " + this.LTD_CALCULO + "\n"); 
        out.append("LTD_DESCONTABLE = " + this.LTD_DESCONTABLE + "\n"); 
        out.append("LTD_PARCIAL = " + this.LTD_PARCIAL + "\n"); 
        out.append("LCC_EDITABLE = " + this.LCC_EDITABLE + "\n"); 
        return out.toString();
    }


    /**
     * Clone will return identical deep copy of this valueObject.
     * Note, that this method is different than the clone() which
     * is defined in java.lang.Object. Here, the retuned cloned object
     * will also have all its attributes cloned.
     */
    public Object clone() {
        ConceptosTarifa cloned = new ConceptosTarifa();

        cloned.setLT_ID(this.LT_ID); 
        if (this.LCC_ID != null)
             cloned.setLCC_ID(new String(this.LCC_ID)); 
        if (this.LCC_NOMBRE != null)
             cloned.setLCC_NOMBRE(new String(this.LCC_NOMBRE)); 
        if (this.LTD_ID != null)
             cloned.setLTD_ID(new String(this.LTD_ID)); 
        if (this.LT_NOMBRE != null)
             cloned.setLT_NOMBRE(new String(this.LT_NOMBRE)); 
        if (this.LT_VIGENCIA != null)
             cloned.setLT_VIGENCIA(new String(this.LT_VIGENCIA)); 
        if (this.LTD_TIPO != null)
             cloned.setLTD_TIPO(new String(this.LTD_TIPO)); 
        if (this.LTD_VALOR != null)
             cloned.setLTD_VALOR(new String(this.LTD_VALOR)); 
        if (this.LTD_DATO_BASE != null)
             cloned.setLTD_DATO_BASE(new String(this.LTD_DATO_BASE)); 
        if (this.LTD_FACTOR != null)
             cloned.setLTD_FACTOR(new String(this.LTD_FACTOR)); 
        if (this.LTD_CALCULO != null)
             cloned.setLTD_CALCULO(new String(this.LTD_CALCULO)); 
        if (this.LTD_DESCONTABLE != null)
             cloned.setLTD_DESCONTABLE(new String(this.LTD_DESCONTABLE)); 
        if (this.LTD_PARCIAL != null)
             cloned.setLTD_PARCIAL(new String(this.LTD_PARCIAL)); 
        if (this.LCC_EDITABLE != null)
             cloned.setLCC_EDITABLE(new String(this.LCC_EDITABLE)); 
        return cloned;
    }



    /** 
     * getDaogenVersion will return information about
     * generator which created these sources.
     */
    public String getDaogenVersion() {
        return "DaoGen version 2.4.1";
    }

}



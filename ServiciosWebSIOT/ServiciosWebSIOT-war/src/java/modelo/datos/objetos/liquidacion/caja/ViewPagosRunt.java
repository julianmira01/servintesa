package modelo.datos.objetos.liquidacion.caja;

import java.io.*;
import java.sql.*;
import java.util.*;
import java.math.*;

 /**
  * ViewPagosRunt Value Object.
  * This class is value object representing database table ViewPagosRunt
  * This class is intented to be used together with associated Dao object.
  */

 /**
  * This sourcecode has been generated by FREE DaoGen generator version 2.4.1.
  * The usage of generated code is restricted to OpenSource software projects
  * only. DaoGen is available in http://titaniclinux.net/daogen/
  * It has been programmed by Tuomo Lukka, Tuomo.Lukka@iki.fi
  *
  * DaoGen license: The following DaoGen generated source code is licensed
  * under the terms of GNU GPL license. The full text for license is available
  * in GNU project's pages: http://www.gnu.org/copyleft/gpl.html
  *
  * If you wish to use the DaoGen generator to produce code for closed-source
  * commercial applications, you must pay the lisence fee. The price is
  * 5 USD or 5 Eur for each database table, you are generating code for.
  * (That includes unlimited amount of iterations with all supported languages
  * for each database table you are paying for.) Send mail to
  * "Tuomo.Lukka@iki.fi" for more information. Thank you!
  */



public class ViewPagosRunt implements Cloneable, Serializable {

    /** 
     * Persistent Instance variables. This data is directly 
     * mapped to the columns of database table.
     */
    private String NUMFACTURA;
    private String TOTALFACTURA;
    private int IDPAGORUNT;
    private int IDUSUPAGO;
    private String FECHAPAGO;
    private String HORAFACTURA;
    private String VALORMT;
    private String VALORRUNT;
    private String CODUSR;
    private String APELLIDOUSR;
    private String NOMBREUSR;
    private String ESTADOFACTURA;



    /** 
     * Constructors. DaoGen generates two constructors by default.
     * The first one takes no arguments and provides the most simple
     * way to create object instance. The another one takes one
     * argument, which is the primary key of the corresponding table.
     */

    public ViewPagosRunt () {

    }

    public ViewPagosRunt (String NUMFACTURAIn) {

          this.NUMFACTURA = NUMFACTURAIn;

    }


    /** 
     * Get- and Set-methods for persistent variables. The default
     * behaviour does not make any checks against malformed data,
     * so these might require some manual additions.
     */

    public String getNUMFACTURA() {
          return this.NUMFACTURA;
    }
    public void setNUMFACTURA(String NUMFACTURAIn) {
          this.NUMFACTURA = NUMFACTURAIn;
    }

    public String getTOTALFACTURA() {
          return this.TOTALFACTURA;
    }
    public void setTOTALFACTURA(String TOTALFACTURAIn) {
          this.TOTALFACTURA = TOTALFACTURAIn;
    }

    public int getIDPAGORUNT() {
          return this.IDPAGORUNT;
    }
    public void setIDPAGORUNT(int IDPAGORUNTIn) {
          this.IDPAGORUNT = IDPAGORUNTIn;
    }

    public int getIDUSUPAGO() {
          return this.IDUSUPAGO;
    }
    public void setIDUSUPAGO(int IDUSUPAGOIn) {
          this.IDUSUPAGO = IDUSUPAGOIn;
    }

    public String getFECHAPAGO() {
          return this.FECHAPAGO;
    }   
    public void setFECHAPAGO(String FECHAPAGOIn) {
          this.FECHAPAGO = FECHAPAGOIn;
    }

    public String getHORAFACTURA() {
          return this.HORAFACTURA;
    }
    public void setHORAFACTURA(String HORAFACTURAIn) {
          this.HORAFACTURA = HORAFACTURAIn;
    }

    public String getVALORMT() {
          return this.VALORMT;
    }
    public void setVALORMT(String VALORMTIn) {
          this.VALORMT = VALORMTIn;
    }

    public String getVALORRUNT() {
          return this.VALORRUNT;
    }
    public void setVALORRUNT(String VALORRUNTIn) {
          this.VALORRUNT = VALORRUNTIn;
    }

    public String getCODUSR() {
          return this.CODUSR;
    }
    public void setCODUSR(String CODUSRIn) {
          this.CODUSR = CODUSRIn;
    }

    public String getAPELLIDOUSR() {
          return this.APELLIDOUSR;
    }
    public void setAPELLIDOUSR(String APELLIDOUSRIn) {
          this.APELLIDOUSR = APELLIDOUSRIn;
    }

    public String getNOMBREUSR() {
          return this.NOMBREUSR;
    }
    public void setNOMBREUSR(String NOMBREUSRIn) {
          this.NOMBREUSR = NOMBREUSRIn;
    }

    public String getESTADOFACTURA() {
          return this.ESTADOFACTURA;
    }
    public void setESTADOFACTURA(String ESTADOFACTURAIn) {
          this.ESTADOFACTURA = ESTADOFACTURAIn;
    }



    /** 
     * setAll allows to set all persistent variables in one method call.
     * This is useful, when all data is available and it is needed to 
     * set the initial state of this object. Note that this method will
     * directly modify instance variales, without going trough the 
     * individual set-methods.
     */

    public void setAll(String NUMFACTURAIn,
          String TOTALFACTURAIn,
          int IDPAGORUNTIn,
          int IDUSUPAGOIn,
          String FECHAPAGOIn,
          String HORAFACTURAIn,
          String VALORMTIn,
          String VALORRUNTIn,
          String CODUSRIn,
          String APELLIDOUSRIn,
          String NOMBREUSRIn,
          String ESTADOFACTURAIn) {
          this.NUMFACTURA = NUMFACTURAIn;
          this.TOTALFACTURA = TOTALFACTURAIn;
          this.IDPAGORUNT = IDPAGORUNTIn;
          this.IDUSUPAGO = IDUSUPAGOIn;
          this.FECHAPAGO = FECHAPAGOIn;
          this.HORAFACTURA = HORAFACTURAIn;
          this.VALORMT = VALORMTIn;
          this.VALORRUNT = VALORRUNTIn;
          this.CODUSR = CODUSRIn;
          this.APELLIDOUSR = APELLIDOUSRIn;
          this.NOMBREUSR = NOMBREUSRIn;
          this.ESTADOFACTURA = ESTADOFACTURAIn;
    }


    /** 
     * hasEqualMapping-method will compare two ViewPagosRunt instances
     * and return true if they contain same values in all persistent instance 
     * variables. If hasEqualMapping returns true, it does not mean the objects
     * are the same instance. However it does mean that in that moment, they 
     * are mapped to the same row in database.
     */
    public boolean hasEqualMapping(ViewPagosRunt valueObject) {

          if (this.NUMFACTURA == null) {
                    if (valueObject.getNUMFACTURA() != null)
                           return(false);
          } else if (!this.NUMFACTURA.equals(valueObject.getNUMFACTURA())) {
                    return(false);
          }
          if (this.TOTALFACTURA == null) {
                    if (valueObject.getTOTALFACTURA() != null)
                           return(false);
          } else if (!this.TOTALFACTURA.equals(valueObject.getTOTALFACTURA())) {
                    return(false);
          }
          if (valueObject.getIDPAGORUNT() != this.IDPAGORUNT) {
                    return(false);
          }
          if (valueObject.getIDUSUPAGO() != this.IDUSUPAGO) {
                    return(false);
          }
          if (this.FECHAPAGO == null) {
                    if (valueObject.getFECHAPAGO() != null)
                           return(false);
          } else if (!this.FECHAPAGO.equals(valueObject.getFECHAPAGO())) {
                    return(false);
          }
          if (this.HORAFACTURA == null) {
                    if (valueObject.getHORAFACTURA() != null)
                           return(false);
          } else if (!this.HORAFACTURA.equals(valueObject.getHORAFACTURA())) {
                    return(false);
          }
          if (this.VALORMT == null) {
                    if (valueObject.getVALORMT() != null)
                           return(false);
          } else if (!this.VALORMT.equals(valueObject.getVALORMT())) {
                    return(false);
          }
          if (this.VALORRUNT == null) {
                    if (valueObject.getVALORRUNT() != null)
                           return(false);
          } else if (!this.VALORRUNT.equals(valueObject.getVALORRUNT())) {
                    return(false);
          }
          if (this.CODUSR == null) {
                    if (valueObject.getCODUSR() != null)
                           return(false);
          } else if (!this.CODUSR.equals(valueObject.getCODUSR())) {
                    return(false);
          }
          if (this.APELLIDOUSR == null) {
                    if (valueObject.getAPELLIDOUSR() != null)
                           return(false);
          } else if (!this.APELLIDOUSR.equals(valueObject.getAPELLIDOUSR())) {
                    return(false);
          }
          if (this.NOMBREUSR == null) {
                    if (valueObject.getNOMBREUSR() != null)
                           return(false);
          } else if (!this.NOMBREUSR.equals(valueObject.getNOMBREUSR())) {
                    return(false);
          }
          if (this.ESTADOFACTURA == null) {
                    if (valueObject.getESTADOFACTURA() != null)
                           return(false);
          } else if (!this.ESTADOFACTURA.equals(valueObject.getESTADOFACTURA())) {
                    return(false);
          }

          return true;
    }



    /**
     * toString will return String object representing the state of this 
     * valueObject. This is useful during application development, and 
     * possibly when application is writing object states in textlog.
     */
    public String toString() {
        StringBuffer out = new StringBuffer(this.getDaogenVersion());
        out.append("\nclass ViewPagosRunt, mapping to table ViewPagosRunt\n");
        out.append("Persistent attributes: \n"); 
        out.append("NUMFACTURA = " + this.NUMFACTURA + "\n"); 
        out.append("TOTALFACTURA = " + this.TOTALFACTURA + "\n"); 
        out.append("IDPAGORUNT = " + this.IDPAGORUNT + "\n"); 
        out.append("IDUSUPAGO = " + this.IDUSUPAGO + "\n"); 
        out.append("FECHAPAGO = " + this.FECHAPAGO + "\n");
        out.append("HORAFACTURA = " + this.HORAFACTURA + "\n");
        out.append("VALORMT = " + this.VALORMT + "\n"); 
        out.append("VALORRUNT = " + this.VALORRUNT + "\n"); 
        out.append("CODUSR = " + this.CODUSR + "\n"); 
        out.append("APELLIDOUSR = " + this.APELLIDOUSR + "\n"); 
        out.append("NOMBREUSR = " + this.NOMBREUSR + "\n"); 
        out.append("ESTADOFACTURA = " + this.ESTADOFACTURA + "\n"); 
        return out.toString();
    }


    /**
     * Clone will return identical deep copy of this valueObject.
     * Note, that this method is different than the clone() which
     * is defined in java.lang.Object. Here, the retuned cloned object
     * will also have all its attributes cloned.
     */
    public Object clone() {
        ViewPagosRunt cloned = new ViewPagosRunt();

        if (this.NUMFACTURA != null)
             cloned.setNUMFACTURA(new String(this.NUMFACTURA)); 
        if (this.TOTALFACTURA != null)
             cloned.setTOTALFACTURA(new String(this.TOTALFACTURA)); 
        cloned.setIDPAGORUNT(this.IDPAGORUNT); 
        cloned.setIDUSUPAGO(this.IDUSUPAGO); 
        if (this.FECHAPAGO != null)
             cloned.setFECHAPAGO(new String(this.FECHAPAGO)); 
        if (this.HORAFACTURA != null)
             cloned.setHORAFACTURA(new String(this.HORAFACTURA)); 
        if (this.VALORMT != null)
             cloned.setVALORMT(new String(this.VALORMT)); 
        if (this.VALORRUNT != null)
             cloned.setVALORRUNT(new String(this.VALORRUNT)); 
        if (this.CODUSR != null)
             cloned.setCODUSR(new String(this.CODUSR)); 
        if (this.APELLIDOUSR != null)
             cloned.setAPELLIDOUSR(new String(this.APELLIDOUSR)); 
        if (this.NOMBREUSR != null)
             cloned.setNOMBREUSR(new String(this.NOMBREUSR)); 
        if (this.ESTADOFACTURA != null)
             cloned.setESTADOFACTURA(new String(this.ESTADOFACTURA)); 
        return cloned;
    }



    /** 
     * getDaogenVersion will return information about
     * generator which created these sources.
     */
    public String getDaogenVersion() {
        return "DaoGen version 2.4.1";
    }

}


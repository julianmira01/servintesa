package modelo.datos.objetos.liquidacion.caja;

import java.io.*;
import java.sql.*;
import java.util.*;
import java.math.*;

 /**
  * ArqueoCaja Value Object.
  * This class is value object representing database table ArqueoCaja
  * This class is intented to be used together with associated Dao object.
  */

 /**
  * This sourcecode has been generated by FREE DaoGen generator version 2.4.1.
  * The usage of generated code is restricted to OpenSource software projects
  * only. DaoGen is available in http://titaniclinux.net/daogen/
  * It has been programmed by Tuomo Lukka, Tuomo.Lukka@iki.fi
  *
  * DaoGen license: The following DaoGen generated source code is licensed
  * under the terms of GNU GPL license. The full text for license is available
  * in GNU project's pages: http://www.gnu.org/copyleft/gpl.html
  *
  * If you wish to use the DaoGen generator to produce code for closed-source
  * commercial applications, you must pay the lisence fee. The price is
  * 5 USD or 5 Eur for each database table, you are generating code for.
  * (That includes unlimited amount of iterations with all supported languages
  * for each database table you are paying for.) Send mail to
  * "Tuomo.Lukka@iki.fi" for more information. Thank you!
  */



public class ArqueoCaja implements Cloneable, Serializable {

    /** 
     * Persistent Instance variables. This data is directly 
     * mapped to the columns of database table.
     */
    private int ID_ARQUEO;
    private String ID_CAJERO;
    private String FEC_INICIAL;
    private String FEC_FINAL;
    private String H_INICIAL;
    private String H_FINAL;
    private String ARQ_ACTIVO;
    private String VLR_BASE;
    private String ARQRUNT;
    private int ID_CIERRE;



    /** 
     * Constructors. DaoGen generates two constructors by default.
     * The first one takes no arguments and provides the most simple
     * way to create object instance. The another one takes one
     * argument, which is the primary key of the corresponding table.
     */

    public ArqueoCaja () {

    }

    public ArqueoCaja (int ID_ARQUEOIn) {

          this.ID_ARQUEO = ID_ARQUEOIn;

    }


    /** 
     * Get- and Set-methods for persistent variables. The default
     * behaviour does not make any checks against malformed data,
     * so these might require some manual additions.
     */

    public int getID_ARQUEO() {
          return this.ID_ARQUEO;
    }
    public void setID_ARQUEO(int ID_ARQUEOIn) {
          this.ID_ARQUEO = ID_ARQUEOIn;
    }

    public String getID_CAJERO() {
          return this.ID_CAJERO;
    }
    public void setID_CAJERO(String ID_CAJEROIn) {
          this.ID_CAJERO = ID_CAJEROIn;
    }

    public String getFEC_INICIAL() {
          return this.FEC_INICIAL;
    }
    public void setFEC_INICIAL(String FEC_INICIALIn) {
          this.FEC_INICIAL = FEC_INICIALIn;
    }

    public String getFEC_FINAL() {
          return this.FEC_FINAL;
    }
    public void setFEC_FINAL(String FEC_FINALIn) {
          this.FEC_FINAL = FEC_FINALIn;
    }

    public String getH_INICIAL() {
          return this.H_INICIAL;
    }
    public void setH_INICIAL(String H_INICIALIn) {
          this.H_INICIAL = H_INICIALIn;
    }

    public String getH_FINAL() {
          return this.H_FINAL;
    }
    public void setH_FINAL(String H_FINALIn) {
          this.H_FINAL = H_FINALIn;
    }

    public String getARQ_ACTIVO() {
          return this.ARQ_ACTIVO;
    }
    public void setARQ_ACTIVO(String ARQ_ACTIVOIn) {
          this.ARQ_ACTIVO = ARQ_ACTIVOIn;
    }

    public String getVLR_BASE() {
          return this.VLR_BASE;
    }
    public void setVLR_BASE(String VLR_BASEIn) {
          this.VLR_BASE = VLR_BASEIn;
    }

    public String getARQRUNT() {
          return this.ARQRUNT;
    }
    public void setARQRUNT(String ARQRUNTIn) {
          this.ARQRUNT = ARQRUNTIn;
    }

    public int getID_CIERRE() {
          return this.ID_CIERRE;
    }
    public void setID_CIERRE(int ID_CIERREIn) {
          this.ID_CIERRE = ID_CIERREIn;
    }



    /** 
     * setAll allows to set all persistent variables in one method call.
     * This is useful, when all data is available and it is needed to 
     * set the initial state of this object. Note that this method will
     * directly modify instance variales, without going trough the 
     * individual set-methods.
     */

    public void setAll(int ID_ARQUEOIn,
          String ID_CAJEROIn,
          String FEC_INICIALIn,
          String FEC_FINALIn,
          String H_INICIALIn,
          String H_FINALIn,
          String ARQ_ACTIVOIn,
          String VLR_BASEIn,
          String ARQRUNTIn,
          int ID_CIERREIn) {
          this.ID_ARQUEO = ID_ARQUEOIn;
          this.ID_CAJERO = ID_CAJEROIn;
          this.FEC_INICIAL = FEC_INICIALIn;
          this.FEC_FINAL = FEC_FINALIn;
          this.H_INICIAL = H_INICIALIn;
          this.H_FINAL = H_FINALIn;
          this.ARQ_ACTIVO = ARQ_ACTIVOIn;
          this.VLR_BASE = VLR_BASEIn;
          this.ARQRUNT = ARQRUNTIn;
          this.ID_CIERRE = ID_CIERREIn;
    }


    /** 
     * hasEqualMapping-method will compare two ArqueoCaja instances
     * and return true if they contain same values in all persistent instance 
     * variables. If hasEqualMapping returns true, it does not mean the objects
     * are the same instance. However it does mean that in that moment, they 
     * are mapped to the same row in database.
     */
    public boolean hasEqualMapping(ArqueoCaja valueObject) {

          if (valueObject.getID_ARQUEO() != this.ID_ARQUEO) {
                    return(false);
          }
          if (this.ID_CAJERO == null) {
                    if (valueObject.getID_CAJERO() != null)
                           return(false);
          } else if (!this.ID_CAJERO.equals(valueObject.getID_CAJERO())) {
                    return(false);
          }
          if (this.FEC_INICIAL == null) {
                    if (valueObject.getFEC_INICIAL() != null)
                           return(false);
          } else if (!this.FEC_INICIAL.equals(valueObject.getFEC_INICIAL())) {
                    return(false);
          }
          if (this.FEC_FINAL == null) {
                    if (valueObject.getFEC_FINAL() != null)
                           return(false);
          } else if (!this.FEC_FINAL.equals(valueObject.getFEC_FINAL())) {
                    return(false);
          }
          if (this.H_INICIAL == null) {
                    if (valueObject.getH_INICIAL() != null)
                           return(false);
          } else if (!this.H_INICIAL.equals(valueObject.getH_INICIAL())) {
                    return(false);
          }
          if (this.H_FINAL == null) {
                    if (valueObject.getH_FINAL() != null)
                           return(false);
          } else if (!this.H_FINAL.equals(valueObject.getH_FINAL())) {
                    return(false);
          }
          if (this.ARQ_ACTIVO == null) {
                    if (valueObject.getARQ_ACTIVO() != null)
                           return(false);
          } else if (!this.ARQ_ACTIVO.equals(valueObject.getARQ_ACTIVO())) {
                    return(false);
          }
          if (this.VLR_BASE == null) {
                    if (valueObject.getVLR_BASE() != null)
                           return(false);
          } else if (!this.VLR_BASE.equals(valueObject.getVLR_BASE())) {
                    return(false);
          }
          if (this.ARQRUNT == null) {
                    if (valueObject.getARQRUNT() != null)
                           return(false);
          } else if (!this.ARQRUNT.equals(valueObject.getARQRUNT())) {
                    return(false);
          }
          if (valueObject.getID_CIERRE() != this.ID_CIERRE) {
                    return(false);
          }

          return true;
    }



    /**
     * toString will return String object representing the state of this 
     * valueObject. This is useful during application development, and 
     * possibly when application is writing object states in textlog.
     */
    public String toString() {
        StringBuffer out = new StringBuffer(this.getDaogenVersion());
        out.append("\nclass ArqueoCaja, mapping to table ArqueoCaja\n");
        out.append("Persistent attributes: \n"); 
        out.append("ID_ARQUEO = " + this.ID_ARQUEO + "\n"); 
        out.append("ID_CAJERO = " + this.ID_CAJERO + "\n"); 
        out.append("FEC_INICIAL = " + this.FEC_INICIAL + "\n"); 
        out.append("FEC_FINAL = " + this.FEC_FINAL + "\n"); 
        out.append("H_INICIAL = " + this.H_INICIAL + "\n"); 
        out.append("H_FINAL = " + this.H_FINAL + "\n"); 
        out.append("ARQ_ACTIVO = " + this.ARQ_ACTIVO + "\n"); 
        out.append("VLR_BASE = " + this.VLR_BASE + "\n"); 
        out.append("ARQRUNT = " + this.ARQRUNT + "\n"); 
        out.append("ID_CIERRE = " + this.ID_CIERRE + "\n"); 
        return out.toString();
    }


    /**
     * Clone will return identical deep copy of this valueObject.
     * Note, that this method is different than the clone() which
     * is defined in java.lang.Object. Here, the retuned cloned object
     * will also have all its attributes cloned.
     */
    public Object clone() {
        ArqueoCaja cloned = new ArqueoCaja();

        cloned.setID_ARQUEO(this.ID_ARQUEO); 
        if (this.ID_CAJERO != null)
             cloned.setID_CAJERO(new String(this.ID_CAJERO)); 
        if (this.FEC_INICIAL != null)
             cloned.setFEC_INICIAL(new String(this.FEC_INICIAL)); 
        if (this.FEC_FINAL != null)
             cloned.setFEC_FINAL(new String(this.FEC_FINAL)); 
        if (this.H_INICIAL != null)
             cloned.setH_INICIAL(new String(this.H_INICIAL)); 
        if (this.H_FINAL != null)
             cloned.setH_FINAL(new String(this.H_FINAL)); 
        if (this.ARQ_ACTIVO != null)
             cloned.setARQ_ACTIVO(new String(this.ARQ_ACTIVO)); 
        if (this.VLR_BASE != null)
             cloned.setVLR_BASE(new String(this.VLR_BASE)); 
        if (this.ARQRUNT != null)
             cloned.setARQRUNT(new String(this.ARQRUNT)); 
        cloned.setID_CIERRE(this.ID_CIERRE); 
        return cloned;
    }



    /** 
     * getDaogenVersion will return information about
     * generator which created these sources.
     */
    public String getDaogenVersion() {
        return "DaoGen version 2.4.1";
    }

}

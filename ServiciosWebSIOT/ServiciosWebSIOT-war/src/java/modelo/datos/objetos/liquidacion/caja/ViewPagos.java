package modelo.datos.objetos.liquidacion.caja;

import java.io.*;
import java.sql.*;
import java.util.*;
import java.math.*;

 /**
  * ViewPagos Value Object.
  * This class is value object representing database table ViewPagos
  * This class is intented to be used together with associated Dao object.
  */

 /**
  * This sourcecode has been generated by FREE DaoGen generator version 2.4.1.
  * The usage of generated code is restricted to OpenSource software projects
  * only. DaoGen is available in http://titaniclinux.net/daogen/
  * It has been programmed by Tuomo Lukka, Tuomo.Lukka@iki.fi
  *
  * DaoGen license: The following DaoGen generated source code is licensed
  * under the terms of GNU GPL license. The full text for license is available
  * in GNU project's pages: http://www.gnu.org/copyleft/gpl.html
  *
  * If you wish to use the DaoGen generator to produce code for closed-source
  * commercial applications, you must pay the lisence fee. The price is
  * 5 USD or 5 Eur for each database table, you are generating code for.
  * (That includes unlimited amount of iterations with all supported languages
  * for each database table you are paying for.) Send mail to
  * "Tuomo.Lukka@iki.fi" for more information. Thank you!
  */



public class ViewPagos implements Cloneable, Serializable {

    /** 
     * Persistent Instance variables. This data is directly 
     * mapped to the columns of database table.
     */
    private String NUMFACTURA;
    private String TOTALFACTURA;
    private int IDFACTURA;
    private int IDUSRFACTURA;
    private int NUMEROCUOTA;
    private int ESTADOFACT;
    private String FECHAFACTURA;
    private String HORAFACTURA;
    private int IDUSRPAGO;
    private String VALORPAGO;
    private String FECHAPAGO;
    private int IDPAGO;
    private int IDTIPOPAGO;
    private String APELLIDOUSR;
    private String NOMBREUSR;
    private String TIPOPAGO;



    /** 
     * Constructors. DaoGen generates two constructors by default.
     * The first one takes no arguments and provides the most simple
     * way to create object instance. The another one takes one
     * argument, which is the primary key of the corresponding table.
     */

    public ViewPagos () {

    }

    public ViewPagos (String NUMFACTURAIn) {

          this.NUMFACTURA = NUMFACTURAIn;

    }


    /** 
     * Get- and Set-methods for persistent variables. The default
     * behaviour does not make any checks against malformed data,
     * so these might require some manual additions.
     */

    public String getNUMFACTURA() {
          return this.NUMFACTURA;
    }
    public void setNUMFACTURA(String NUMFACTURAIn) {
          this.NUMFACTURA = NUMFACTURAIn;
    }

    public String getTOTALFACTURA() {
          return this.TOTALFACTURA;
    }
    public void setTOTALFACTURA(String TOTALFACTURAIn) {
          this.TOTALFACTURA = TOTALFACTURAIn;
    }

    public int getIDFACTURA() {
          return this.IDFACTURA;
    }
    public void setIDFACTURA(int IDFACTURAIn) {
          this.IDFACTURA = IDFACTURAIn;
    }

    public int getIDUSRFACTURA() {
          return this.IDUSRFACTURA;
    }
    public void setIDUSRFACTURA(int IDUSRFACTURAIn) {
          this.IDUSRFACTURA = IDUSRFACTURAIn;
    }

    public int getNUMEROCUOTA() {
          return this.NUMEROCUOTA;
    }
    public void setNUMEROCUOTA(int NUMEROCUOTAIn) {
          this.NUMEROCUOTA = NUMEROCUOTAIn;
    }

    public int getESTADOFACT() {
          return this.ESTADOFACT;
    }
    public void setESTADOFACT(int ESTADOFACTIn) {
          this.ESTADOFACT = ESTADOFACTIn;
    }

    public String getFECHAFACTURA() {
          return this.FECHAFACTURA;
    }
    public void setFECHAFACTURA(String FECHAFACTURAIn) {
          this.FECHAFACTURA = FECHAFACTURAIn;
    }

    public String getHORAFACTURA() {
          return this.HORAFACTURA;
    }
    public void setHORAFACTURA(String HORAFACTURAIn) {
          this.HORAFACTURA = HORAFACTURAIn;
    }

    public int getIDUSRPAGO() {
          return this.IDUSRPAGO;
    }
    public void setIDUSRPAGO(int IDUSRPAGOIn) {
          this.IDUSRPAGO = IDUSRPAGOIn;
    }

    public String getVALORPAGO() {
          return this.VALORPAGO;
    }
    public void setVALORPAGO(String VALORPAGOIn) {
          this.VALORPAGO = VALORPAGOIn;
    }

    public String getFECHAPAGO() {
          return this.FECHAPAGO;
    }
    public void setFECHAPAGO(String FECHAPAGOIn) {
          this.FECHAPAGO = FECHAPAGOIn;
    }

    public int getIDPAGO() {
          return this.IDPAGO;
    }
    public void setIDPAGO(int IDPAGOIn) {
          this.IDPAGO = IDPAGOIn;
    }

    public int getIDTIPOPAGO() {
          return this.IDTIPOPAGO;
    }
    public void setIDTIPOPAGO(int IDTIPOPAGOIn) {
          this.IDTIPOPAGO = IDTIPOPAGOIn;
    }

    public String getAPELLIDOUSR() {
          return this.APELLIDOUSR;
    }
    public void setAPELLIDOUSR(String APELLIDOUSRIn) {
          this.APELLIDOUSR = APELLIDOUSRIn;
    }

    public String getNOMBREUSR() {
          return this.NOMBREUSR;
    }
    public void setNOMBREUSR(String NOMBREUSRIn) {
          this.NOMBREUSR = NOMBREUSRIn;
    }

    public String getTIPOPAGO() {
          return this.TIPOPAGO;
    }
    public void setTIPOPAGO(String TIPOPAGOIn) {
          this.TIPOPAGO = TIPOPAGOIn;
    }



    /** 
     * setAll allows to set all persistent variables in one method call.
     * This is useful, when all data is available and it is needed to 
     * set the initial state of this object. Note that this method will
     * directly modify instance variales, without going trough the 
     * individual set-methods.
     */

    public void setAll(String NUMFACTURAIn,
          String TOTALFACTURAIn,
          int IDFACTURAIn,
          int IDUSRFACTURAIn,
          int NUMEROCUOTAIn,
          int ESTADOFACTIn,
          String FECHAFACTURAIn,
          String HORAFACTURAIn,
          int IDUSRPAGOIn,
          String VALORPAGOIn,
          String FECHAPAGOIn,
          int IDPAGOIn,
          int IDTIPOPAGOIn,
          String APELLIDOUSRIn,
          String NOMBREUSRIn,
          String TIPOPAGOIn) {
          this.NUMFACTURA = NUMFACTURAIn;
          this.TOTALFACTURA = TOTALFACTURAIn;
          this.IDFACTURA = IDFACTURAIn;
          this.IDUSRFACTURA = IDUSRFACTURAIn;
          this.NUMEROCUOTA = NUMEROCUOTAIn;
          this.ESTADOFACT = ESTADOFACTIn;
          this.FECHAFACTURA = FECHAFACTURAIn;
          this.HORAFACTURA = HORAFACTURAIn;
          this.IDUSRPAGO = IDUSRPAGOIn;
          this.VALORPAGO = VALORPAGOIn;
          this.FECHAPAGO = FECHAPAGOIn;
          this.IDPAGO = IDPAGOIn;
          this.IDTIPOPAGO = IDTIPOPAGOIn;
          this.APELLIDOUSR = APELLIDOUSRIn;
          this.NOMBREUSR = NOMBREUSRIn;
          this.TIPOPAGO = TIPOPAGOIn;
    }


    /** 
     * hasEqualMapping-method will compare two ViewPagos instances
     * and return true if they contain same values in all persistent instance 
     * variables. If hasEqualMapping returns true, it does not mean the objects
     * are the same instance. However it does mean that in that moment, they 
     * are mapped to the same row in database.
     */
    public boolean hasEqualMapping(ViewPagos valueObject) {

          if (this.NUMFACTURA == null) {
                    if (valueObject.getNUMFACTURA() != null)
                           return(false);
          } else if (!this.NUMFACTURA.equals(valueObject.getNUMFACTURA())) {
                    return(false);
          }
          if (this.TOTALFACTURA == null) {
                    if (valueObject.getTOTALFACTURA() != null)
                           return(false);
          } else if (!this.TOTALFACTURA.equals(valueObject.getTOTALFACTURA())) {
                    return(false);
          }
          if (valueObject.getIDFACTURA() != this.IDFACTURA) {
                    return(false);
          }
          if (valueObject.getIDUSRFACTURA() != this.IDUSRFACTURA) {
                    return(false);
          }
          if (valueObject.getNUMEROCUOTA() != this.NUMEROCUOTA) {
                    return(false);
          }
          if (valueObject.getESTADOFACT() != this.ESTADOFACT) {
                    return(false);
          }
          if (this.FECHAFACTURA == null) {
                    if (valueObject.getFECHAFACTURA() != null)
                           return(false);
          } else if (!this.FECHAFACTURA.equals(valueObject.getFECHAFACTURA())) {
                    return(false);
          }
          if (this.HORAFACTURA == null) {
                    if (valueObject.getHORAFACTURA() != null)
                           return(false);
          } else if (!this.HORAFACTURA.equals(valueObject.getHORAFACTURA())) {
                    return(false);
          }
          if (valueObject.getIDUSRPAGO() != this.IDUSRPAGO) {
                    return(false);
          }
          if (this.VALORPAGO == null) {
                    if (valueObject.getVALORPAGO() != null)
                           return(false);
          } else if (!this.VALORPAGO.equals(valueObject.getVALORPAGO())) {
                    return(false);
          }
          if (this.FECHAPAGO == null) {
                    if (valueObject.getFECHAPAGO() != null)
                           return(false);
          } else if (!this.FECHAPAGO.equals(valueObject.getFECHAPAGO())) {
                    return(false);
          }
          if (valueObject.getIDPAGO() != this.IDPAGO) {
                    return(false);
          }
          if (valueObject.getIDTIPOPAGO() != this.IDTIPOPAGO) {
                    return(false);
          }
          if (this.APELLIDOUSR == null) {
                    if (valueObject.getAPELLIDOUSR() != null)
                           return(false);
          } else if (!this.APELLIDOUSR.equals(valueObject.getAPELLIDOUSR())) {
                    return(false);
          }
          if (this.NOMBREUSR == null) {
                    if (valueObject.getNOMBREUSR() != null)
                           return(false);
          } else if (!this.NOMBREUSR.equals(valueObject.getNOMBREUSR())) {
                    return(false);
          }
          if (this.TIPOPAGO == null) {
                    if (valueObject.getTIPOPAGO() != null)
                           return(false);
          } else if (!this.TIPOPAGO.equals(valueObject.getTIPOPAGO())) {
                    return(false);
          }

          return true;
    }



    /**
     * toString will return String object representing the state of this 
     * valueObject. This is useful during application development, and 
     * possibly when application is writing object states in textlog.
     */
    public String toString() {
        StringBuffer out = new StringBuffer(this.getDaogenVersion());
        out.append("\nclass ViewPagos, mapping to table ViewPagos\n");
        out.append("Persistent attributes: \n"); 
        out.append("NUMFACTURA = " + this.NUMFACTURA + "\n"); 
        out.append("TOTALFACTURA = " + this.TOTALFACTURA + "\n"); 
        out.append("IDFACTURA = " + this.IDFACTURA + "\n"); 
        out.append("IDUSRFACTURA = " + this.IDUSRFACTURA + "\n"); 
        out.append("NUMEROCUOTA = " + this.NUMEROCUOTA + "\n"); 
        out.append("ESTADOFACT = " + this.ESTADOFACT + "\n"); 
        out.append("FECHAFACTURA = " + this.FECHAFACTURA + "\n"); 
        out.append("HORAFACTURA = " + this.HORAFACTURA + "\n"); 
        out.append("IDUSRPAGO = " + this.IDUSRPAGO + "\n"); 
        out.append("VALORPAGO = " + this.VALORPAGO + "\n"); 
        out.append("FECHAPAGO = " + this.FECHAPAGO + "\n"); 
        out.append("IDPAGO = " + this.IDPAGO + "\n"); 
        out.append("IDTIPOPAGO = " + this.IDTIPOPAGO + "\n"); 
        out.append("APELLIDOUSR = " + this.APELLIDOUSR + "\n"); 
        out.append("NOMBREUSR = " + this.NOMBREUSR + "\n"); 
        out.append("TIPOPAGO = " + this.TIPOPAGO + "\n"); 
        return out.toString();
    }


    /**
     * Clone will return identical deep copy of this valueObject.
     * Note, that this method is different than the clone() which
     * is defined in java.lang.Object. Here, the retuned cloned object
     * will also have all its attributes cloned.
     */
    public Object clone() {
        ViewPagos cloned = new ViewPagos();

        if (this.NUMFACTURA != null)
             cloned.setNUMFACTURA(new String(this.NUMFACTURA)); 
        if (this.TOTALFACTURA != null)
             cloned.setTOTALFACTURA(new String(this.TOTALFACTURA)); 
        cloned.setIDFACTURA(this.IDFACTURA); 
        cloned.setIDUSRFACTURA(this.IDUSRFACTURA); 
        cloned.setNUMEROCUOTA(this.NUMEROCUOTA); 
        cloned.setESTADOFACT(this.ESTADOFACT); 
        if (this.FECHAFACTURA != null)
             cloned.setFECHAFACTURA(new String(this.FECHAFACTURA)); 
        if (this.HORAFACTURA != null)
             cloned.setHORAFACTURA(new String(this.HORAFACTURA)); 
        cloned.setIDUSRPAGO(this.IDUSRPAGO); 
        if (this.VALORPAGO != null)
             cloned.setVALORPAGO(new String(this.VALORPAGO)); 
        if (this.FECHAPAGO != null)
             cloned.setFECHAPAGO(new String(this.FECHAPAGO)); 
        cloned.setIDPAGO(this.IDPAGO); 
        cloned.setIDTIPOPAGO(this.IDTIPOPAGO); 
        if (this.APELLIDOUSR != null)
             cloned.setAPELLIDOUSR(new String(this.APELLIDOUSR)); 
        if (this.NOMBREUSR != null)
             cloned.setNOMBREUSR(new String(this.NOMBREUSR)); 
        if (this.TIPOPAGO != null)
             cloned.setTIPOPAGO(new String(this.TIPOPAGO)); 
        return cloned;
    }



    /** 
     * getDaogenVersion will return information about
     * generator which created these sources.
     */
    public String getDaogenVersion() {
        return "DaoGen version 2.4.1";
    }

}
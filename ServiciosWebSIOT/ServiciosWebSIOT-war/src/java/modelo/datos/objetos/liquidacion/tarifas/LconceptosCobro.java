package modelo.datos.objetos.liquidacion.tarifas;

import java.io.*;
import java.sql.*;
import java.util.*;
import java.math.*;

 /**
  * LconceptosCobro Value Object.
  * This class is value object representing database table LconceptosCobro
  * This class is intented to be used together with associated Dao object.
  */

 /**
  * This sourcecode has been generated by FREE DaoGen generator version 2.4.1.
  * The usage of generated code is restricted to OpenSource software projects
  * only. DaoGen is available in http://titaniclinux.net/daogen/
  * It has been programmed by Tuomo Lukka, Tuomo.Lukka@iki.fi
  *
  * DaoGen license: The following DaoGen generated source code is licensed
  * under the terms of GNU GPL license. The full text for license is available
  * in GNU project's pages: http://www.gnu.org/copyleft/gpl.html
  *
  * If you wish to use the DaoGen generator to produce code for closed-source
  * commercial applications, you must pay the lisence fee. The price is
  * 5 USD or 5 Eur for each database table, you are generating code for.
  * (That includes unlimited amount of iterations with all supported languages
  * for each database table you are paying for.) Send mail to
  * "Tuomo.Lukka@iki.fi" for more information. Thank you!
  */



public class LconceptosCobro implements Cloneable, Serializable {

    /** 
     * Persistent Instance variables. This data is directly 
     * mapped to the columns of database table.
     */
    private int LCC_ID;
    private String LCC_NOMBRE;
    private String LCC_DESCRIPCION;
    private int LCC_ACTIVO;
    private String LCC_DETLIQUIDACION;
    private int LCC_IDCTABANCARIA;
    private String LCC_OTRONOMBRE;
    private String LCC_TASA_INTERES;
    private String LCC_EDITABLE;
    private int IDITEMCOMPARENDO;
    private int IDEMPRESAASIGNA;



    /** 
     * Constructors. DaoGen generates two constructors by default.
     * The first one takes no arguments and provides the most simple
     * way to create object instance. The another one takes one
     * argument, which is the primary key of the corresponding table.
     */

    public LconceptosCobro () {

    }

    public LconceptosCobro (int LCC_IDIn) {

          this.LCC_ID = LCC_IDIn;

    }


    /** 
     * Get- and Set-methods for persistent variables. The default
     * behaviour does not make any checks against malformed data,
     * so these might require some manual additions.
     */

    public int getLCC_ID() {
          return this.LCC_ID;
    }
    public void setLCC_ID(int LCC_IDIn) {
          this.LCC_ID = LCC_IDIn;
    }

    public String getLCC_NOMBRE() {
          return this.LCC_NOMBRE;
    }
    public void setLCC_NOMBRE(String LCC_NOMBREIn) {
          this.LCC_NOMBRE = LCC_NOMBREIn;
    }

    public String getLCC_DESCRIPCION() {
          return this.LCC_DESCRIPCION;
    }
    public void setLCC_DESCRIPCION(String LCC_DESCRIPCIONIn) {
          this.LCC_DESCRIPCION = LCC_DESCRIPCIONIn;
    }

    public int getLCC_ACTIVO() {
          return this.LCC_ACTIVO;
    }
    public void setLCC_ACTIVO(int LCC_ACTIVOIn) {
          this.LCC_ACTIVO = LCC_ACTIVOIn;
    }

    public String getLCC_DETLIQUIDACION() {
          return this.LCC_DETLIQUIDACION;
    }
    public void setLCC_DETLIQUIDACION(String LCC_DETLIQUIDACIONIn) {
          this.LCC_DETLIQUIDACION = LCC_DETLIQUIDACIONIn;
    }

    public int getLCC_IDCTABANCARIA() {
          return this.LCC_IDCTABANCARIA;
    }
    public void setLCC_IDCTABANCARIA(int LCC_IDCTABANCARIAIn) {
          this.LCC_IDCTABANCARIA = LCC_IDCTABANCARIAIn;
    }

    public String getLCC_OTRONOMBRE() {
          return this.LCC_OTRONOMBRE;
    }
    public void setLCC_OTRONOMBRE(String LCC_OTRONOMBREIn) {
          this.LCC_OTRONOMBRE = LCC_OTRONOMBREIn;
    }

    public String getLCC_TASA_INTERES() {
          return this.LCC_TASA_INTERES;
    }
    public void setLCC_TASA_INTERES(String LCC_TASA_INTERESIn) {
          this.LCC_TASA_INTERES = LCC_TASA_INTERESIn;
    }

    public String getLCC_EDITABLE() {
          return this.LCC_EDITABLE;
    }
    public void setLCC_EDITABLE(String LCC_EDITABLEIn) {
          this.LCC_EDITABLE = LCC_EDITABLEIn;
    }

    public int getIDITEMCOMPARENDO() {
          return this.IDITEMCOMPARENDO;
    }
    public void setIDITEMCOMPARENDO(int IDITEMCOMPARENDOIn) {
          this.IDITEMCOMPARENDO = IDITEMCOMPARENDOIn;
    }

    public int getIDEMPRESAASIGNA() {
          return this.IDEMPRESAASIGNA;
    }
    public void setIDEMPRESAASIGNA(int IDEMPRESAASIGNAIn) {
          this.IDEMPRESAASIGNA = IDEMPRESAASIGNAIn;
    }



    /** 
     * setAll allows to set all persistent variables in one method call.
     * This is useful, when all data is available and it is needed to 
     * set the initial state of this object. Note that this method will
     * directly modify instance variales, without going trough the 
     * individual set-methods.
     */

    public void setAll(int LCC_IDIn,
          String LCC_NOMBREIn,
          String LCC_DESCRIPCIONIn,
          int LCC_ACTIVOIn,
          String LCC_DETLIQUIDACIONIn,
          int LCC_IDCTABANCARIAIn,
          String LCC_OTRONOMBREIn,
          String LCC_TASA_INTERESIn,
          String LCC_EDITABLEIn,
          int IDITEMCOMPARENDOIn,
          int IDEMPRESAASIGNAIn) {
          this.LCC_ID = LCC_IDIn;
          this.LCC_NOMBRE = LCC_NOMBREIn;
          this.LCC_DESCRIPCION = LCC_DESCRIPCIONIn;
          this.LCC_ACTIVO = LCC_ACTIVOIn;
          this.LCC_DETLIQUIDACION = LCC_DETLIQUIDACIONIn;
          this.LCC_IDCTABANCARIA = LCC_IDCTABANCARIAIn;
          this.LCC_OTRONOMBRE = LCC_OTRONOMBREIn;
          this.LCC_TASA_INTERES = LCC_TASA_INTERESIn;
          this.LCC_EDITABLE = LCC_EDITABLEIn;
          this.IDITEMCOMPARENDO = IDITEMCOMPARENDOIn;
          this.IDEMPRESAASIGNA = IDEMPRESAASIGNAIn;
    }


    /** 
     * hasEqualMapping-method will compare two LconceptosCobro instances
     * and return true if they contain same values in all persistent instance 
     * variables. If hasEqualMapping returns true, it does not mean the objects
     * are the same instance. However it does mean that in that moment, they 
     * are mapped to the same row in database.
     */
    public boolean hasEqualMapping(LconceptosCobro valueObject) {

          if (valueObject.getLCC_ID() != this.LCC_ID) {
                    return(false);
          }
          if (this.LCC_NOMBRE == null) {
                    if (valueObject.getLCC_NOMBRE() != null)
                           return(false);
          } else if (!this.LCC_NOMBRE.equals(valueObject.getLCC_NOMBRE())) {
                    return(false);
          }
          if (this.LCC_DESCRIPCION == null) {
                    if (valueObject.getLCC_DESCRIPCION() != null)
                           return(false);
          } else if (!this.LCC_DESCRIPCION.equals(valueObject.getLCC_DESCRIPCION())) {
                    return(false);
          }
          if (valueObject.getLCC_ACTIVO() != this.LCC_ACTIVO) {
                    return(false);
          }
          if (this.LCC_DETLIQUIDACION == null) {
                    if (valueObject.getLCC_DETLIQUIDACION() != null)
                           return(false);
          } else if (!this.LCC_DETLIQUIDACION.equals(valueObject.getLCC_DETLIQUIDACION())) {
                    return(false);
          }
          if (valueObject.getLCC_IDCTABANCARIA() != this.LCC_IDCTABANCARIA) {
                    return(false);
          }
          if (this.LCC_OTRONOMBRE == null) {
                    if (valueObject.getLCC_OTRONOMBRE() != null)
                           return(false);
          } else if (!this.LCC_OTRONOMBRE.equals(valueObject.getLCC_OTRONOMBRE())) {
                    return(false);
          }
          if (this.LCC_TASA_INTERES == null) {
                    if (valueObject.getLCC_TASA_INTERES() != null)
                           return(false);
          } else if (!this.LCC_TASA_INTERES.equals(valueObject.getLCC_TASA_INTERES())) {
                    return(false);
          }
          if (this.LCC_EDITABLE == null) {
                    if (valueObject.getLCC_EDITABLE() != null)
                           return(false);
          } else if (!this.LCC_EDITABLE.equals(valueObject.getLCC_EDITABLE())) {
                    return(false);
          }
          if (valueObject.getIDITEMCOMPARENDO() != this.IDITEMCOMPARENDO) {
                    return(false);
          }
          if (valueObject.getIDEMPRESAASIGNA() != this.IDEMPRESAASIGNA) {
                    return(false);
          }

          return true;
    }



    /**
     * toString will return String object representing the state of this 
     * valueObject. This is useful during application development, and 
     * possibly when application is writing object states in textlog.
     */
    public String toString() {
        StringBuffer out = new StringBuffer(this.getDaogenVersion());
        out.append("\nclass LconceptosCobro, mapping to table LconceptosCobro\n");
        out.append("Persistent attributes: \n"); 
        out.append("LCC_ID = " + this.LCC_ID + "\n"); 
        out.append("LCC_NOMBRE = " + this.LCC_NOMBRE + "\n"); 
        out.append("LCC_DESCRIPCION = " + this.LCC_DESCRIPCION + "\n"); 
        out.append("LCC_ACTIVO = " + this.LCC_ACTIVO + "\n"); 
        out.append("LCC_DETLIQUIDACION = " + this.LCC_DETLIQUIDACION + "\n"); 
        out.append("LCC_IDCTABANCARIA = " + this.LCC_IDCTABANCARIA + "\n"); 
        out.append("LCC_OTRONOMBRE = " + this.LCC_OTRONOMBRE + "\n"); 
        out.append("LCC_TASA_INTERES = " + this.LCC_TASA_INTERES + "\n"); 
        out.append("LCC_EDITABLE = " + this.LCC_EDITABLE + "\n"); 
        out.append("IDITEMCOMPARENDO = " + this.IDITEMCOMPARENDO + "\n"); 
        out.append("IDEMPRESAASIGNA = " + this.IDEMPRESAASIGNA + "\n"); 
        return out.toString();
    }


    /**
     * Clone will return identical deep copy of this valueObject.
     * Note, that this method is different than the clone() which
     * is defined in java.lang.Object. Here, the retuned cloned object
     * will also have all its attributes cloned.
     */
    public Object clone() {
        LconceptosCobro cloned = new LconceptosCobro();

        cloned.setLCC_ID(this.LCC_ID); 
        if (this.LCC_NOMBRE != null)
             cloned.setLCC_NOMBRE(new String(this.LCC_NOMBRE)); 
        if (this.LCC_DESCRIPCION != null)
             cloned.setLCC_DESCRIPCION(new String(this.LCC_DESCRIPCION)); 
        cloned.setLCC_ACTIVO(this.LCC_ACTIVO); 
        if (this.LCC_DETLIQUIDACION != null)
             cloned.setLCC_DETLIQUIDACION(new String(this.LCC_DETLIQUIDACION)); 
        cloned.setLCC_IDCTABANCARIA(this.LCC_IDCTABANCARIA); 
        if (this.LCC_OTRONOMBRE != null)
             cloned.setLCC_OTRONOMBRE(new String(this.LCC_OTRONOMBRE)); 
        if (this.LCC_TASA_INTERES != null)
             cloned.setLCC_TASA_INTERES(new String(this.LCC_TASA_INTERES)); 
        if (this.LCC_EDITABLE != null)
             cloned.setLCC_EDITABLE(new String(this.LCC_EDITABLE)); 
        cloned.setIDITEMCOMPARENDO(this.IDITEMCOMPARENDO); 
        cloned.setIDEMPRESAASIGNA(this.IDEMPRESAASIGNA); 
        return cloned;
    }



    /** 
     * getDaogenVersion will return information about
     * generator which created these sources.
     */
    public String getDaogenVersion() {
        return "DaoGen version 2.4.1";
    }

}


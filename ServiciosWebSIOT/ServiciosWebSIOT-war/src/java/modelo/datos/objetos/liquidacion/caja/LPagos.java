package modelo.datos.objetos.liquidacion.caja;

import java.io.Serializable;

/**
  * LPagos Value Object.
  * This class is value object representing database table L_PAGOS
  * This class is intented to be used together with associated Dao object.
  */

 /**
  * This sourcecode has been generated by FREE DaoGen generator version 2.4.1.
  * The usage of generated code is restricted to OpenSource software projects
  * only. DaoGen is available in http://titaniclinux.net/daogen/
  * It has been programmed by Tuomo Lukka, Tuomo.Lukka@iki.fi
  *
  * DaoGen license: The following DaoGen generated source code is licensed
  * under the terms of GNU GPL license. The full text for license is available
  * in GNU project's pages: http://www.gnu.org/copyleft/gpl.html
  *
  * If you wish to use the DaoGen generator to produce code for closed-source
  * commercial applications, you must pay the lisence fee. The price is
  * 5 USD or 5 Eur for each database table, you are generating code for.
  * (That includes unlimited amount of iterations with all supported languages
  * for each database table you are paying for.) Send mail to
  * "Tuomo.Lukka@iki.fi" for more information. Thank you!
  */



public class LPagos implements Cloneable, Serializable {

    /** 
     * Persistent Instance variables. This data is directly 
     * mapped to the columns of database table.
     */
    private int LP_ID;
    private int LP_LF_ID;
    private String LP_FECHAHORA;
    private int LP_LTP_ID;
    private double LP_VALOR;
    private String LP_DATOS;
    private int LP_ID_USUARIO;
    private int LP_ID_ARQUEO;
    private String CODIGOBANCO;
    private String CODIGOAUTORIZACION;
    private String TARJETA;
    private String NUMEROCHEQUE;
    private String NOMBRE;
    private String CEDULA;
    private String DIRECCION;
    private String TELEFONO;



    /** 
     * Constructors. DaoGen generates two constructors by default.
     * The first one takes no arguments and provides the most simple
     * way to create object instance. The another one takes one
     * argument, which is the primary key of the corresponding table.
     */

    public LPagos () {

    }

    public LPagos (int LP_IDIn) {

          this.LP_ID = LP_IDIn;

    }


    /** 
     * Get- and Set-methods for persistent variables. The default
     * behaviour does not make any checks against malformed data,
     * so these might require some manual additions.
     */

    public int getLP_ID() {
          return this.LP_ID;
    }
    public void setLP_ID(int LP_IDIn) {
          this.LP_ID = LP_IDIn;
    }

    public int getLP_LF_ID() {
          return this.LP_LF_ID;
    }
    public void setLP_LF_ID(int LP_LF_IDIn) {
          this.LP_LF_ID = LP_LF_IDIn;
    }

    public String getLP_FECHAHORA() {
          return this.LP_FECHAHORA;
    }
    public void setLP_FECHAHORA(String LP_FECHAHORAIn) {
          this.LP_FECHAHORA = LP_FECHAHORAIn;
    }

    public int getLP_LTP_ID() {
          return this.LP_LTP_ID;
    }
    public void setLP_LTP_ID(int LP_LTP_IDIn) {
          this.LP_LTP_ID = LP_LTP_IDIn;
    }

    public double getLP_VALOR() {
          return this.LP_VALOR;
    }
    public void setLP_VALOR(double LP_VALORIn) {
          this.LP_VALOR = LP_VALORIn;
    }

    public String getLP_DATOS() {
          return this.LP_DATOS;
    }
    public void setLP_DATOS(String LP_DATOSIn) {
          this.LP_DATOS = LP_DATOSIn;
    }

    public int getLP_ID_USUARIO() {
          return this.LP_ID_USUARIO;
    }
    public void setLP_ID_USUARIO(int LP_ID_USUARIOIn) {
          this.LP_ID_USUARIO = LP_ID_USUARIOIn;
    }

    public int getLP_ID_ARQUEO() {
          return this.LP_ID_ARQUEO;
    }
    public void setLP_ID_ARQUEO(int LP_ID_ARQUEOIn) {
          this.LP_ID_ARQUEO = LP_ID_ARQUEOIn;
    }

    public String getCODIGOBANCO() {
          return this.CODIGOBANCO;
    }
    public void setCODIGOBANCO(String CODIGOBANCOIn) {
          this.CODIGOBANCO = CODIGOBANCOIn;
    }

    public String getCODIGOAUTORIZACION() {
          return this.CODIGOAUTORIZACION;
    }
    public void setCODIGOAUTORIZACION(String CODIGOAUTORIZACIONIn) {
          this.CODIGOAUTORIZACION = CODIGOAUTORIZACIONIn;
    }

    public String getTARJETA() {
          return this.TARJETA;
    }
    public void setTARJETA(String TARJETAIn) {
          this.TARJETA = TARJETAIn;
    }

    public String getNUMEROCHEQUE() {
          return this.NUMEROCHEQUE;
    }
    public void setNUMEROCHEQUE(String NUMEROCHEQUEIn) {
          this.NUMEROCHEQUE = NUMEROCHEQUEIn;
    }

    public String getNOMBRE() {
          return this.NOMBRE;
    }
    public void setNOMBRE(String NOMBREIn) {
          this.NOMBRE = NOMBREIn;
    }

    public String getCEDULA() {
          return this.CEDULA;
    }
    public void setCEDULA(String CEDULAIn) {
          this.CEDULA = CEDULAIn;
    }

    public String getDIRECCION() {
          return this.DIRECCION;
    }
    public void setDIRECCION(String DIRECCIONIn) {
          this.DIRECCION = DIRECCIONIn;
    }

    public String getTELEFONO() {
          return this.TELEFONO;
    }
    public void setTELEFONO(String TELEFONOIn) {
          this.TELEFONO = TELEFONOIn;
    }



    /** 
     * setAll allows to set all persistent variables in one method call.
     * This is useful, when all data is available and it is needed to 
     * set the initial state of this object. Note that this method will
     * directly modify instance variales, without going trough the 
     * individual set-methods.
     */

    public void setAll(int LP_IDIn,
          int LP_LF_IDIn,
          String LP_FECHAHORAIn,
          int LP_LTP_IDIn,
          double LP_VALORIn,
          String LP_DATOSIn,
          int LP_ID_USUARIOIn,
          int LP_ID_ARQUEOIn,
          String CODIGOBANCOIn,
          String CODIGOAUTORIZACIONIn,
          String TARJETAIn,
          String NUMEROCHEQUEIn,
          String NOMBREIn,
          String CEDULAIn,
          String DIRECCIONIn,
          String TELEFONOIn) {
          this.LP_ID = LP_IDIn;
          this.LP_LF_ID = LP_LF_IDIn;
          this.LP_FECHAHORA = LP_FECHAHORAIn;
          this.LP_LTP_ID = LP_LTP_IDIn;
          this.LP_VALOR = LP_VALORIn;
          this.LP_DATOS = LP_DATOSIn;
          this.LP_ID_USUARIO = LP_ID_USUARIOIn;
          this.LP_ID_ARQUEO = LP_ID_ARQUEOIn;
          this.CODIGOBANCO = CODIGOBANCOIn;
          this.CODIGOAUTORIZACION = CODIGOAUTORIZACIONIn;
          this.TARJETA = TARJETAIn;
          this.NUMEROCHEQUE = NUMEROCHEQUEIn;
          this.NOMBRE = NOMBREIn;
          this.CEDULA = CEDULAIn;
          this.DIRECCION = DIRECCIONIn;
          this.TELEFONO = TELEFONOIn;
    }


    /** 
     * hasEqualMapping-method will compare two LPagos instances
     * and return true if they contain same values in all persistent instance 
     * variables. If hasEqualMapping returns true, it does not mean the objects
     * are the same instance. However it does mean that in that moment, they 
     * are mapped to the same row in database.
     */
    public boolean hasEqualMapping(LPagos valueObject) {

          if (valueObject.getLP_ID() != this.LP_ID) {
                    return(false);
          }
          if (valueObject.getLP_LF_ID() != this.LP_LF_ID) {
                    return(false);
          }
          if (this.LP_FECHAHORA == null) {
                    if (valueObject.getLP_FECHAHORA() != null)
                           return(false);
          } else if (!this.LP_FECHAHORA.equals(valueObject.getLP_FECHAHORA())) {
                    return(false);
          }
          if (valueObject.getLP_LTP_ID() != this.LP_LTP_ID) {
                    return(false);
          }
          if (valueObject.getLP_VALOR() != this.LP_VALOR) {
                    return(false);
          }
          if (this.LP_DATOS == null) {
                    if (valueObject.getLP_DATOS() != null)
                           return(false);
          } else if (!this.LP_DATOS.equals(valueObject.getLP_DATOS())) {
                    return(false);
          }
          if (valueObject.getLP_ID_USUARIO() != this.LP_ID_USUARIO) {
                    return(false);
          }
          if (valueObject.getLP_ID_ARQUEO() != this.LP_ID_ARQUEO) {
                    return(false);
          }
          if (this.CODIGOBANCO == null) {
                    if (valueObject.getCODIGOBANCO() != null)
                           return(false);
          } else if (!this.CODIGOBANCO.equals(valueObject.getCODIGOBANCO())) {
                    return(false);
          }
          if (this.CODIGOAUTORIZACION == null) {
                    if (valueObject.getCODIGOAUTORIZACION() != null)
                           return(false);
          } else if (!this.CODIGOAUTORIZACION.equals(valueObject.getCODIGOAUTORIZACION())) {
                    return(false);
          }
          if (this.TARJETA == null) {
                    if (valueObject.getTARJETA() != null)
                           return(false);
          } else if (!this.TARJETA.equals(valueObject.getTARJETA())) {
                    return(false);
          }
          if (this.NUMEROCHEQUE == null) {
                    if (valueObject.getNUMEROCHEQUE() != null)
                           return(false);
          } else if (!this.NUMEROCHEQUE.equals(valueObject.getNUMEROCHEQUE())) {
                    return(false);
          }
          if (this.NOMBRE == null) {
                    if (valueObject.getNOMBRE() != null)
                           return(false);
          } else if (!this.NOMBRE.equals(valueObject.getNOMBRE())) {
                    return(false);
          }
          if (this.CEDULA == null) {
                    if (valueObject.getCEDULA() != null)
                           return(false);
          } else if (!this.CEDULA.equals(valueObject.getCEDULA())) {
                    return(false);
          }
          if (this.DIRECCION == null) {
                    if (valueObject.getDIRECCION() != null)
                           return(false);
          } else if (!this.DIRECCION.equals(valueObject.getDIRECCION())) {
                    return(false);
          }
          if (this.TELEFONO == null) {
                    if (valueObject.getTELEFONO() != null)
                           return(false);
          } else if (!this.TELEFONO.equals(valueObject.getTELEFONO())) {
                    return(false);
          }

          return true;
    }



    /**
     * toString will return String object representing the state of this 
     * valueObject. This is useful during application development, and 
     * possibly when application is writing object states in textlog.
     */
    public String toString() {
        StringBuffer out = new StringBuffer(this.getDaogenVersion());
        out.append("\nclass LPagos, mapping to table L_PAGOS\n");
        out.append("Persistent attributes: \n"); 
        out.append("LP_ID = " + this.LP_ID + "\n"); 
        out.append("LP_LF_ID = " + this.LP_LF_ID + "\n"); 
        out.append("LP_FECHAHORA = " + this.LP_FECHAHORA + "\n"); 
        out.append("LP_LTP_ID = " + this.LP_LTP_ID + "\n"); 
        out.append("LP_VALOR = " + this.LP_VALOR + "\n"); 
        out.append("LP_DATOS = " + this.LP_DATOS + "\n"); 
        out.append("LP_ID_USUARIO = " + this.LP_ID_USUARIO + "\n"); 
        out.append("LP_ID_ARQUEO = " + this.LP_ID_ARQUEO + "\n"); 
        out.append("CODIGOBANCO = " + this.CODIGOBANCO + "\n"); 
        out.append("CODIGOAUTORIZACION = " + this.CODIGOAUTORIZACION + "\n"); 
        out.append("TARJETA = " + this.TARJETA + "\n"); 
        out.append("NUMEROCHEQUE = " + this.NUMEROCHEQUE + "\n"); 
        out.append("NOMBRE = " + this.NOMBRE + "\n"); 
        out.append("CEDULA = " + this.CEDULA + "\n"); 
        out.append("DIRECCION = " + this.DIRECCION + "\n"); 
        out.append("TELEFONO = " + this.TELEFONO + "\n"); 
        return out.toString();
    }


    /**
     * Clone will return identical deep copy of this valueObject.
     * Note, that this method is different than the clone() which
     * is defined in java.lang.Object. Here, the retuned cloned object
     * will also have all its attributes cloned.
     */
    public Object clone() {
        LPagos cloned = new LPagos();

        cloned.setLP_ID(this.LP_ID); 
        cloned.setLP_LF_ID(this.LP_LF_ID); 
        if (this.LP_FECHAHORA != null)
             cloned.setLP_FECHAHORA(new String(this.LP_FECHAHORA)); 
        cloned.setLP_LTP_ID(this.LP_LTP_ID); 
        cloned.setLP_VALOR(this.LP_VALOR); 
        if (this.LP_DATOS != null)
             cloned.setLP_DATOS(new String(this.LP_DATOS)); 
        cloned.setLP_ID_USUARIO(this.LP_ID_USUARIO); 
        cloned.setLP_ID_ARQUEO(this.LP_ID_ARQUEO); 
        if (this.CODIGOBANCO != null)
             cloned.setCODIGOBANCO(new String(this.CODIGOBANCO)); 
        if (this.CODIGOAUTORIZACION != null)
             cloned.setCODIGOAUTORIZACION(new String(this.CODIGOAUTORIZACION)); 
        if (this.TARJETA != null)
             cloned.setTARJETA(new String(this.TARJETA)); 
        if (this.NUMEROCHEQUE != null)
             cloned.setNUMEROCHEQUE(new String(this.NUMEROCHEQUE)); 
        if (this.NOMBRE != null)
             cloned.setNOMBRE(new String(this.NOMBRE)); 
        if (this.CEDULA != null)
             cloned.setCEDULA(new String(this.CEDULA)); 
        if (this.DIRECCION != null)
             cloned.setDIRECCION(new String(this.DIRECCION)); 
        if (this.TELEFONO != null)
             cloned.setTELEFONO(new String(this.TELEFONO)); 
        return cloned;
    }



    /** 
     * getDaogenVersion will return information about
     * generator which created these sources.
     */
    public String getDaogenVersion() {
        return "DaoGen version 2.4.1";
    }

}
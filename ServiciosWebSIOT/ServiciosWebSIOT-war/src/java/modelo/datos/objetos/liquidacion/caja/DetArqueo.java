package modelo.datos.objetos.liquidacion.caja;

import java.io.*;
import java.sql.*;
import java.util.*;
import java.math.*;

 /**
  * DetArqueo Value Object.
  * This class is value object representing database table DetArqueo
  * This class is intented to be used together with associated Dao object.
  */

 /**
  * This sourcecode has been generated by FREE DaoGen generator version 2.4.1.
  * The usage of generated code is restricted to OpenSource software projects
  * only. DaoGen is available in http://titaniclinux.net/daogen/
  * It has been programmed by Tuomo Lukka, Tuomo.Lukka@iki.fi
  *
  * DaoGen license: The following DaoGen generated source code is licensed
  * under the terms of GNU GPL license. The full text for license is available
  * in GNU project's pages: http://www.gnu.org/copyleft/gpl.html
  *
  * If you wish to use the DaoGen generator to produce code for closed-source
  * commercial applications, you must pay the lisence fee. The price is
  * 5 USD or 5 Eur for each database table, you are generating code for.
  * (That includes unlimited amount of iterations with all supported languages
  * for each database table you are paying for.) Send mail to
  * "Tuomo.Lukka@iki.fi" for more information. Thank you!
  */



public class DetArqueo implements Cloneable, Serializable {

    /** 
     * Persistent Instance variables. This data is directly 
     * mapped to the columns of database table.
     */
    private int IDDETARQUEO;
    private String FAC_VLT;
    private int IDFACTURA;
    private String FAC_NRO;
    private String REC_NRO;
    private String ESTADO;
    private String FECHAFACTURA;
    private String HORAFACTURA;
    private String VALORPAGO;
    private String COD_CAJERO;
    private String NOM_CAJERO;
    private int ID_ARQUEO;
    private String VLR_BASE;
    private int IDUSR_FACTURA;
    private int IDUSR_PAGO;
    private int ID_TIPOPAGO;
    private String DESTIPOPAGO;
    private String FECHAPAGO;



    /** 
     * Constructors. DaoGen generates two constructors by default.
     * The first one takes no arguments and provides the most simple
     * way to create object instance. The another one takes one
     * argument, which is the primary key of the corresponding table.
     */

    public DetArqueo () {

    }

    public DetArqueo (int IDDETARQUEOIn) {

          this.IDDETARQUEO = IDDETARQUEOIn;

    }


    /** 
     * Get- and Set-methods for persistent variables. The default
     * behaviour does not make any checks against malformed data,
     * so these might require some manual additions.
     */

    public int getIDDETARQUEO() {
          return this.IDDETARQUEO;
    }
    public void setIDDETARQUEO(int IDDETARQUEOIn) {
          this.IDDETARQUEO = IDDETARQUEOIn;
    }

    public String getFAC_VLT() {
          return this.FAC_VLT;
    }
    public void setFAC_VLT(String FAC_VLTIn) {
          this.FAC_VLT = FAC_VLTIn;
    }

    public int getIDFACTURA() {
          return this.IDFACTURA;
    }
    public void setIDFACTURA(int IDFACTURAIn) {
          this.IDFACTURA = IDFACTURAIn;
    }

    public String getFAC_NRO() {
          return this.FAC_NRO;
    }
    public void setFAC_NRO(String FAC_NROIn) {
          this.FAC_NRO = FAC_NROIn;
    }

    public String getREC_NRO() {
          return this.REC_NRO;
    }
    public void setREC_NRO(String REC_NROIn) {
          this.REC_NRO = REC_NROIn;
    }

    public String getESTADO() {
          return this.ESTADO;
    }
    public void setESTADO(String ESTADOIn) {
          this.ESTADO = ESTADOIn;
    }

    public String getFECHAFACTURA() {
          return this.FECHAFACTURA;
    }
    public void setFECHAFACTURA(String FECHAFACTURAIn) {
          this.FECHAFACTURA = FECHAFACTURAIn;
    }

    public String getHORAFACTURA() {
          return this.HORAFACTURA;
    }
    public void setHORAFACTURA(String HORAFACTURAIn) {
          this.HORAFACTURA = HORAFACTURAIn;
    }

    public String getVALORPAGO() {
          return this.VALORPAGO;
    }
    public void setVALORPAGO(String VALORPAGOIn) {
          this.VALORPAGO = VALORPAGOIn;
    }

    public String getCOD_CAJERO() {
          return this.COD_CAJERO;
    }
    public void setCOD_CAJERO(String COD_CAJEROIn) {
          this.COD_CAJERO = COD_CAJEROIn;
    }

    public String getNOM_CAJERO() {
          return this.NOM_CAJERO;
    }
    public void setNOM_CAJERO(String NOM_CAJEROIn) {
          this.NOM_CAJERO = NOM_CAJEROIn;
    }

    public int getID_ARQUEO() {
          return this.ID_ARQUEO;
    }
    public void setID_ARQUEO(int ID_ARQUEOIn) {
          this.ID_ARQUEO = ID_ARQUEOIn;
    }

    public String getVLR_BASE() {
          return this.VLR_BASE;
    }
    public void setVLR_BASE(String VLR_BASEIn) {
          this.VLR_BASE = VLR_BASEIn;
    }

    public int getIDUSR_FACTURA() {
          return this.IDUSR_FACTURA;
    }
    public void setIDUSR_FACTURA(int IDUSR_FACTURAIn) {
          this.IDUSR_FACTURA = IDUSR_FACTURAIn;
    }

    public int getIDUSR_PAGO() {
          return this.IDUSR_PAGO;
    }
    public void setIDUSR_PAGO(int IDUSR_PAGOIn) {
          this.IDUSR_PAGO = IDUSR_PAGOIn;
    }

    public int getID_TIPOPAGO() {
          return this.ID_TIPOPAGO;
    }
    public void setID_TIPOPAGO(int ID_TIPOPAGOIn) {
          this.ID_TIPOPAGO = ID_TIPOPAGOIn;
    }

    public String getDESTIPOPAGO() {
          return this.DESTIPOPAGO;
    }
    public void setDESTIPOPAGO(String DESTIPOPAGOIn) {
          this.DESTIPOPAGO = DESTIPOPAGOIn;
    }

    public String getFECHAPAGO() {
          return this.FECHAPAGO;
    }
    public void setFECHAPAGO(String FECHAPAGOIn) {
          this.FECHAPAGO = FECHAPAGOIn;
    }



    /** 
     * setAll allows to set all persistent variables in one method call.
     * This is useful, when all data is available and it is needed to 
     * set the initial state of this object. Note that this method will
     * directly modify instance variales, without going trough the 
     * individual set-methods.
     */

    public void setAll(int IDDETARQUEOIn,
          String FAC_VLTIn,
          int IDFACTURAIn,
          String FAC_NROIn,
          String REC_NROIn,
          String ESTADOIn,
          String FECHAFACTURAIn,
          String HORAFACTURAIn,
          String VALORPAGOIn,
          String COD_CAJEROIn,
          String NOM_CAJEROIn,
          int ID_ARQUEOIn,
          String VLR_BASEIn,
          int IDUSR_FACTURAIn,
          int IDUSR_PAGOIn,
          int ID_TIPOPAGOIn,
          String DESTIPOPAGOIn,
          String FECHAPAGOIn) {
          this.IDDETARQUEO = IDDETARQUEOIn;
          this.FAC_VLT = FAC_VLTIn;
          this.IDFACTURA = IDFACTURAIn;
          this.FAC_NRO = FAC_NROIn;
          this.REC_NRO = REC_NROIn;
          this.ESTADO = ESTADOIn;
          this.FECHAFACTURA = FECHAFACTURAIn;
          this.HORAFACTURA = HORAFACTURAIn;
          this.VALORPAGO = VALORPAGOIn;
          this.COD_CAJERO = COD_CAJEROIn;
          this.NOM_CAJERO = NOM_CAJEROIn;
          this.ID_ARQUEO = ID_ARQUEOIn;
          this.VLR_BASE = VLR_BASEIn;
          this.IDUSR_FACTURA = IDUSR_FACTURAIn;
          this.IDUSR_PAGO = IDUSR_PAGOIn;
          this.ID_TIPOPAGO = ID_TIPOPAGOIn;
          this.DESTIPOPAGO = DESTIPOPAGOIn;
          this.FECHAPAGO = FECHAPAGOIn;
    }


    /** 
     * hasEqualMapping-method will compare two DetArqueo instances
     * and return true if they contain same values in all persistent instance 
     * variables. If hasEqualMapping returns true, it does not mean the objects
     * are the same instance. However it does mean that in that moment, they 
     * are mapped to the same row in database.
     */
    public boolean hasEqualMapping(DetArqueo valueObject) {

          if (valueObject.getIDDETARQUEO() != this.IDDETARQUEO) {
                    return(false);
          }
          if (this.FAC_VLT == null) {
                    if (valueObject.getFAC_VLT() != null)
                           return(false);
          } else if (!this.FAC_VLT.equals(valueObject.getFAC_VLT())) {
                    return(false);
          }
          if (valueObject.getIDFACTURA() != this.IDFACTURA) {
                    return(false);
          }
          if (this.FAC_NRO == null) {
                    if (valueObject.getFAC_NRO() != null)
                           return(false);
          } else if (!this.FAC_NRO.equals(valueObject.getFAC_NRO())) {
                    return(false);
          }
          if (this.REC_NRO == null) {
                    if (valueObject.getREC_NRO() != null)
                           return(false);
          } else if (!this.REC_NRO.equals(valueObject.getREC_NRO())) {
                    return(false);
          }
          if (this.ESTADO == null) {
                    if (valueObject.getESTADO() != null)
                           return(false);
          } else if (!this.ESTADO.equals(valueObject.getESTADO())) {
                    return(false);
          }
          if (this.FECHAFACTURA == null) {
                    if (valueObject.getFECHAFACTURA() != null)
                           return(false);
          } else if (!this.FECHAFACTURA.equals(valueObject.getFECHAFACTURA())) {
                    return(false);
          }
          if (this.HORAFACTURA == null) {
                    if (valueObject.getHORAFACTURA() != null)
                           return(false);
          } else if (!this.HORAFACTURA.equals(valueObject.getHORAFACTURA())) {
                    return(false);
          }
          if (this.VALORPAGO == null) {
                    if (valueObject.getVALORPAGO() != null)
                           return(false);
          } else if (!this.VALORPAGO.equals(valueObject.getVALORPAGO())) {
                    return(false);
          }
          if (this.COD_CAJERO == null) {
                    if (valueObject.getCOD_CAJERO() != null)
                           return(false);
          } else if (!this.COD_CAJERO.equals(valueObject.getCOD_CAJERO())) {
                    return(false);
          }
          if (this.NOM_CAJERO == null) {
                    if (valueObject.getNOM_CAJERO() != null)
                           return(false);
          } else if (!this.NOM_CAJERO.equals(valueObject.getNOM_CAJERO())) {
                    return(false);
          }
          if (valueObject.getID_ARQUEO() != this.ID_ARQUEO) {
                    return(false);
          }
          if (this.VLR_BASE == null) {
                    if (valueObject.getVLR_BASE() != null)
                           return(false);
          } else if (!this.VLR_BASE.equals(valueObject.getVLR_BASE())) {
                    return(false);
          }
          if (valueObject.getIDUSR_FACTURA() != this.IDUSR_FACTURA) {
                    return(false);
          }
          if (valueObject.getIDUSR_PAGO() != this.IDUSR_PAGO) {
                    return(false);
          }
          if (valueObject.getID_TIPOPAGO() != this.ID_TIPOPAGO) {
                    return(false);
          }
          if (this.DESTIPOPAGO == null) {
                    if (valueObject.getDESTIPOPAGO() != null)
                           return(false);
          } else if (!this.DESTIPOPAGO.equals(valueObject.getDESTIPOPAGO())) {
                    return(false);
          }
          if (this.FECHAPAGO == null) {
                    if (valueObject.getFECHAPAGO() != null)
                           return(false);
          } else if (!this.FECHAPAGO.equals(valueObject.getFECHAPAGO())) {
                    return(false);
          }

          return true;
    }



    /**
     * toString will return String object representing the state of this 
     * valueObject. This is useful during application development, and 
     * possibly when application is writing object states in textlog.
     */
    public String toString() {
        StringBuffer out = new StringBuffer(this.getDaogenVersion());
        out.append("\nclass DetArqueo, mapping to table DetArqueo\n");
        out.append("Persistent attributes: \n"); 
        out.append("IDDETARQUEO = " + this.IDDETARQUEO + "\n"); 
        out.append("FAC_VLT = " + this.FAC_VLT + "\n"); 
        out.append("IDFACTURA = " + this.IDFACTURA + "\n"); 
        out.append("FAC_NRO = " + this.FAC_NRO + "\n"); 
        out.append("REC_NRO = " + this.REC_NRO + "\n"); 
        out.append("ESTADO = " + this.ESTADO + "\n"); 
        out.append("FECHAFACTURA = " + this.FECHAFACTURA + "\n"); 
        out.append("HORAFACTURA = " + this.HORAFACTURA + "\n"); 
        out.append("VALORPAGO = " + this.VALORPAGO + "\n"); 
        out.append("COD_CAJERO = " + this.COD_CAJERO + "\n"); 
        out.append("NOM_CAJERO = " + this.NOM_CAJERO + "\n"); 
        out.append("ID_ARQUEO = " + this.ID_ARQUEO + "\n"); 
        out.append("VLR_BASE = " + this.VLR_BASE + "\n"); 
        out.append("IDUSR_FACTURA = " + this.IDUSR_FACTURA + "\n"); 
        out.append("IDUSR_PAGO = " + this.IDUSR_PAGO + "\n"); 
        out.append("ID_TIPOPAGO = " + this.ID_TIPOPAGO + "\n"); 
        out.append("DESTIPOPAGO = " + this.DESTIPOPAGO + "\n"); 
        out.append("FECHAPAGO = " + this.FECHAPAGO + "\n"); 
        return out.toString();
    }


    /**
     * Clone will return identical deep copy of this valueObject.
     * Note, that this method is different than the clone() which
     * is defined in java.lang.Object. Here, the retuned cloned object
     * will also have all its attributes cloned.
     */
    public Object clone() {
        DetArqueo cloned = new DetArqueo();

        cloned.setIDDETARQUEO(this.IDDETARQUEO); 
        if (this.FAC_VLT != null)
             cloned.setFAC_VLT(new String(this.FAC_VLT)); 
        cloned.setIDFACTURA(this.IDFACTURA); 
        if (this.FAC_NRO != null)
             cloned.setFAC_NRO(new String(this.FAC_NRO)); 
        if (this.REC_NRO != null)
             cloned.setREC_NRO(new String(this.REC_NRO)); 
        if (this.ESTADO != null)
             cloned.setESTADO(new String(this.ESTADO)); 
        if (this.FECHAFACTURA != null)
             cloned.setFECHAFACTURA(new String(this.FECHAFACTURA)); 
        if (this.HORAFACTURA != null)
             cloned.setHORAFACTURA(new String(this.HORAFACTURA)); 
        if (this.VALORPAGO != null)
             cloned.setVALORPAGO(new String(this.VALORPAGO)); 
        if (this.COD_CAJERO != null)
             cloned.setCOD_CAJERO(new String(this.COD_CAJERO)); 
        if (this.NOM_CAJERO != null)
             cloned.setNOM_CAJERO(new String(this.NOM_CAJERO)); 
        cloned.setID_ARQUEO(this.ID_ARQUEO); 
        if (this.VLR_BASE != null)
             cloned.setVLR_BASE(new String(this.VLR_BASE)); 
        cloned.setIDUSR_FACTURA(this.IDUSR_FACTURA); 
        cloned.setIDUSR_PAGO(this.IDUSR_PAGO); 
        cloned.setID_TIPOPAGO(this.ID_TIPOPAGO); 
        if (this.DESTIPOPAGO != null)
             cloned.setDESTIPOPAGO(new String(this.DESTIPOPAGO)); 
        if (this.FECHAPAGO != null)
             cloned.setFECHAPAGO(new String(this.FECHAPAGO)); 
        return cloned;
    }



    /** 
     * getDaogenVersion will return information about
     * generator which created these sources.
     */
    public String getDaogenVersion() {
        return "DaoGen version 2.4.1";
    }

}



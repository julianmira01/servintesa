package modelo.datos.objetos.liquidacion.caja;

import java.io.*;
import java.sql.*;
import java.util.*;
import java.math.*;

 /**
  * DetArqueoRunt Value Object.
  * This class is value object representing database table DetArqueoRunt
  * This class is intented to be used together with associated Dao object.
  */

 /**
  * This sourcecode has been generated by FREE DaoGen generator version 2.4.1.
  * The usage of generated code is restricted to OpenSource software projects
  * only. DaoGen is available in http://titaniclinux.net/daogen/
  * It has been programmed by Tuomo Lukka, Tuomo.Lukka@iki.fi
  *
  * DaoGen license: The following DaoGen generated source code is licensed
  * under the terms of GNU GPL license. The full text for license is available
  * in GNU project's pages: http://www.gnu.org/copyleft/gpl.html
  *
  * If you wish to use the DaoGen generator to produce code for closed-source
  * commercial applications, you must pay the lisence fee. The price is
  * 5 USD or 5 Eur for each database table, you are generating code for.
  * (That includes unlimited amount of iterations with all supported languages
  * for each database table you are paying for.) Send mail to
  * "Tuomo.Lukka@iki.fi" for more information. Thank you!
  */



public class DetArqueoRunt implements Cloneable, Serializable {

    /** 
     * Persistent Instance variables. This data is directly 
     * mapped to the columns of database table.
     */
    private int IDDETARQUEO;
    private String FAC_VLT;
    private int IDPAGORUNT;
    private String FAC_NRO;
    private String FECHAPAGOFACTURA;
    private String VALORPAGOMT;
    private String VALORPAGORUNT;
    private String COD_CAJERO;
    private String NOM_CAJERO;
    private int ID_ARQUEO;
    private String VLR_BASE;
    private String IDUSRPAGA;
    private String APELLIDOCAJERO;
    private String ESTADOFACTURA;



    /** 
     * Constructors. DaoGen generates two constructors by default.
     * The first one takes no arguments and provides the most simple
     * way to create object instance. The another one takes one
     * argument, which is the primary key of the corresponding table.
     */

    public DetArqueoRunt () {

    }

    public DetArqueoRunt (int IDDETARQUEOIn) {

          this.IDDETARQUEO = IDDETARQUEOIn;

    }


    /** 
     * Get- and Set-methods for persistent variables. The default
     * behaviour does not make any checks against malformed data,
     * so these might require some manual additions.
     */

    public int getIDDETARQUEO() {
          return this.IDDETARQUEO;
    }
    public void setIDDETARQUEO(int IDDETARQUEOIn) {
          this.IDDETARQUEO = IDDETARQUEOIn;
    }

    public String getFAC_VLT() {
          return this.FAC_VLT;
    }
    public void setFAC_VLT(String FAC_VLTIn) {
          this.FAC_VLT = FAC_VLTIn;
    }

    public int getIDPAGORUNT() {
          return this.IDPAGORUNT;
    }
    public void setIDPAGORUNT(int IDPAGORUNTIn) {
          this.IDPAGORUNT = IDPAGORUNTIn;
    }

    public String getFAC_NRO() {
          return this.FAC_NRO;
    }
    public void setFAC_NRO(String FAC_NROIn) {
          this.FAC_NRO = FAC_NROIn;
    }

    public String getFECHAPAGOFACTURA() {
          return this.FECHAPAGOFACTURA;
    }
    public void setFECHAPAGOFACTURA(String FECHAPAGOFACTURAIn) {
          this.FECHAPAGOFACTURA = FECHAPAGOFACTURAIn;
    }

    public String getVALORPAGOMT() {
          return this.VALORPAGOMT;
    }
    public void setVALORPAGOMT(String VALORPAGOMTIn) {
          this.VALORPAGOMT = VALORPAGOMTIn;
    }

    public String getVALORPAGORUNT() {
          return this.VALORPAGORUNT;
    }
    public void setVALORPAGORUNT(String VALORPAGORUNTIn) {
          this.VALORPAGORUNT = VALORPAGORUNTIn;
    }

    public String getCOD_CAJERO() {
          return this.COD_CAJERO;
    }
    public void setCOD_CAJERO(String COD_CAJEROIn) {
          this.COD_CAJERO = COD_CAJEROIn;
    }

    public String getNOM_CAJERO() {
          return this.NOM_CAJERO;
    }
    public void setNOM_CAJERO(String NOM_CAJEROIn) {
          this.NOM_CAJERO = NOM_CAJEROIn;
    }

    public int getID_ARQUEO() {
          return this.ID_ARQUEO;
    }
    public void setID_ARQUEO(int ID_ARQUEOIn) {
          this.ID_ARQUEO = ID_ARQUEOIn;
    }

    public String getVLR_BASE() {
          return this.VLR_BASE;
    }
    public void setVLR_BASE(String VLR_BASEIn) {
          this.VLR_BASE = VLR_BASEIn;
    }

    public String getIDUSRPAGA() {
          return this.IDUSRPAGA;
    }
    public void setIDUSRPAGA(String IDUSRPAGAIn) {
          this.IDUSRPAGA = IDUSRPAGAIn;
    }

    public String getAPELLIDOCAJERO() {
          return this.APELLIDOCAJERO;
    }
    public void setAPELLIDOCAJERO(String APELLIDOCAJEROIn) {
          this.APELLIDOCAJERO = APELLIDOCAJEROIn;
    }

    public String getESTADOFACTURA() {
          return this.ESTADOFACTURA;
    }
    public void setESTADOFACTURA(String ESTADOFACTURAIn) {
          this.ESTADOFACTURA = ESTADOFACTURAIn;
    }



    /** 
     * setAll allows to set all persistent variables in one method call.
     * This is useful, when all data is available and it is needed to 
     * set the initial state of this object. Note that this method will
     * directly modify instance variales, without going trough the 
     * individual set-methods.
     */

    public void setAll(int IDDETARQUEOIn,
          String FAC_VLTIn,
          int IDPAGORUNTIn,
          String FAC_NROIn,
          String FECHAPAGOFACTURAIn,
          String VALORPAGOMTIn,
          String VALORPAGORUNTIn,
          String COD_CAJEROIn,
          String NOM_CAJEROIn,
          int ID_ARQUEOIn,
          String VLR_BASEIn,
          String IDUSRPAGAIn,
          String APELLIDOCAJEROIn,
          String ESTADOFACTURAIn) {
          this.IDDETARQUEO = IDDETARQUEOIn;
          this.FAC_VLT = FAC_VLTIn;
          this.IDPAGORUNT = IDPAGORUNTIn;
          this.FAC_NRO = FAC_NROIn;
          this.FECHAPAGOFACTURA = FECHAPAGOFACTURAIn;
          this.VALORPAGOMT = VALORPAGOMTIn;
          this.VALORPAGORUNT = VALORPAGORUNTIn;
          this.COD_CAJERO = COD_CAJEROIn;
          this.NOM_CAJERO = NOM_CAJEROIn;
          this.ID_ARQUEO = ID_ARQUEOIn;
          this.VLR_BASE = VLR_BASEIn;
          this.IDUSRPAGA = IDUSRPAGAIn;
          this.APELLIDOCAJERO = APELLIDOCAJEROIn;
          this.ESTADOFACTURA = ESTADOFACTURAIn;
    }


    /** 
     * hasEqualMapping-method will compare two DetArqueoRunt instances
     * and return true if they contain same values in all persistent instance 
     * variables. If hasEqualMapping returns true, it does not mean the objects
     * are the same instance. However it does mean that in that moment, they 
     * are mapped to the same row in database.
     */
    public boolean hasEqualMapping(DetArqueoRunt valueObject) {

          if (valueObject.getIDDETARQUEO() != this.IDDETARQUEO) {
                    return(false);
          }
          if (this.FAC_VLT == null) {
                    if (valueObject.getFAC_VLT() != null)
                           return(false);
          } else if (!this.FAC_VLT.equals(valueObject.getFAC_VLT())) {
                    return(false);
          }
          if (valueObject.getIDPAGORUNT() != this.IDPAGORUNT) {
                    return(false);
          }
          if (this.FAC_NRO == null) {
                    if (valueObject.getFAC_NRO() != null)
                           return(false);
          } else if (!this.FAC_NRO.equals(valueObject.getFAC_NRO())) {
                    return(false);
          }
          if (this.FECHAPAGOFACTURA == null) {
                    if (valueObject.getFECHAPAGOFACTURA() != null)
                           return(false);
          } else if (!this.FECHAPAGOFACTURA.equals(valueObject.getFECHAPAGOFACTURA())) {
                    return(false);
          }
          if (this.VALORPAGOMT == null) {
                    if (valueObject.getVALORPAGOMT() != null)
                           return(false);
          } else if (!this.VALORPAGOMT.equals(valueObject.getVALORPAGOMT())) {
                    return(false);
          }
          if (this.VALORPAGORUNT == null) {
                    if (valueObject.getVALORPAGORUNT() != null)
                           return(false);
          } else if (!this.VALORPAGORUNT.equals(valueObject.getVALORPAGORUNT())) {
                    return(false);
          }
          if (this.COD_CAJERO == null) {
                    if (valueObject.getCOD_CAJERO() != null)
                           return(false);
          } else if (!this.COD_CAJERO.equals(valueObject.getCOD_CAJERO())) {
                    return(false);
          }
          if (this.NOM_CAJERO == null) {
                    if (valueObject.getNOM_CAJERO() != null)
                           return(false);
          } else if (!this.NOM_CAJERO.equals(valueObject.getNOM_CAJERO())) {
                    return(false);
          }
          if (valueObject.getID_ARQUEO() != this.ID_ARQUEO) {
                    return(false);
          }
          if (this.VLR_BASE == null) {
                    if (valueObject.getVLR_BASE() != null)
                           return(false);
          } else if (!this.VLR_BASE.equals(valueObject.getVLR_BASE())) {
                    return(false);
          }
          if (this.IDUSRPAGA == null) {
                    if (valueObject.getIDUSRPAGA() != null)
                           return(false);
          } else if (!this.IDUSRPAGA.equals(valueObject.getIDUSRPAGA())) {
                    return(false);
          }
          if (this.APELLIDOCAJERO == null) {
                    if (valueObject.getAPELLIDOCAJERO() != null)
                           return(false);
          } else if (!this.APELLIDOCAJERO.equals(valueObject.getAPELLIDOCAJERO())) {
                    return(false);
          }
          if (this.ESTADOFACTURA == null) {
                    if (valueObject.getESTADOFACTURA() != null)
                           return(false);
          } else if (!this.ESTADOFACTURA.equals(valueObject.getESTADOFACTURA())) {
                    return(false);
          }

          return true;
    }



    /**
     * toString will return String object representing the state of this 
     * valueObject. This is useful during application development, and 
     * possibly when application is writing object states in textlog.
     */
    public String toString() {
        StringBuffer out = new StringBuffer(this.getDaogenVersion());
        out.append("\nclass DetArqueoRunt, mapping to table DetArqueoRunt\n");
        out.append("Persistent attributes: \n"); 
        out.append("IDDETARQUEO = " + this.IDDETARQUEO + "\n"); 
        out.append("FAC_VLT = " + this.FAC_VLT + "\n"); 
        out.append("IDPAGORUNT = " + this.IDPAGORUNT + "\n"); 
        out.append("FAC_NRO = " + this.FAC_NRO + "\n"); 
        out.append("FECHAPAGOFACTURA = " + this.FECHAPAGOFACTURA + "\n"); 
        out.append("VALORPAGOMT = " + this.VALORPAGOMT + "\n"); 
        out.append("VALORPAGORUNT = " + this.VALORPAGORUNT + "\n"); 
        out.append("COD_CAJERO = " + this.COD_CAJERO + "\n"); 
        out.append("NOM_CAJERO = " + this.NOM_CAJERO + "\n"); 
        out.append("ID_ARQUEO = " + this.ID_ARQUEO + "\n"); 
        out.append("VLR_BASE = " + this.VLR_BASE + "\n"); 
        out.append("IDUSRPAGA = " + this.IDUSRPAGA + "\n"); 
        out.append("APELLIDOCAJERO = " + this.APELLIDOCAJERO + "\n"); 
        out.append("ESTADOFACTURA = " + this.ESTADOFACTURA + "\n"); 
        return out.toString();
    }


    /**
     * Clone will return identical deep copy of this valueObject.
     * Note, that this method is different than the clone() which
     * is defined in java.lang.Object. Here, the retuned cloned object
     * will also have all its attributes cloned.
     */
    public Object clone() {
        DetArqueoRunt cloned = new DetArqueoRunt();

        cloned.setIDDETARQUEO(this.IDDETARQUEO); 
        if (this.FAC_VLT != null)
             cloned.setFAC_VLT(new String(this.FAC_VLT)); 
        cloned.setIDPAGORUNT(this.IDPAGORUNT); 
        if (this.FAC_NRO != null)
             cloned.setFAC_NRO(new String(this.FAC_NRO)); 
        if (this.FECHAPAGOFACTURA != null)
             cloned.setFECHAPAGOFACTURA(new String(this.FECHAPAGOFACTURA)); 
        if (this.VALORPAGOMT != null)
             cloned.setVALORPAGOMT(new String(this.VALORPAGOMT)); 
        if (this.VALORPAGORUNT != null)
             cloned.setVALORPAGORUNT(new String(this.VALORPAGORUNT)); 
        if (this.COD_CAJERO != null)
             cloned.setCOD_CAJERO(new String(this.COD_CAJERO)); 
        if (this.NOM_CAJERO != null)
             cloned.setNOM_CAJERO(new String(this.NOM_CAJERO)); 
        cloned.setID_ARQUEO(this.ID_ARQUEO); 
        if (this.VLR_BASE != null)
             cloned.setVLR_BASE(new String(this.VLR_BASE)); 
        if (this.IDUSRPAGA != null)
             cloned.setIDUSRPAGA(new String(this.IDUSRPAGA)); 
        if (this.APELLIDOCAJERO != null)
             cloned.setAPELLIDOCAJERO(new String(this.APELLIDOCAJERO)); 
        if (this.ESTADOFACTURA != null)
             cloned.setESTADOFACTURA(new String(this.ESTADOFACTURA)); 
        return cloned;
    }



    /** 
     * getDaogenVersion will return information about
     * generator which created these sources.
     */
    public String getDaogenVersion() {
        return "DaoGen version 2.4.1";
    }

}

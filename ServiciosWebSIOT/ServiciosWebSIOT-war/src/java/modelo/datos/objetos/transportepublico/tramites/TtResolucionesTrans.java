package modelo.datos.objetos.transportepublico.tramites;

import java.io.*;
import java.sql.*;
import java.util.*;
import java.math.*;

 /**
  * TtResolucionesTrans Value Object.
  * This class is value object representing database table TtResolucionesTrans
  * This class is intented to be used together with associated Dao object.
  */

 /**
  * This sourcecode has been generated by FREE DaoGen generator version 2.4.1.
  * The usage of generated code is restricted to OpenSource software projects
  * only. DaoGen is available in http://titaniclinux.net/daogen/
  * It has been programmed by Tuomo Lukka, Tuomo.Lukka@iki.fi
  *
  * DaoGen license: The following DaoGen generated source code is licensed
  * under the terms of GNU GPL license. The full text for license is available
  * in GNU project's pages: http://www.gnu.org/copyleft/gpl.html
  *
  * If you wish to use the DaoGen generator to produce code for closed-source
  * commercial applications, you must pay the lisence fee. The price is
  * 5 USD or 5 Eur for each database table, you are generating code for.
  * (That includes unlimited amount of iterations with all supported languages
  * for each database table you are paying for.) Send mail to
  * "Tuomo.Lukka@iki.fi" for more information. Thank you!
  */



public class TtResolucionesTrans implements Cloneable, Serializable {

    /** 
     * Persistent Instance variables. This data is directly 
     * mapped to the columns of database table.
     */
    private int ID;
    private int IDTIPORESOLUCION;
    private String FECHARESOLUCION;
    private String FECHAREGISTRO;
    private String NUMERO;
    private String NUEVOCOLOR;
    private int IDVEHICULONUEVO;
    private int IDPERSONANUEVA;
    private String ARCHIVO;
    private String CONTENIDO;
    private String FECHASOLICITUD;



    /** 
     * Constructors. DaoGen generates two constructors by default.
     * The first one takes no arguments and provides the most simple
     * way to create object instance. The another one takes one
     * argument, which is the primary key of the corresponding table.
     */

    public TtResolucionesTrans () {

    }

    public TtResolucionesTrans (int IDIn) {

          this.ID = IDIn;

    }


    /** 
     * Get- and Set-methods for persistent variables. The default
     * behaviour does not make any checks against malformed data,
     * so these might require some manual additions.
     */

    public int getID() {
          return this.ID;
    }
    public void setID(int IDIn) {
          this.ID = IDIn;
    }

    public int getIDTIPORESOLUCION() {
          return this.IDTIPORESOLUCION;
    }
    public void setIDTIPORESOLUCION(int IDTIPORESOLUCIONIn) {
          this.IDTIPORESOLUCION = IDTIPORESOLUCIONIn;
    }

    public String getFECHARESOLUCION() {
          return this.FECHARESOLUCION;
    }
    public void setFECHARESOLUCION(String FECHARESOLUCIONIn) {
          this.FECHARESOLUCION = FECHARESOLUCIONIn;
    }

    public String getFECHAREGISTRO() {
          return this.FECHAREGISTRO;
    }
    public void setFECHAREGISTRO(String FECHAREGISTROIn) {
          this.FECHAREGISTRO = FECHAREGISTROIn;
    }

    public String getNUMERO() {
          return this.NUMERO;
    }
    public void setNUMERO(String NUMEROIn) {
          this.NUMERO = NUMEROIn;
    }

    public String getNUEVOCOLOR() {
          return this.NUEVOCOLOR;
    }
    public void setNUEVOCOLOR(String NUEVOCOLORIn) {
          this.NUEVOCOLOR = NUEVOCOLORIn;
    }

    public int getIDVEHICULONUEVO() {
          return this.IDVEHICULONUEVO;
    }
    public void setIDVEHICULONUEVO(int IDVEHICULONUEVOIn) {
          this.IDVEHICULONUEVO = IDVEHICULONUEVOIn;
    }

    public int getIDPERSONANUEVA() {
          return this.IDPERSONANUEVA;
    }
    public void setIDPERSONANUEVA(int IDPERSONANUEVAIn) {
          this.IDPERSONANUEVA = IDPERSONANUEVAIn;
    }

    public String getARCHIVO() {
          return this.ARCHIVO;
    }
    public void setARCHIVO(String ARCHIVOIn) {
          this.ARCHIVO = ARCHIVOIn;
    }

    public String getCONTENIDO() {
          return this.CONTENIDO;
    }
    public void setCONTENIDO(String CONTENIDOIn) {
          this.CONTENIDO = CONTENIDOIn;
    }

    public String getFECHASOLICITUD() {
          return this.FECHASOLICITUD;
    }
    public void setFECHASOLICITUD(String FECHASOLICITUDIn) {
          this.FECHASOLICITUD = FECHASOLICITUDIn;
    }



    /** 
     * setAll allows to set all persistent variables in one method call.
     * This is useful, when all data is available and it is needed to 
     * set the initial state of this object. Note that this method will
     * directly modify instance variales, without going trough the 
     * individual set-methods.
     */

    public void setAll(int IDIn,
          int IDTIPORESOLUCIONIn,
          String FECHARESOLUCIONIn,
          String FECHAREGISTROIn,
          String NUMEROIn,
          String NUEVOCOLORIn,
          int IDVEHICULONUEVOIn,
          int IDPERSONANUEVAIn,
          String ARCHIVOIn,
          String CONTENIDOIn,
          String FECHASOLICITUDIn) {
          this.ID = IDIn;
          this.IDTIPORESOLUCION = IDTIPORESOLUCIONIn;
          this.FECHARESOLUCION = FECHARESOLUCIONIn;
          this.FECHAREGISTRO = FECHAREGISTROIn;
          this.NUMERO = NUMEROIn;
          this.NUEVOCOLOR = NUEVOCOLORIn;
          this.IDVEHICULONUEVO = IDVEHICULONUEVOIn;
          this.IDPERSONANUEVA = IDPERSONANUEVAIn;
          this.ARCHIVO = ARCHIVOIn;
          this.CONTENIDO = CONTENIDOIn;
          this.FECHASOLICITUD = FECHASOLICITUDIn;
    }


    /** 
     * hasEqualMapping-method will compare two TtResolucionesTrans instances
     * and return true if they contain same values in all persistent instance 
     * variables. If hasEqualMapping returns true, it does not mean the objects
     * are the same instance. However it does mean that in that moment, they 
     * are mapped to the same row in database.
     */
    public boolean hasEqualMapping(TtResolucionesTrans valueObject) {

          if (valueObject.getID() != this.ID) {
                    return(false);
          }
          if (valueObject.getIDTIPORESOLUCION() != this.IDTIPORESOLUCION) {
                    return(false);
          }
          if (this.FECHARESOLUCION == null) {
                    if (valueObject.getFECHARESOLUCION() != null)
                           return(false);
          } else if (!this.FECHARESOLUCION.equals(valueObject.getFECHARESOLUCION())) {
                    return(false);
          }
          if (this.FECHAREGISTRO == null) {
                    if (valueObject.getFECHAREGISTRO() != null)
                           return(false);
          } else if (!this.FECHAREGISTRO.equals(valueObject.getFECHAREGISTRO())) {
                    return(false);
          }
          if (this.NUMERO == null) {
                    if (valueObject.getNUMERO() != null)
                           return(false);
          } else if (!this.NUMERO.equals(valueObject.getNUMERO())) {
                    return(false);
          }
          if (this.NUEVOCOLOR == null) {
                    if (valueObject.getNUEVOCOLOR() != null)
                           return(false);
          } else if (!this.NUEVOCOLOR.equals(valueObject.getNUEVOCOLOR())) {
                    return(false);
          }
          if (valueObject.getIDVEHICULONUEVO() != this.IDVEHICULONUEVO) {
                    return(false);
          }
          if (valueObject.getIDPERSONANUEVA() != this.IDPERSONANUEVA) {
                    return(false);
          }
          if (this.ARCHIVO == null) {
                    if (valueObject.getARCHIVO() != null)
                           return(false);
          } else if (!this.ARCHIVO.equals(valueObject.getARCHIVO())) {
                    return(false);
          }
          if (this.CONTENIDO == null) {
                    if (valueObject.getCONTENIDO() != null)
                           return(false);
          } else if (!this.CONTENIDO.equals(valueObject.getCONTENIDO())) {
                    return(false);
          }
          if (this.FECHASOLICITUD == null) {
                    if (valueObject.getFECHASOLICITUD() != null)
                           return(false);
          } else if (!this.FECHASOLICITUD.equals(valueObject.getFECHASOLICITUD())) {
                    return(false);
          }

          return true;
    }



    /**
     * toString will return String object representing the state of this 
     * valueObject. This is useful during application development, and 
     * possibly when application is writing object states in textlog.
     */
    public String toString() {
        StringBuffer out = new StringBuffer(this.getDaogenVersion());
        out.append("\nclass TtResolucionesTrans, mapping to table TtResolucionesTrans\n");
        out.append("Persistent attributes: \n"); 
        out.append("ID = " + this.ID + "\n"); 
        out.append("IDTIPORESOLUCION = " + this.IDTIPORESOLUCION + "\n"); 
        out.append("FECHARESOLUCION = " + this.FECHARESOLUCION + "\n"); 
        out.append("FECHAREGISTRO = " + this.FECHAREGISTRO + "\n"); 
        out.append("NUMERO = " + this.NUMERO + "\n"); 
        out.append("NUEVOCOLOR = " + this.NUEVOCOLOR + "\n"); 
        out.append("IDVEHICULONUEVO = " + this.IDVEHICULONUEVO + "\n"); 
        out.append("IDPERSONANUEVA = " + this.IDPERSONANUEVA + "\n"); 
        out.append("ARCHIVO = " + this.ARCHIVO + "\n"); 
        out.append("CONTENIDO = " + this.CONTENIDO + "\n"); 
        out.append("FECHASOLICITUD = " + this.FECHASOLICITUD + "\n"); 
        return out.toString();
    }


    /**
     * Clone will return identical deep copy of this valueObject.
     * Note, that this method is different than the clone() which
     * is defined in java.lang.Object. Here, the retuned cloned object
     * will also have all its attributes cloned.
     */
    public Object clone() {
        TtResolucionesTrans cloned = new TtResolucionesTrans();

        cloned.setID(this.ID); 
        cloned.setIDTIPORESOLUCION(this.IDTIPORESOLUCION); 
        if (this.FECHARESOLUCION != null)
             cloned.setFECHARESOLUCION(new String(this.FECHARESOLUCION)); 
        if (this.FECHAREGISTRO != null)
             cloned.setFECHAREGISTRO(new String(this.FECHAREGISTRO)); 
        if (this.NUMERO != null)
             cloned.setNUMERO(new String(this.NUMERO)); 
        if (this.NUEVOCOLOR != null)
             cloned.setNUEVOCOLOR(new String(this.NUEVOCOLOR)); 
        cloned.setIDVEHICULONUEVO(this.IDVEHICULONUEVO); 
        cloned.setIDPERSONANUEVA(this.IDPERSONANUEVA); 
        if (this.ARCHIVO != null)
             cloned.setARCHIVO(new String(this.ARCHIVO)); 
        if (this.CONTENIDO != null)
             cloned.setCONTENIDO(new String(this.CONTENIDO)); 
        if (this.FECHASOLICITUD != null)
             cloned.setFECHASOLICITUD(new String(this.FECHASOLICITUD)); 
        return cloned;
    }



    /** 
     * getDaogenVersion will return information about
     * generator which created these sources.
     */
    public String getDaogenVersion() {
        return "DaoGen version 2.4.1";
    }

}
package modelo.datos.objetos.transportepublico.cupos;

import java.io.*;
import java.sql.*;
import java.util.*;
import java.math.*;

 /**
  * ViewVehiculosActivosEmpresa Value Object.
  * This class is value object representing database table ViewVehiculosActivosEmpresa
  * This class is intented to be used together with associated Dao object.
  */

 /**
  * This sourcecode has been generated by FREE DaoGen generator version 2.4.1.
  * The usage of generated code is restricted to OpenSource software projects
  * only. DaoGen is available in http://titaniclinux.net/daogen/
  * It has been programmed by Tuomo Lukka, Tuomo.Lukka@iki.fi
  *
  * DaoGen license: The following DaoGen generated source code is licensed
  * under the terms of GNU GPL license. The full text for license is available
  * in GNU project's pages: http://www.gnu.org/copyleft/gpl.html
  *
  * If you wish to use the DaoGen generator to produce code for closed-source
  * commercial applications, you must pay the lisence fee. The price is
  * 5 USD or 5 Eur for each database table, you are generating code for.
  * (That includes unlimited amount of iterations with all supported languages
  * for each database table you are paying for.) Send mail to
  * "Tuomo.Lukka@iki.fi" for more information. Thank you!
  */



public class ViewVehiculosActivosEmpresa implements Cloneable, Serializable {

    /** 
     * Persistent Instance variables. This data is directly 
     * mapped to the columns of database table.
     */
    private int AIDEMPRESA;
    private String BNEMPRESA;
    private String CNIT;
    private int HNROCUPOS;
    private String DPLACA;
    private String IDTIPOVEHICULO;
    private int ENUMCUPO;
    private String FNUMEROTARJETA;
    private String GFECHAVENCIMIENTO;



    /** 
     * Constructors. DaoGen generates two constructors by default.
     * The first one takes no arguments and provides the most simple
     * way to create object instance. The another one takes one
     * argument, which is the primary key of the corresponding table.
     */

    public ViewVehiculosActivosEmpresa () {

    }

    public ViewVehiculosActivosEmpresa (int AIDEMPRESAIn) {

          this.AIDEMPRESA = AIDEMPRESAIn;

    }


    /** 
     * Get- and Set-methods for persistent variables. The default
     * behaviour does not make any checks against malformed data,
     * so these might require some manual additions.
     */

    public int getAIDEMPRESA() {
          return this.AIDEMPRESA;
    }
    public void setAIDEMPRESA(int AIDEMPRESAIn) {
          this.AIDEMPRESA = AIDEMPRESAIn;
    }

    public String getBNEMPRESA() {
          return this.BNEMPRESA;
    }
    public void setBNEMPRESA(String BNEMPRESAIn) {
          this.BNEMPRESA = BNEMPRESAIn;
    }

    public String getCNIT() {
          return this.CNIT;
    }
    public void setCNIT(String CNITIn) {
          this.CNIT = CNITIn;
    }

    public int getHNROCUPOS() {
          return this.HNROCUPOS;
    }
    public void setHNROCUPOS(int HNROCUPOSIn) {
          this.HNROCUPOS = HNROCUPOSIn;
    }

    public String getDPLACA() {
          return this.DPLACA;
    }
    public void setDPLACA(String DPLACAIn) {
          this.DPLACA = DPLACAIn;
    }

    public String getIDTIPOVEHICULO() {
          return this.IDTIPOVEHICULO;
    }
    public void setIDTIPOVEHICULO(String IDTIPOVEHICULOIn) {
          this.IDTIPOVEHICULO = IDTIPOVEHICULOIn;
    }

    public int getENUMCUPO() {
          return this.ENUMCUPO;
    }
    public void setENUMCUPO(int ENUMCUPOIn) {
          this.ENUMCUPO = ENUMCUPOIn;
    }

    public String getFNUMEROTARJETA() {
          return this.FNUMEROTARJETA;
    }
    public void setFNUMEROTARJETA(String FNUMEROTARJETAIn) {
          this.FNUMEROTARJETA = FNUMEROTARJETAIn;
    }

    public String getGFECHAVENCIMIENTO() {
          return this.GFECHAVENCIMIENTO;
    }
    public void setGFECHAVENCIMIENTO(String GFECHAVENCIMIENTOIn) {
          this.GFECHAVENCIMIENTO = GFECHAVENCIMIENTOIn;
    }



    /** 
     * setAll allows to set all persistent variables in one method call.
     * This is useful, when all data is available and it is needed to 
     * set the initial state of this object. Note that this method will
     * directly modify instance variales, without going trough the 
     * individual set-methods.
     */

    public void setAll(int AIDEMPRESAIn,
          String BNEMPRESAIn,
          String CNITIn,
          int HNROCUPOSIn,
          String DPLACAIn,
          String IDTIPOVEHICULOIn,
          int ENUMCUPOIn,
          String FNUMEROTARJETAIn,
          String GFECHAVENCIMIENTOIn) {
          this.AIDEMPRESA = AIDEMPRESAIn;
          this.BNEMPRESA = BNEMPRESAIn;
          this.CNIT = CNITIn;
          this.HNROCUPOS = HNROCUPOSIn;
          this.DPLACA = DPLACAIn;
          this.IDTIPOVEHICULO = IDTIPOVEHICULOIn;
          this.ENUMCUPO = ENUMCUPOIn;
          this.FNUMEROTARJETA = FNUMEROTARJETAIn;
          this.GFECHAVENCIMIENTO = GFECHAVENCIMIENTOIn;
    }


    /** 
     * hasEqualMapping-method will compare two ViewVehiculosActivosEmpresa instances
     * and return true if they contain same values in all persistent instance 
     * variables. If hasEqualMapping returns true, it does not mean the objects
     * are the same instance. However it does mean that in that moment, they 
     * are mapped to the same row in database.
     */
    public boolean hasEqualMapping(ViewVehiculosActivosEmpresa valueObject) {

          if (valueObject.getAIDEMPRESA() != this.AIDEMPRESA) {
                    return(false);
          }
          if (this.BNEMPRESA == null) {
                    if (valueObject.getBNEMPRESA() != null)
                           return(false);
          } else if (!this.BNEMPRESA.equals(valueObject.getBNEMPRESA())) {
                    return(false);
          }
          if (this.CNIT == null) {
                    if (valueObject.getCNIT() != null)
                           return(false);
          } else if (!this.CNIT.equals(valueObject.getCNIT())) {
                    return(false);
          }
          if (valueObject.getHNROCUPOS() != this.HNROCUPOS) {
                    return(false);
          }
          if (this.DPLACA == null) {
                    if (valueObject.getDPLACA() != null)
                           return(false);
          } else if (!this.DPLACA.equals(valueObject.getDPLACA())) {
                    return(false);
          }
          if (this.IDTIPOVEHICULO == null) {
                    if (valueObject.getIDTIPOVEHICULO() != null)
                           return(false);
          } else if (!this.IDTIPOVEHICULO.equals(valueObject.getIDTIPOVEHICULO())) {
                    return(false);
          }
          if (valueObject.getENUMCUPO() != this.ENUMCUPO) {
                    return(false);
          }
          if (this.FNUMEROTARJETA == null) {
                    if (valueObject.getFNUMEROTARJETA() != null)
                           return(false);
          } else if (!this.FNUMEROTARJETA.equals(valueObject.getFNUMEROTARJETA())) {
                    return(false);
          }
          if (this.GFECHAVENCIMIENTO == null) {
                    if (valueObject.getGFECHAVENCIMIENTO() != null)
                           return(false);
          } else if (!this.GFECHAVENCIMIENTO.equals(valueObject.getGFECHAVENCIMIENTO())) {
                    return(false);
          }

          return true;
    }



    /**
     * toString will return String object representing the state of this 
     * valueObject. This is useful during application development, and 
     * possibly when application is writing object states in textlog.
     */
    public String toString() {
        StringBuffer out = new StringBuffer(this.getDaogenVersion());
        out.append("\nclass ViewVehiculosActivosEmpresa, mapping to table ViewVehiculosActivosEmpresa\n");
        out.append("Persistent attributes: \n"); 
        out.append("AIDEMPRESA = " + this.AIDEMPRESA + "\n"); 
        out.append("BNEMPRESA = " + this.BNEMPRESA + "\n"); 
        out.append("CNIT = " + this.CNIT + "\n"); 
        out.append("HNROCUPOS = " + this.HNROCUPOS + "\n"); 
        out.append("DPLACA = " + this.DPLACA + "\n"); 
        out.append("IDTIPOVEHICULO = " + this.IDTIPOVEHICULO + "\n"); 
        out.append("ENUMCUPO = " + this.ENUMCUPO + "\n"); 
        out.append("FNUMEROTARJETA = " + this.FNUMEROTARJETA + "\n"); 
        out.append("GFECHAVENCIMIENTO = " + this.GFECHAVENCIMIENTO + "\n"); 
        return out.toString();
    }


    /**
     * Clone will return identical deep copy of this valueObject.
     * Note, that this method is different than the clone() which
     * is defined in java.lang.Object. Here, the retuned cloned object
     * will also have all its attributes cloned.
     */
    public Object clone() {
        ViewVehiculosActivosEmpresa cloned = new ViewVehiculosActivosEmpresa();

        cloned.setAIDEMPRESA(this.AIDEMPRESA); 
        if (this.BNEMPRESA != null)
             cloned.setBNEMPRESA(new String(this.BNEMPRESA)); 
        if (this.CNIT != null)
             cloned.setCNIT(new String(this.CNIT)); 
        cloned.setHNROCUPOS(this.HNROCUPOS); 
        if (this.DPLACA != null)
             cloned.setDPLACA(new String(this.DPLACA)); 
        if (this.IDTIPOVEHICULO != null)
             cloned.setIDTIPOVEHICULO(new String(this.IDTIPOVEHICULO)); 
        cloned.setENUMCUPO(this.ENUMCUPO); 
        if (this.FNUMEROTARJETA != null)
             cloned.setFNUMEROTARJETA(new String(this.FNUMEROTARJETA)); 
        if (this.GFECHAVENCIMIENTO != null)
             cloned.setGFECHAVENCIMIENTO(new String(this.GFECHAVENCIMIENTO)); 
        return cloned;
    }



    /** 
     * getDaogenVersion will return information about
     * generator which created these sources.
     */
    public String getDaogenVersion() {
        return "DaoGen version 2.4.1";
    }

}

package modelo.datos.objetos.transportepublico.cupos;

import java.io.*;
import java.sql.*;
import java.util.*;
import java.math.*;

 /**
  * ViewVidaUtilVehiculoTrans Value Object.
  * This class is value object representing database table ViewVidaUtilVehiculoTrans
  * This class is intented to be used together with associated Dao object.
  */

 /**
  * This sourcecode has been generated by FREE DaoGen generator version 2.4.1.
  * The usage of generated code is restricted to OpenSource software projects
  * only. DaoGen is available in http://titaniclinux.net/daogen/
  * It has been programmed by Tuomo Lukka, Tuomo.Lukka@iki.fi
  *
  * DaoGen license: The following DaoGen generated source code is licensed
  * under the terms of GNU GPL license. The full text for license is available
  * in GNU project's pages: http://www.gnu.org/copyleft/gpl.html
  *
  * If you wish to use the DaoGen generator to produce code for closed-source
  * commercial applications, you must pay the lisence fee. The price is
  * 5 USD or 5 Eur for each database table, you are generating code for.
  * (That includes unlimited amount of iterations with all supported languages
  * for each database table you are paying for.) Send mail to
  * "Tuomo.Lukka@iki.fi" for more information. Thank you!
  */



public class ViewVidaUtilVehiculoTrans implements Cloneable, Serializable {

    /** 
     * Persistent Instance variables. This data is directly 
     * mapped to the columns of database table.
     */
    private int IDVEHICULO;
    private int ANUMEROCUPO;
    private String CPLACA;
    private String FECHAREGISTROVEHI;
    private String TIPODEVEHICULO;
    private String NITEMPRESA;
    private String BEMPRESAASOCIADA;
    private String DVIDAUTIL;



    /** 
     * Constructors. DaoGen generates two constructors by default.
     * The first one takes no arguments and provides the most simple
     * way to create object instance. The another one takes one
     * argument, which is the primary key of the corresponding table.
     */

    public ViewVidaUtilVehiculoTrans () {

    }

    public ViewVidaUtilVehiculoTrans (int IDVEHICULOIn) {

          this.IDVEHICULO = IDVEHICULOIn;

    }


    /** 
     * Get- and Set-methods for persistent variables. The default
     * behaviour does not make any checks against malformed data,
     * so these might require some manual additions.
     */

    public int getIDVEHICULO() {
          return this.IDVEHICULO;
    }
    public void setIDVEHICULO(int IDVEHICULOIn) {
          this.IDVEHICULO = IDVEHICULOIn;
    }

    public int getANUMEROCUPO() {
          return this.ANUMEROCUPO;
    }
    public void setANUMEROCUPO(int ANUMEROCUPOIn) {
          this.ANUMEROCUPO = ANUMEROCUPOIn;
    }

    public String getCPLACA() {
          return this.CPLACA;
    }
    public void setCPLACA(String CPLACAIn) {
          this.CPLACA = CPLACAIn;
    }

    public String getFECHAREGISTROVEHI() {
          return this.FECHAREGISTROVEHI;
    }
    public void setFECHAREGISTROVEHI(String FECHAREGISTROVEHIIn) {
          this.FECHAREGISTROVEHI = FECHAREGISTROVEHIIn;
    }

    public String getTIPODEVEHICULO() {
          return this.TIPODEVEHICULO;
    }
    public void setTIPODEVEHICULO(String TIPODEVEHICULOIn) {
          this.TIPODEVEHICULO = TIPODEVEHICULOIn;
    }

    public String getNITEMPRESA() {
          return this.NITEMPRESA;
    }
    public void setNITEMPRESA(String NITEMPRESAIn) {
          this.NITEMPRESA = NITEMPRESAIn;
    }

    public String getBEMPRESAASOCIADA() {
          return this.BEMPRESAASOCIADA;
    }
    public void setBEMPRESAASOCIADA(String BEMPRESAASOCIADAIn) {
          this.BEMPRESAASOCIADA = BEMPRESAASOCIADAIn;
    }

    public String getDVIDAUTIL() {
          return this.DVIDAUTIL;
    }
    public void setDVIDAUTIL(String DVIDAUTILIn) {
          this.DVIDAUTIL = DVIDAUTILIn;
    }



    /** 
     * setAll allows to set all persistent variables in one method call.
     * This is useful, when all data is available and it is needed to 
     * set the initial state of this object. Note that this method will
     * directly modify instance variales, without going trough the 
     * individual set-methods.
     */

    public void setAll(int IDVEHICULOIn,
          int ANUMEROCUPOIn,
          String CPLACAIn,
          String FECHAREGISTROVEHIIn,
          String TIPODEVEHICULOIn,
          String NITEMPRESAIn,
          String BEMPRESAASOCIADAIn,
          String DVIDAUTILIn) {
          this.IDVEHICULO = IDVEHICULOIn;
          this.ANUMEROCUPO = ANUMEROCUPOIn;
          this.CPLACA = CPLACAIn;
          this.FECHAREGISTROVEHI = FECHAREGISTROVEHIIn;
          this.TIPODEVEHICULO = TIPODEVEHICULOIn;
          this.NITEMPRESA = NITEMPRESAIn;
          this.BEMPRESAASOCIADA = BEMPRESAASOCIADAIn;
          this.DVIDAUTIL = DVIDAUTILIn;
    }


    /** 
     * hasEqualMapping-method will compare two ViewVidaUtilVehiculoTrans instances
     * and return true if they contain same values in all persistent instance 
     * variables. If hasEqualMapping returns true, it does not mean the objects
     * are the same instance. However it does mean that in that moment, they 
     * are mapped to the same row in database.
     */
    public boolean hasEqualMapping(ViewVidaUtilVehiculoTrans valueObject) {

          if (valueObject.getIDVEHICULO() != this.IDVEHICULO) {
                    return(false);
          }
          if (valueObject.getANUMEROCUPO() != this.ANUMEROCUPO) {
                    return(false);
          }
          if (this.CPLACA == null) {
                    if (valueObject.getCPLACA() != null)
                           return(false);
          } else if (!this.CPLACA.equals(valueObject.getCPLACA())) {
                    return(false);
          }
          if (this.FECHAREGISTROVEHI == null) {
                    if (valueObject.getFECHAREGISTROVEHI() != null)
                           return(false);
          } else if (!this.FECHAREGISTROVEHI.equals(valueObject.getFECHAREGISTROVEHI())) {
                    return(false);
          }
          if (this.TIPODEVEHICULO == null) {
                    if (valueObject.getTIPODEVEHICULO() != null)
                           return(false);
          } else if (!this.TIPODEVEHICULO.equals(valueObject.getTIPODEVEHICULO())) {
                    return(false);
          }
          if (this.NITEMPRESA == null) {
                    if (valueObject.getNITEMPRESA() != null)
                           return(false);
          } else if (!this.NITEMPRESA.equals(valueObject.getNITEMPRESA())) {
                    return(false);
          }
          if (this.BEMPRESAASOCIADA == null) {
                    if (valueObject.getBEMPRESAASOCIADA() != null)
                           return(false);
          } else if (!this.BEMPRESAASOCIADA.equals(valueObject.getBEMPRESAASOCIADA())) {
                    return(false);
          }
          if (this.DVIDAUTIL == null) {
                    if (valueObject.getDVIDAUTIL() != null)
                           return(false);
          } else if (!this.DVIDAUTIL.equals(valueObject.getDVIDAUTIL())) {
                    return(false);
          }

          return true;
    }



    /**
     * toString will return String object representing the state of this 
     * valueObject. This is useful during application development, and 
     * possibly when application is writing object states in textlog.
     */
    public String toString() {
        StringBuffer out = new StringBuffer(this.getDaogenVersion());
        out.append("\nclass ViewVidaUtilVehiculoTrans, mapping to table ViewVidaUtilVehiculoTrans\n");
        out.append("Persistent attributes: \n"); 
        out.append("IDVEHICULO = " + this.IDVEHICULO + "\n"); 
        out.append("ANUMEROCUPO = " + this.ANUMEROCUPO + "\n"); 
        out.append("CPLACA = " + this.CPLACA + "\n"); 
        out.append("FECHAREGISTROVEHI = " + this.FECHAREGISTROVEHI + "\n"); 
        out.append("TIPODEVEHICULO = " + this.TIPODEVEHICULO + "\n"); 
        out.append("NITEMPRESA = " + this.NITEMPRESA + "\n"); 
        out.append("BEMPRESAASOCIADA = " + this.BEMPRESAASOCIADA + "\n"); 
        out.append("DVIDAUTIL = " + this.DVIDAUTIL + "\n"); 
        return out.toString();
    }


    /**
     * Clone will return identical deep copy of this valueObject.
     * Note, that this method is different than the clone() which
     * is defined in java.lang.Object. Here, the retuned cloned object
     * will also have all its attributes cloned.
     */
    public Object clone() {
        ViewVidaUtilVehiculoTrans cloned = new ViewVidaUtilVehiculoTrans();

        cloned.setIDVEHICULO(this.IDVEHICULO); 
        cloned.setANUMEROCUPO(this.ANUMEROCUPO); 
        if (this.CPLACA != null)
             cloned.setCPLACA(new String(this.CPLACA)); 
        if (this.FECHAREGISTROVEHI != null)
             cloned.setFECHAREGISTROVEHI(new String(this.FECHAREGISTROVEHI)); 
        if (this.TIPODEVEHICULO != null)
             cloned.setTIPODEVEHICULO(new String(this.TIPODEVEHICULO)); 
        if (this.NITEMPRESA != null)
             cloned.setNITEMPRESA(new String(this.NITEMPRESA)); 
        if (this.BEMPRESAASOCIADA != null)
             cloned.setBEMPRESAASOCIADA(new String(this.BEMPRESAASOCIADA)); 
        if (this.DVIDAUTIL != null)
             cloned.setDVIDAUTIL(new String(this.DVIDAUTIL)); 
        return cloned;
    }



    /** 
     * getDaogenVersion will return information about
     * generator which created these sources.
     */
    public String getDaogenVersion() {
        return "DaoGen version 2.4.1";
    }

}
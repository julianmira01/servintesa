package modelo.datos.objetos.rangos;


import java.io.Serializable;

/**
  * RangosDeplacas Value Object.
  * This class is value object representing database table RANGOSDEPLACAS
  * This class is intented to be used together with associated Dao object.
  */

 /**
  * This sourcecode has been generated by FREE DaoGen generator version 2.4.1.
  * The usage of generated code is restricted to OpenSource software projects
  * only. DaoGen is available in http://titaniclinux.net/daogen/
  * It has been programmed by Tuomo Lukka, Tuomo.Lukka@iki.fi
  *
  * DaoGen license: The following DaoGen generated source code is licensed
  * under the terms of GNU GPL license. The full text for license is available
  * in GNU project's pages: http://www.gnu.org/copyleft/gpl.html
  *
  * If you wish to use the DaoGen generator to produce code for closed-source
  * commercial applications, you must pay the lisence fee. The price is
  * 5 USD or 5 Eur for each database table, you are generating code for.
  * (That includes unlimited amount of iterations with all supported languages
  * for each database table you are paying for.) Send mail to
  * "Tuomo.Lukka@iki.fi" for more information. Thank you!
  */



public class RangosDeplacas implements Cloneable, Serializable {

    /** 
     * Persistent Instance variables. This data is directly 
     * mapped to the columns of database table.
     */
    private int ID_RANGODEPLACA;
    private String LETRA;
    private String NRO_RESOLUCION;
    private String FECHA_EXP;
    private int R_INICIAL;
    private int R_FINAL;
    private int ID_SERVICIO;
    private int ID_CVEHICULO;
    private int ULTIMA_ASIG;
    private String SUFIJO_PLACA;
    private String LETRAFINAL;
    private int DISPONIBLES;



    /** 
     * Constructors. DaoGen generates two constructors by default.
     * The first one takes no arguments and provides the most simple
     * way to create object instance. The another one takes one
     * argument, which is the primary key of the corresponding table.
     */

    public RangosDeplacas () {

    }

    public RangosDeplacas (int ID_RANGODEPLACAIn) {

          this.ID_RANGODEPLACA = ID_RANGODEPLACAIn;

    }


    /** 
     * Get- and Set-methods for persistent variables. The default
     * behaviour does not make any checks against malformed data,
     * so these might require some manual additions.
     */

    public int getID_RANGODEPLACA() {
          return this.ID_RANGODEPLACA;
    }
    public void setID_RANGODEPLACA(int ID_RANGODEPLACAIn) {
          this.ID_RANGODEPLACA = ID_RANGODEPLACAIn;
    }

    public String getLETRA() {
          return this.LETRA;
    }
    public void setLETRA(String LETRAIn) {
          this.LETRA = LETRAIn;
    }

    public String getNRO_RESOLUCION() {
          return this.NRO_RESOLUCION;
    }
    public void setNRO_RESOLUCION(String NRO_RESOLUCIONIn) {
          this.NRO_RESOLUCION = NRO_RESOLUCIONIn;
    }

    public String getFECHA_EXP() {
          return this.FECHA_EXP;
    }
    public void setFECHA_EXP(String FECHA_EXPIn) {
          this.FECHA_EXP = FECHA_EXPIn;
    }

    public int getR_INICIAL() {
          return this.R_INICIAL;
    }
    public void setR_INICIAL(int R_INICIALIn) {
          this.R_INICIAL = R_INICIALIn;
    }

    public int getR_FINAL() {
          return this.R_FINAL;
    }
    public void setR_FINAL(int R_FINALIn) {
          this.R_FINAL = R_FINALIn;
    }

    public int getID_SERVICIO() {
          return this.ID_SERVICIO;
    }
    public void setID_SERVICIO(int ID_SERVICIOIn) {
          this.ID_SERVICIO = ID_SERVICIOIn;
    }

    public int getID_CVEHICULO() {
          return this.ID_CVEHICULO;
    }
    public void setID_CVEHICULO(int ID_CVEHICULOIn) {
          this.ID_CVEHICULO = ID_CVEHICULOIn;
    }

    public int getULTIMA_ASIG() {
          return this.ULTIMA_ASIG;
    }
    public void setULTIMA_ASIG(int ULTIMA_ASIGIn) {
          this.ULTIMA_ASIG = ULTIMA_ASIGIn;
    }

    public String getSUFIJO_PLACA() {
          return this.SUFIJO_PLACA;
    }
    public void setSUFIJO_PLACA(String SUFIJO_PLACAIn) {
          this.SUFIJO_PLACA = SUFIJO_PLACAIn;
    }

    public String getLETRAFINAL() {
          return this.LETRAFINAL;
    }
    public void setLETRAFINAL(String LETRAFINALIn) {
          this.LETRAFINAL = LETRAFINALIn;
    }

    public int getDISPONIBLES() {
          return this.DISPONIBLES;
    }
    public void setDISPONIBLES(int DISPONIBLESIn) {
          this.DISPONIBLES = DISPONIBLESIn;
    }



    /** 
     * setAll allows to set all persistent variables in one method call.
     * This is useful, when all data is available and it is needed to 
     * set the initial state of this object. Note that this method will
     * directly modify instance variales, without going trough the 
     * individual set-methods.
     */

    public void setAll(int ID_RANGODEPLACAIn,
          String LETRAIn,
          String NRO_RESOLUCIONIn,
          String FECHA_EXPIn,
          int R_INICIALIn,
          int R_FINALIn,
          int ID_SERVICIOIn,
          int ID_CVEHICULOIn,
          int ULTIMA_ASIGIn,
          String SUFIJO_PLACAIn,
          String LETRAFINALIn,
          int DISPONIBLESIn) {
          this.ID_RANGODEPLACA = ID_RANGODEPLACAIn;
          this.LETRA = LETRAIn;
          this.NRO_RESOLUCION = NRO_RESOLUCIONIn;
          this.FECHA_EXP = FECHA_EXPIn;
          this.R_INICIAL = R_INICIALIn;
          this.R_FINAL = R_FINALIn;
          this.ID_SERVICIO = ID_SERVICIOIn;
          this.ID_CVEHICULO = ID_CVEHICULOIn;
          this.ULTIMA_ASIG = ULTIMA_ASIGIn;
          this.SUFIJO_PLACA = SUFIJO_PLACAIn;
          this.LETRAFINAL = LETRAFINALIn;
          this.DISPONIBLES = DISPONIBLESIn;
    }


    /** 
     * hasEqualMapping-method will compare two RangosDeplacas instances
     * and return true if they contain same values in all persistent instance 
     * variables. If hasEqualMapping returns true, it does not mean the objects
     * are the same instance. However it does mean that in that moment, they 
     * are mapped to the same row in database.
     */
    public boolean hasEqualMapping(RangosDeplacas valueObject) {

          if (valueObject.getID_RANGODEPLACA() != this.ID_RANGODEPLACA) {
                    return(false);
          }
          if (this.LETRA == null) {
                    if (valueObject.getLETRA() != null)
                           return(false);
          } else if (!this.LETRA.equals(valueObject.getLETRA())) {
                    return(false);
          }
          if (this.NRO_RESOLUCION == null) {
                    if (valueObject.getNRO_RESOLUCION() != null)
                           return(false);
          } else if (!this.NRO_RESOLUCION.equals(valueObject.getNRO_RESOLUCION())) {
                    return(false);
          }
          if (this.FECHA_EXP == null) {
                    if (valueObject.getFECHA_EXP() != null)
                           return(false);
          } else if (!this.FECHA_EXP.equals(valueObject.getFECHA_EXP())) {
                    return(false);
          }
          if (valueObject.getR_INICIAL() != this.R_INICIAL) {
                    return(false);
          }
          if (valueObject.getR_FINAL() != this.R_FINAL) {
                    return(false);
          }
          if (valueObject.getID_SERVICIO() != this.ID_SERVICIO) {
                    return(false);
          }
          if (valueObject.getID_CVEHICULO() != this.ID_CVEHICULO) {
                    return(false);
          }
          if (valueObject.getULTIMA_ASIG() != this.ULTIMA_ASIG) {
                    return(false);
          }
          if (this.SUFIJO_PLACA == null) {
                    if (valueObject.getSUFIJO_PLACA() != null)
                           return(false);
          } else if (!this.SUFIJO_PLACA.equals(valueObject.getSUFIJO_PLACA())) {
                    return(false);
          }
          if (this.LETRAFINAL == null) {
                    if (valueObject.getLETRAFINAL() != null)
                           return(false);
          } else if (!this.LETRAFINAL.equals(valueObject.getLETRAFINAL())) {
                    return(false);
          }
          if (valueObject.getDISPONIBLES() != this.DISPONIBLES) {
                    return(false);
          }

          return true;
    }



    /**
     * toString will return String object representing the state of this 
     * valueObject. This is useful during application development, and 
     * possibly when application is writing object states in textlog.
     */
    public String toString() {
        StringBuffer out = new StringBuffer(this.getDaogenVersion());
        out.append("\nclass RangosDeplacas, mapping to table RANGOSDEPLACAS\n");
        out.append("Persistent attributes: \n"); 
        out.append("ID_RANGODEPLACA = " + this.ID_RANGODEPLACA + "\n"); 
        out.append("LETRA = " + this.LETRA + "\n"); 
        out.append("NRO_RESOLUCION = " + this.NRO_RESOLUCION + "\n"); 
        out.append("FECHA_EXP = " + this.FECHA_EXP + "\n"); 
        out.append("R_INICIAL = " + this.R_INICIAL + "\n"); 
        out.append("R_FINAL = " + this.R_FINAL + "\n"); 
        out.append("ID_SERVICIO = " + this.ID_SERVICIO + "\n"); 
        out.append("ID_CVEHICULO = " + this.ID_CVEHICULO + "\n"); 
        out.append("ULTIMA_ASIG = " + this.ULTIMA_ASIG + "\n"); 
        out.append("SUFIJO_PLACA = " + this.SUFIJO_PLACA + "\n"); 
        out.append("LETRAFINAL = " + this.LETRAFINAL + "\n"); 
        out.append("DISPONIBLES = " + this.DISPONIBLES + "\n"); 
        return out.toString();
    }


    /**
     * Clone will return identical deep copy of this valueObject.
     * Note, that this method is different than the clone() which
     * is defined in java.lang.Object. Here, the retuned cloned object
     * will also have all its attributes cloned.
     */
    public Object clone() {
        RangosDeplacas cloned = new RangosDeplacas();

        cloned.setID_RANGODEPLACA(this.ID_RANGODEPLACA); 
        if (this.LETRA != null)
             cloned.setLETRA(new String(this.LETRA)); 
        if (this.NRO_RESOLUCION != null)
             cloned.setNRO_RESOLUCION(new String(this.NRO_RESOLUCION)); 
        if (this.FECHA_EXP != null)
             cloned.setFECHA_EXP(new String(this.FECHA_EXP)); 
        cloned.setR_INICIAL(this.R_INICIAL); 
        cloned.setR_FINAL(this.R_FINAL); 
        cloned.setID_SERVICIO(this.ID_SERVICIO); 
        cloned.setID_CVEHICULO(this.ID_CVEHICULO); 
        cloned.setULTIMA_ASIG(this.ULTIMA_ASIG); 
        if (this.SUFIJO_PLACA != null)
             cloned.setSUFIJO_PLACA(new String(this.SUFIJO_PLACA)); 
        if (this.LETRAFINAL != null)
             cloned.setLETRAFINAL(new String(this.LETRAFINAL)); 
        cloned.setDISPONIBLES(this.DISPONIBLES); 
        return cloned;
    }



    /** 
     * getDaogenVersion will return information about
     * generator which created these sources.
     */
    public String getDaogenVersion() {
        return "DaoGen version 2.4.1";
    }

}

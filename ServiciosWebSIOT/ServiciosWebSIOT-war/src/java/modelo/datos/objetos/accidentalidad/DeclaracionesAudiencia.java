
package modelo.datos.objetos.accidentalidad;

import java.io.*;
import java.sql.*;
import java.util.*;
import java.math.*;

 /**
  * AreaAccidente Value Object.
  * This class is value object representing database table AREA_ACCIDENTE
  * This class is intented to be used together with associated Dao object.
  */

 /**
  * This sourcecode has been generated by FREE DaoGen generator version 2.4.1.
  * The usage of generated code is restricted to OpenSource software projects
  * only. DaoGen is available in http://titaniclinux.net/daogen/
  * It has been programmed by Tuomo Lukka, Tuomo.Lukka@iki.fi
  *
  * DaoGen license: The following DaoGen generated source code is licensed
  * under the terms of GNU GPL license. The full text for license is available
  * in GNU project's pages: http://www.gnu.org/copyleft/gpl.html
  *
  * If you wish to use the DaoGen generator to produce code for closed-source
  * commercial applications, you must pay the lisence fee. The price is
  * 5 USD or 5 Eur for each database table, you are generating code for.
  * (That includes unlimited amount of iterations with all supported languages
  * for each database table you are paying for.) Send mail to
  * "Tuomo.Lukka@iki.fi" for more information. Thank you!
  */



public class DeclaracionesAudiencia implements Cloneable, Serializable {

    /** 
     * Persistent Instance variables. This data is directly 
     * mapped to the columns of database table.
     */
    private int ID_CITAS_AUDIENCIA;
    private String FECHA;
    private String HORA;
    private int ID_DECLARACIONES_AUDIENCIA;
    private String DECLARACION;

    /** 
     * Constructors. DaoGen generates two constructors by default.
     * The first one takes no arguments and provides the most simple
     * way to create object instance. The another one takes one
     * argument, which is the primary key of the corresponding table.
     */

    public DeclaracionesAudiencia () {

    }

    public DeclaracionesAudiencia (int ID_AREA_ACCIDENTEIn) {

          this.ID_CITAS_AUDIENCIA = ID_AREA_ACCIDENTEIn;

    }


    /** 
     * Get- and Set-methods for persistent variables. The default
     * behaviour does not make any checks against malformed data,
     * so these might require some manual additions.
     */

    public int getID_CITAS_AUDIENCIA() {
          return this.ID_CITAS_AUDIENCIA;
    }
    public void setID_CITAS_AUDIENCIA(int ID_AREA_ACCIDENTEIn) {
          this.ID_CITAS_AUDIENCIA = ID_AREA_ACCIDENTEIn;
    }

    public String getFECHA() {
          return this.FECHA;
    }
    public void setFECHA(String CODIGOIn) {
          this.FECHA = CODIGOIn;
    }

    public String getHORA() {
          return this.HORA;
    }
    public void setHORA(String DESCRIPCIONIn) {
          this.HORA = DESCRIPCIONIn;
    }



    /** 
     * setAll allows to set all persistent variables in one method call.
     * This is useful, when all data is available and it is needed to 
     * set the initial state of this object. Note that this method will
     * directly modify instance variales, without going trough the 
     * individual set-methods.
     */

    public void setAll(int ID_AREA_ACCIDENTEIn,
          String CODIGOIn,
          String DESCRIPCIONIn) {
          this.ID_CITAS_AUDIENCIA = ID_AREA_ACCIDENTEIn;
          this.FECHA = CODIGOIn;
          this.HORA = DESCRIPCIONIn;
    }


    /** 
     * hasEqualMapping-method will compare two AreaAccidente instances
     * and return true if they contain same values in all persistent instance 
     * variables. If hasEqualMapping returns true, it does not mean the objects
     * are the same instance. However it does mean that in that moment, they 
     * are mapped to the same row in database.
     */
    public boolean hasEqualMapping(DeclaracionesAudiencia valueObject) {

          if (valueObject.getID_CITAS_AUDIENCIA() != this.ID_CITAS_AUDIENCIA) {
                    return(false);
          }
          if (this.FECHA == null) {
                    if (valueObject.getFECHA() != null)
                           return(false);
          } else if (!this.FECHA.equals(valueObject.getFECHA())) {
                    return(false);
          }
          if (this.HORA == null) {
                    if (valueObject.getHORA() != null)
                           return(false);
          } else if (!this.HORA.equals(valueObject.getHORA())) {
                    return(false);
          }

          return true;
    }



    /**
     * toString will return String object representing the state of this 
     * valueObject. This is useful during application development, and 
     * possibly when application is writing object states in textlog.
     */
    public String toString() {
        StringBuffer out = new StringBuffer(this.getDaogenVersion());
        out.append("\nclass AreaAccidente, mapping to table AREA_ACCIDENTE\n");
        out.append("Persistent attributes: \n"); 
        out.append("ID_AREA_ACCIDENTE = " + this.ID_CITAS_AUDIENCIA + "\n"); 
        out.append("CODIGO = " + this.FECHA + "\n"); 
        out.append("DESCRIPCION = " + this.HORA + "\n"); 
        return out.toString();
    }


    /**
     * Clone will return identical deep copy of this valueObject.
     * Note, that this method is different than the clone() which
     * is defined in java.lang.Object. Here, the retuned cloned object
     * will also have all its attributes cloned.
     */
    public Object clone() {
        DeclaracionesAudiencia cloned = new DeclaracionesAudiencia();

        cloned.setID_CITAS_AUDIENCIA(this.ID_CITAS_AUDIENCIA); 
        if (this.FECHA != null)
             cloned.setFECHA(new String(this.FECHA)); 
        if (this.HORA != null)
             cloned.setHORA(new String(this.HORA)); 
        return cloned;
    }



    /** 
     * getDaogenVersion will return information about
     * generator which created these sources.
     */
    public String getDaogenVersion() {
        return "DaoGen version 2.4.1";
    }

    public int getID_DECLARACIONES_AUDIENCIA() {
        return ID_DECLARACIONES_AUDIENCIA;
    }

    public void setID_DECLARACIONES_AUDIENCIA(int NOMBRE_TABLA) {
        this.ID_DECLARACIONES_AUDIENCIA = NOMBRE_TABLA;
    }

    public String getDECLARACION() {
        return DECLARACION;
    }

    public void setDECLARACION(String DECLARACION) {
        this.DECLARACION = DECLARACION;
    }
}


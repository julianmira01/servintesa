package modelo.datos.objetos.tramites;

import java.io.*;
import java.sql.*;
import java.util.*;
import java.math.*;

 /**
  * RuntCambioMotor Value Object.
  * This class is value object representing database table RUNTCAMBIOMOTOR
  * This class is intented to be used together with associated Dao object.
  */

 /**
  * This sourcecode has been generated by FREE DaoGen generator version 2.4.1.
  * The usage of generated code is restricted to OpenSource software projects
  * only. DaoGen is available in http://titaniclinux.net/daogen/
  * It has been programmed by Tuomo Lukka, Tuomo.Lukka@iki.fi
  *
  * DaoGen license: The following DaoGen generated source code is licensed
  * under the terms of GNU GPL license. The full text for license is available
  * in GNU project's pages: http://www.gnu.org/copyleft/gpl.html
  *
  * If you wish to use the DaoGen generator to produce code for closed-source
  * commercial applications, you must pay the lisence fee. The price is
  * 5 USD or 5 Eur for each database table, you are generating code for.
  * (That includes unlimited amount of iterations with all supported languages
  * for each database table you are paying for.) Send mail to
  * "Tuomo.Lukka@iki.fi" for more information. Thank you!
  */



public class RuntCambioMotor implements Cloneable, Serializable {

    /** 
     * Persistent Instance variables. This data is directly 
     * mapped to the columns of database table.
     */
    private int ID_CAMBIOMOTOR;
    private int ID_VEHICULO;
    private int ID_FACTURA;
    private String TIPO_INGRESO;
    private String NRO_MOTOR;
    private String NRO_IMPORTACION;
    private String NRO_FACTURA;
    private String FECHA_FACTURA;
    private int ID_VENDEDOR;
    private String EMPER;
    private int ID_LOGIN;
    private String FECHA_SISTEMA;
    private String ACTIVO;



    /** 
     * Constructors. DaoGen generates two constructors by default.
     * The first one takes no arguments and provides the most simple
     * way to create object instance. The another one takes one
     * argument, which is the primary key of the corresponding table.
     */

    public RuntCambioMotor () {

    }

    public RuntCambioMotor (int ID_CAMBIOMOTORIn) {

          this.ID_CAMBIOMOTOR = ID_CAMBIOMOTORIn;

    }


    /** 
     * Get- and Set-methods for persistent variables. The default
     * behaviour does not make any checks against malformed data,
     * so these might require some manual additions.
     */

    public int getID_CAMBIOMOTOR() {
          return this.ID_CAMBIOMOTOR;
    }
    public void setID_CAMBIOMOTOR(int ID_CAMBIOMOTORIn) {
          this.ID_CAMBIOMOTOR = ID_CAMBIOMOTORIn;
    }

    public int getID_VEHICULO() {
          return this.ID_VEHICULO;
    }
    public void setID_VEHICULO(int ID_VEHICULOIn) {
          this.ID_VEHICULO = ID_VEHICULOIn;
    }

    public int getID_FACTURA() {
          return this.ID_FACTURA;
    }
    public void setID_FACTURA(int ID_FACTURAIn) {
          this.ID_FACTURA = ID_FACTURAIn;
    }

    public String getTIPO_INGRESO() {
          return this.TIPO_INGRESO;
    }
    public void setTIPO_INGRESO(String TIPO_INGRESOIn) {
          this.TIPO_INGRESO = TIPO_INGRESOIn;
    }

    public String getNRO_MOTOR() {
          return this.NRO_MOTOR;
    }
    public void setNRO_MOTOR(String NRO_MOTORIn) {
          this.NRO_MOTOR = NRO_MOTORIn;
    }

    public String getNRO_IMPORTACION() {
          return this.NRO_IMPORTACION;
    }
    public void setNRO_IMPORTACION(String NRO_IMPORTACIONIn) {
          this.NRO_IMPORTACION = NRO_IMPORTACIONIn;
    }

    public String getNRO_FACTURA() {
          return this.NRO_FACTURA;
    }
    public void setNRO_FACTURA(String NRO_FACTURAIn) {
          this.NRO_FACTURA = NRO_FACTURAIn;
    }

    public String getFECHA_FACTURA() {
          return this.FECHA_FACTURA;
    }
    public void setFECHA_FACTURA(String FECHA_FACTURAIn) {
          this.FECHA_FACTURA = FECHA_FACTURAIn;
    }

    public int getID_VENDEDOR() {
          return this.ID_VENDEDOR;
    }
    public void setID_VENDEDOR(int ID_VENDEDORIn) {
          this.ID_VENDEDOR = ID_VENDEDORIn;
    }

    public String getEMPER() {
          return this.EMPER;
    }
    public void setEMPER(String EMPERIn) {
          this.EMPER = EMPERIn;
    }

    public int getID_LOGIN() {
          return this.ID_LOGIN;
    }
    public void setID_LOGIN(int ID_LOGINIn) {
          this.ID_LOGIN = ID_LOGINIn;
    }

    public String getFECHA_SISTEMA() {
          return this.FECHA_SISTEMA;
    }
    public void setFECHA_SISTEMA(String FECHA_SISTEMAIn) {
          this.FECHA_SISTEMA = FECHA_SISTEMAIn;
    }

    public String getACTIVO() {
          return this.ACTIVO;
    }
    public void setACTIVO(String ACTIVOIn) {
          this.ACTIVO = ACTIVOIn;
    }



    /** 
     * setAll allows to set all persistent variables in one method call.
     * This is useful, when all data is available and it is needed to 
     * set the initial state of this object. Note that this method will
     * directly modify instance variales, without going trough the 
     * individual set-methods.
     */

    public void setAll(int ID_CAMBIOMOTORIn,
          int ID_VEHICULOIn,
          int ID_FACTURAIn,
          String TIPO_INGRESOIn,
          String NRO_MOTORIn,
          String NRO_IMPORTACIONIn,
          String NRO_FACTURAIn,
          String FECHA_FACTURAIn,
          int ID_VENDEDORIn,
          String EMPERIn,
          int ID_LOGINIn,
          String FECHA_SISTEMAIn,
          String ACTIVOIn) {
          this.ID_CAMBIOMOTOR = ID_CAMBIOMOTORIn;
          this.ID_VEHICULO = ID_VEHICULOIn;
          this.ID_FACTURA = ID_FACTURAIn;
          this.TIPO_INGRESO = TIPO_INGRESOIn;
          this.NRO_MOTOR = NRO_MOTORIn;
          this.NRO_IMPORTACION = NRO_IMPORTACIONIn;
          this.NRO_FACTURA = NRO_FACTURAIn;
          this.FECHA_FACTURA = FECHA_FACTURAIn;
          this.ID_VENDEDOR = ID_VENDEDORIn;
          this.EMPER = EMPERIn;
          this.ID_LOGIN = ID_LOGINIn;
          this.FECHA_SISTEMA = FECHA_SISTEMAIn;
          this.ACTIVO = ACTIVOIn;
    }


    /** 
     * hasEqualMapping-method will compare two RuntCambioMotor instances
     * and return true if they contain same values in all persistent instance 
     * variables. If hasEqualMapping returns true, it does not mean the objects
     * are the same instance. However it does mean that in that moment, they 
     * are mapped to the same row in database.
     */
    public boolean hasEqualMapping(RuntCambioMotor valueObject) {

          if (valueObject.getID_CAMBIOMOTOR() != this.ID_CAMBIOMOTOR) {
                    return(false);
          }
          if (valueObject.getID_VEHICULO() != this.ID_VEHICULO) {
                    return(false);
          }
          if (valueObject.getID_FACTURA() != this.ID_FACTURA) {
                    return(false);
          }
          if (this.TIPO_INGRESO == null) {
                    if (valueObject.getTIPO_INGRESO() != null)
                           return(false);
          } else if (!this.TIPO_INGRESO.equals(valueObject.getTIPO_INGRESO())) {
                    return(false);
          }
          if (this.NRO_MOTOR == null) {
                    if (valueObject.getNRO_MOTOR() != null)
                           return(false);
          } else if (!this.NRO_MOTOR.equals(valueObject.getNRO_MOTOR())) {
                    return(false);
          }
          if (this.NRO_IMPORTACION == null) {
                    if (valueObject.getNRO_IMPORTACION() != null)
                           return(false);
          } else if (!this.NRO_IMPORTACION.equals(valueObject.getNRO_IMPORTACION())) {
                    return(false);
          }
          if (this.NRO_FACTURA == null) {
                    if (valueObject.getNRO_FACTURA() != null)
                           return(false);
          } else if (!this.NRO_FACTURA.equals(valueObject.getNRO_FACTURA())) {
                    return(false);
          }
          if (this.FECHA_FACTURA == null) {
                    if (valueObject.getFECHA_FACTURA() != null)
                           return(false);
          } else if (!this.FECHA_FACTURA.equals(valueObject.getFECHA_FACTURA())) {
                    return(false);
          }
          if (valueObject.getID_VENDEDOR() != this.ID_VENDEDOR) {
                    return(false);
          }
          if (this.EMPER == null) {
                    if (valueObject.getEMPER() != null)
                           return(false);
          } else if (!this.EMPER.equals(valueObject.getEMPER())) {
                    return(false);
          }
          if (valueObject.getID_LOGIN() != this.ID_LOGIN) {
                    return(false);
          }
          if (this.FECHA_SISTEMA == null) {
                    if (valueObject.getFECHA_SISTEMA() != null)
                           return(false);
          } else if (!this.FECHA_SISTEMA.equals(valueObject.getFECHA_SISTEMA())) {
                    return(false);
          }
          if (this.ACTIVO == null) {
                    if (valueObject.getACTIVO() != null)
                           return(false);
          } else if (!this.ACTIVO.equals(valueObject.getACTIVO())) {
                    return(false);
          }

          return true;
    }



    /**
     * toString will return String object representing the state of this 
     * valueObject. This is useful during application development, and 
     * possibly when application is writing object states in textlog.
     */
    public String toString() {
        StringBuffer out = new StringBuffer(this.getDaogenVersion());
        out.append("\nclass RuntCambioMotor, mapping to table RUNTCAMBIOMOTOR\n");
        out.append("Persistent attributes: \n"); 
        out.append("ID_CAMBIOMOTOR = " + this.ID_CAMBIOMOTOR + "\n"); 
        out.append("ID_VEHICULO = " + this.ID_VEHICULO + "\n"); 
        out.append("ID_FACTURA = " + this.ID_FACTURA + "\n"); 
        out.append("TIPO_INGRESO = " + this.TIPO_INGRESO + "\n"); 
        out.append("NRO_MOTOR = " + this.NRO_MOTOR + "\n"); 
        out.append("NRO_IMPORTACION = " + this.NRO_IMPORTACION + "\n"); 
        out.append("NRO_FACTURA = " + this.NRO_FACTURA + "\n"); 
        out.append("FECHA_FACTURA = " + this.FECHA_FACTURA + "\n"); 
        out.append("ID_VENDEDOR = " + this.ID_VENDEDOR + "\n"); 
        out.append("EMPER = " + this.EMPER + "\n"); 
        out.append("ID_LOGIN = " + this.ID_LOGIN + "\n"); 
        out.append("FECHA_SISTEMA = " + this.FECHA_SISTEMA + "\n"); 
        out.append("ACTIVO = " + this.ACTIVO + "\n"); 
        return out.toString();
    }


    /**
     * Clone will return identical deep copy of this valueObject.
     * Note, that this method is different than the clone() which
     * is defined in java.lang.Object. Here, the retuned cloned object
     * will also have all its attributes cloned.
     */
    public Object clone() {
        RuntCambioMotor cloned = new RuntCambioMotor();

        cloned.setID_CAMBIOMOTOR(this.ID_CAMBIOMOTOR); 
        cloned.setID_VEHICULO(this.ID_VEHICULO); 
        cloned.setID_FACTURA(this.ID_FACTURA); 
        if (this.TIPO_INGRESO != null)
             cloned.setTIPO_INGRESO(new String(this.TIPO_INGRESO)); 
        if (this.NRO_MOTOR != null)
             cloned.setNRO_MOTOR(new String(this.NRO_MOTOR)); 
        if (this.NRO_IMPORTACION != null)
             cloned.setNRO_IMPORTACION(new String(this.NRO_IMPORTACION)); 
        if (this.NRO_FACTURA != null)
             cloned.setNRO_FACTURA(new String(this.NRO_FACTURA)); 
        if (this.FECHA_FACTURA != null)
             cloned.setFECHA_FACTURA(new String(this.FECHA_FACTURA)); 
        cloned.setID_VENDEDOR(this.ID_VENDEDOR); 
        if (this.EMPER != null)
             cloned.setEMPER(new String(this.EMPER)); 
        cloned.setID_LOGIN(this.ID_LOGIN); 
        if (this.FECHA_SISTEMA != null)
             cloned.setFECHA_SISTEMA(new String(this.FECHA_SISTEMA)); 
        if (this.ACTIVO != null)
             cloned.setACTIVO(new String(this.ACTIVO)); 
        return cloned;
    }



    /** 
     * getDaogenVersion will return information about
     * generator which created these sources.
     */
    public String getDaogenVersion() {
        return "DaoGen version 2.4.1";
    }

}
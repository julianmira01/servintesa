package modelo.datos.objetos.comparendos.generales;

import java.io.*;

import java.sql.*;

import java.util.*;

import java.math.*;

/**
  * AgenteComp Value Object.
  * This class is value object representing database table AGENTE
  * This class is intented to be used together with associated Dao object.
  */

/**
 * This sourcecode has been generated by FREE DaoGen generator version 2.4.1.
 * The usage of generated code is restricted to OpenSource software projects
 * only. DaoGen is available in http://titaniclinux.net/daogen/
 * It has been programmed by Tuomo Lukka, Tuomo.Lukka@iki.fi
 *
 * DaoGen license: The following DaoGen generated source code is licensed
 * under the terms of GNU GPL license. The full text for license is available
 * in GNU project's pages: http://www.gnu.org/copyleft/gpl.html
 *
 * If you wish to use the DaoGen generator to produce code for closed-source
 * commercial applications, you must pay the lisence fee. The price is
 * 5 USD or 5 Eur for each database table, you are generating code for.
 * (That includes unlimited amount of iterations with all supported languages
 * for each database table you are paying for.) Send mail to
 * "Tuomo.Lukka@iki.fi" for more information. Thank you!
 */


public class AgenteComp implements Cloneable, Serializable {

    /**
     * Persistent Instance variables. This data is directly
     * mapped to the columns of database table.
     */
    private int ID_AGENTE;
    private String NOMBRES;
    private String APELL1;
    private String APELL2;
    private int ID_ORGDETRANSITO;
    private String PLACAAGENTE;
    private int ID_DOCTO;
    private int ID_MOTIVO;
    private String FECHARETIRO;
    private String NROIDENTIFICACION;
    private String NOMAP;


    /**
     * Constructors. DaoGen generates two constructors by default.
     * The first one takes no arguments and provides the most simple
     * way to create object instance. The another one takes one
     * argument, which is the primary key of the corresponding table.
     */

    public AgenteComp() {

    }

    public AgenteComp(int ID_AGENTEIn) {

        this.ID_AGENTE = ID_AGENTEIn;

    }


    /**
     * Get- and Set-methods for persistent variables. The default
     * behaviour does not make any checks against malformed data,
     * so these might require some manual additions.
     */

    public int getID_AGENTE() {
        return this.ID_AGENTE;
    }

    public void setID_AGENTE(int ID_AGENTEIn) {
        this.ID_AGENTE = ID_AGENTEIn;
    }

    public String getNOMBRES() {
        return this.NOMBRES;
    }

    public void setNOMBRES(String NOMBRESIn) {
        this.NOMBRES = NOMBRESIn;
    }

    public String getAPELL1() {
        return this.APELL1;
    }

    public void setAPELL1(String APELL1In) {
        this.APELL1 = APELL1In;
    }

    public String getAPELL2() {
        return this.APELL2;
    }

    public void setAPELL2(String APELL2In) {
        this.APELL2 = APELL2In;
    }

    public int getID_ORGDETRANSITO() {
        return this.ID_ORGDETRANSITO;
    }

    public void setID_ORGDETRANSITO(int ID_ORGDETRANSITOIn) {
        this.ID_ORGDETRANSITO = ID_ORGDETRANSITOIn;
    }

    public String getPLACAAGENTE() {
        return this.PLACAAGENTE;
    }

    public void setPLACAAGENTE(String PLACAAGENTEIn) {
        this.PLACAAGENTE = PLACAAGENTEIn;
    }

    public int getID_DOCTO() {
        return this.ID_DOCTO;
    }

    public void setID_DOCTO(int ID_DOCTOIn) {
        this.ID_DOCTO = ID_DOCTOIn;
    }

    public int getID_MOTIVO() {
        return this.ID_MOTIVO;
    }

    public void setID_MOTIVO(int ID_MOTIVOIn) {
        this.ID_MOTIVO = ID_MOTIVOIn;
    }

    public String getFECHARETIRO() {
        return this.FECHARETIRO;
    }

    public void setFECHARETIRO(String FECHARETIROIn) {
        this.FECHARETIRO = FECHARETIROIn;
    }

    public String getNROIDENTIFICACION() {
        return this.NROIDENTIFICACION;
    }

    public void setNROIDENTIFICACION(String NROIDENTIFICACIONIn) {
        this.NROIDENTIFICACION = NROIDENTIFICACIONIn;
    }


    /**
     * setAll allows to set all persistent variables in one method call.
     * This is useful, when all data is available and it is needed to
     * set the initial state of this object. Note that this method will
     * directly modify instance variales, without going trough the
     * individual set-methods.
     */

    public void setAll(int ID_AGENTEIn, String NOMBRESIn, String APELL1In, String APELL2In, int ID_ORGDETRANSITOIn,
                       String PLACAAGENTEIn, int ID_DOCTOIn, int ID_MOTIVOIn, String FECHARETIROIn,
                       String NROIDENTIFICACIONIn) {
        this.ID_AGENTE = ID_AGENTEIn;
        this.NOMBRES = NOMBRESIn;
        this.APELL1 = APELL1In;
        this.APELL2 = APELL2In;
        this.ID_ORGDETRANSITO = ID_ORGDETRANSITOIn;
        this.PLACAAGENTE = PLACAAGENTEIn;
        this.ID_DOCTO = ID_DOCTOIn;
        this.ID_MOTIVO = ID_MOTIVOIn;
        this.FECHARETIRO = FECHARETIROIn;
        this.NROIDENTIFICACION = NROIDENTIFICACIONIn;
    }


    /**
     * hasEqualMapping-method will compare two AgenteComp instances
     * and return true if they contain same values in all persistent instance
     * variables. If hasEqualMapping returns true, it does not mean the objects
     * are the same instance. However it does mean that in that moment, they
     * are mapped to the same row in database.
     */
    public boolean hasEqualMapping(AgenteComp valueObject) {

        if (valueObject.getID_AGENTE() != this.ID_AGENTE) {
            return (false);
        }
        if (this.NOMBRES == null) {
            if (valueObject.getNOMBRES() != null)
                return (false);
        } else if (!this.NOMBRES.equals(valueObject.getNOMBRES())) {
            return (false);
        }
        if (this.APELL1 == null) {
            if (valueObject.getAPELL1() != null)
                return (false);
        } else if (!this.APELL1.equals(valueObject.getAPELL1())) {
            return (false);
        }
        if (this.APELL2 == null) {
            if (valueObject.getAPELL2() != null)
                return (false);
        } else if (!this.APELL2.equals(valueObject.getAPELL2())) {
            return (false);
        }
        if (valueObject.getID_ORGDETRANSITO() != this.ID_ORGDETRANSITO) {
            return (false);
        }
        if (this.PLACAAGENTE == null) {
            if (valueObject.getPLACAAGENTE() != null)
                return (false);
        } else if (!this.PLACAAGENTE.equals(valueObject.getPLACAAGENTE())) {
            return (false);
        }
        if (valueObject.getID_DOCTO() != this.ID_DOCTO) {
            return (false);
        }
        if (valueObject.getID_MOTIVO() != this.ID_MOTIVO) {
            return (false);
        }
        if (this.FECHARETIRO == null) {
            if (valueObject.getFECHARETIRO() != null)
                return (false);
        } else if (!this.FECHARETIRO.equals(valueObject.getFECHARETIRO())) {
            return (false);
        }
        if (this.NROIDENTIFICACION == null) {
            if (valueObject.getNROIDENTIFICACION() != null)
                return (false);
        } else if (!this.NROIDENTIFICACION.equals(valueObject.getNROIDENTIFICACION())) {
            return (false);
        }

        return true;
    }


    /**
     * toString will return String object representing the state of this
     * valueObject. This is useful during application development, and
     * possibly when application is writing object states in textlog.
     */
    public String toString() {
        StringBuffer out = new StringBuffer(this.getDaogenVersion());
        out.append("\nclass AgenteComp, mapping to table AGENTE\n");
        out.append("Persistent attributes: \n");
        out.append("ID_AGENTE = " + this.ID_AGENTE + "\n");
        out.append("NOMBRES = " + this.NOMBRES + "\n");
        out.append("APELL1 = " + this.APELL1 + "\n");
        out.append("APELL2 = " + this.APELL2 + "\n");
        out.append("ID_ORGDETRANSITO = " + this.ID_ORGDETRANSITO + "\n");
        out.append("PLACAAGENTE = " + this.PLACAAGENTE + "\n");
        out.append("ID_DOCTO = " + this.ID_DOCTO + "\n");
        out.append("ID_MOTIVO = " + this.ID_MOTIVO + "\n");
        out.append("FECHARETIRO = " + this.FECHARETIRO + "\n");
        out.append("NROIDENTIFICACION = " + this.NROIDENTIFICACION + "\n");
        return out.toString();
    }


    /**
     * Clone will return identical deep copy of this valueObject.
     * Note, that this method is different than the clone() which
     * is defined in java.lang.Object. Here, the retuned cloned object
     * will also have all its attributes cloned.
     */
    public Object clone() {
        AgenteComp cloned = new AgenteComp();

        cloned.setID_AGENTE(this.ID_AGENTE);
        if (this.NOMBRES != null)
            cloned.setNOMBRES(new String(this.NOMBRES));
        if (this.APELL1 != null)
            cloned.setAPELL1(new String(this.APELL1));
        if (this.APELL2 != null)
            cloned.setAPELL2(new String(this.APELL2));
        cloned.setID_ORGDETRANSITO(this.ID_ORGDETRANSITO);
        if (this.PLACAAGENTE != null)
            cloned.setPLACAAGENTE(new String(this.PLACAAGENTE));
        cloned.setID_DOCTO(this.ID_DOCTO);
        cloned.setID_MOTIVO(this.ID_MOTIVO);
        if (this.FECHARETIRO != null)
            cloned.setFECHARETIRO(new String(this.FECHARETIRO));
        if (this.NROIDENTIFICACION != null)
            cloned.setNROIDENTIFICACION(new String(this.NROIDENTIFICACION));
        return cloned;
    }


    /**
     * getDaogenVersion will return information about
     * generator which created these sources.
     */
    public String getDaogenVersion() {
        return "DaoGen version 2.4.1";
    }

    public String getNOMAP() {
        return NOMAP;
    }

    public void setNOMAP(String NOMAP) {
        this.NOMAP = NOMAP;
    }
}

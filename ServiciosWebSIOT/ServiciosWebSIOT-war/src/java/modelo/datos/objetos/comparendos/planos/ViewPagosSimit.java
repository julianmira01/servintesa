package modelo.datos.objetos.comparendos.planos;

import java.io.Serializable;

/**
  * ViewPagosSimit Value Object.
  * This class is value object representing database table VIEW_PAGOS_SIMIT
  * This class is intented to be used together with associated Dao object.
  */

 /**
  * This sourcecode has been generated by FREE DaoGen generator version 2.4.1.
  * The usage of generated code is restricted to OpenSource software projects
  * only. DaoGen is available in http://titaniclinux.net/daogen/
  * It has been programmed by Tuomo Lukka, Tuomo.Lukka@iki.fi
  *
  * DaoGen license: The following DaoGen generated source code is licensed
  * under the terms of GNU GPL license. The full text for license is available
  * in GNU project's pages: http://www.gnu.org/copyleft/gpl.html
  *
  * If you wish to use the DaoGen generator to produce code for closed-source
  * commercial applications, you must pay the lisence fee. The price is
  * 5 USD or 5 Eur for each database table, you are generating code for.
  * (That includes unlimited amount of iterations with all supported languages
  * for each database table you are paying for.) Send mail to
  * "Tuomo.Lukka@iki.fi" for more information. Thank you!
  */



public class ViewPagosSimit implements Cloneable, Serializable {

    /** 
     * Persistent Instance variables. This data is directly 
     * mapped to the columns of database table.
     */
    private int ID;
    private String VALOR;
    private String NUMEROCOMPARENDO;
    private String POLCA;
    private String NROIDENTIFICACION;
    private int IDLIQUIDACION;
    private String FECHAPAGO;
    private String NUMERO_RECIBO;
    private String NROCONSIGNACIONBANCO;
    private String HORAREGISTRO;
    private float VALORFORMA;
    private int ID_TIPOPAGO;
    private String DESCRIPCION;



    /** 
     * Constructors. DaoGen generates two constructors by default.
     * The first one takes no arguments and provides the most simple
     * way to create object instance. The another one takes one
     * argument, which is the primary key of the corresponding table.
     */

    public ViewPagosSimit () {

    }

    public ViewPagosSimit (int IDIn) {

          this.ID = IDIn;

    }


    /** 
     * Get- and Set-methods for persistent variables. The default
     * behaviour does not make any checks against malformed data,
     * so these might require some manual additions.
     */

    public int getID() {
          return this.ID;
    }
    public void setID(int IDIn) {
          this.ID = IDIn;
    }

    public String getVALOR() {
          return this.VALOR;
    }
    public void setVALOR(String VALORIn) {
          this.VALOR = VALORIn;
    }

    public String getNUMEROCOMPARENDO() {
          return this.NUMEROCOMPARENDO;
    }
    public void setNUMEROCOMPARENDO(String NUMEROCOMPARENDOIn) {
          this.NUMEROCOMPARENDO = NUMEROCOMPARENDOIn;
    }

    public String getPOLCA() {
          return this.POLCA;
    }
    public void setPOLCA(String POLCAIn) {
          this.POLCA = POLCAIn;
    }

    public String getNROIDENTIFICACION() {
          return this.NROIDENTIFICACION;
    }
    public void setNROIDENTIFICACION(String NROIDENTIFICACIONIn) {
          this.NROIDENTIFICACION = NROIDENTIFICACIONIn;
    }

    public int getIDLIQUIDACION() {
          return this.IDLIQUIDACION;
    }
    public void setIDLIQUIDACION(int IDLIQUIDACIONIn) {
          this.IDLIQUIDACION = IDLIQUIDACIONIn;
    }

    public String getFECHAPAGO() {
          return this.FECHAPAGO;
    }
    public void setFECHAPAGO(String FECHAPAGOIn) {
          this.FECHAPAGO = FECHAPAGOIn;
    }

    public String getNUMERO_RECIBO() {
          return this.NUMERO_RECIBO;
    }
    public void setNUMERO_RECIBO(String NUMERO_RECIBOIn) {
          this.NUMERO_RECIBO = NUMERO_RECIBOIn;
    }

    public String getNROCONSIGNACIONBANCO() {
          return this.NROCONSIGNACIONBANCO;
    }
    public void setNROCONSIGNACIONBANCO(String NROCONSIGNACIONBANCOIn) {
          this.NROCONSIGNACIONBANCO = NROCONSIGNACIONBANCOIn;
    }
    public String getHORAREGISTRO() {
        return HORAREGISTRO;
    }
    public void setHORAREGISTRO(String HORAREGISTRO) {
        this.HORAREGISTRO = HORAREGISTRO;
    }
    public float getVALORFORMA() {
        return VALORFORMA;
    }
    public void setVALORFORMA(float VALORFORMA) {
        this.VALORFORMA = VALORFORMA;
    }
    public int getID_TIPOPAGO() {
        return ID_TIPOPAGO;
    }
    public void setID_TIPOPAGO(int ID_TIPOPAGO) {
        this.ID_TIPOPAGO = ID_TIPOPAGO;
    }
    public String getDESCRIPCION() {
        return DESCRIPCION;
    }
    public void setDESCRIPCION(String DESCRIPCION) {
        this.DESCRIPCION = DESCRIPCION;
    }


    /** 
     * setAll allows to set all persistent variables in one method call.
     * This is useful, when all data is available and it is needed to 
     * set the initial state of this object. Note that this method will
     * directly modify instance variales, without going trough the 
     * individual set-methods.
     */

    public void setAll(int IDIn,
          String VALORIn,
          String NUMEROCOMPARENDOIn,
          String POLCAIn,
          String NROIDENTIFICACIONIn,
          int IDLIQUIDACIONIn,
          String FECHAPAGOIn,
          String NUMERO_RECIBOIn,
          String NROCONSIGNACIONBANCOIn,
          String HORAREGISTROIn,
          float VALORFORMAIn, 
          int ID_TIPOPAGOIn, 
          String DESCRIPCIONIn) {
          this.ID = IDIn;
          this.VALOR = VALORIn;
          this.NUMEROCOMPARENDO = NUMEROCOMPARENDOIn;
          this.POLCA = POLCAIn;
          this.NROIDENTIFICACION = NROIDENTIFICACIONIn;
          this.IDLIQUIDACION = IDLIQUIDACIONIn;
          this.FECHAPAGO = FECHAPAGOIn;
          this.NUMERO_RECIBO = NUMERO_RECIBOIn;
          this.NROCONSIGNACIONBANCO = NROCONSIGNACIONBANCOIn;
          this.HORAREGISTRO = HORAREGISTROIn;
          this.VALORFORMA = VALORFORMAIn;
          this.ID_TIPOPAGO = ID_TIPOPAGOIn;
          this.DESCRIPCION = DESCRIPCIONIn;
    }


    /** 
     * hasEqualMapping-method will compare two ViewPagosSimit instances
     * and return true if they contain same values in all persistent instance 
     * variables. If hasEqualMapping returns true, it does not mean the objects
     * are the same instance. However it does mean that in that moment, they 
     * are mapped to the same row in database.
     */
    public boolean hasEqualMapping(ViewPagosSimit valueObject) {

          if (valueObject.getID() != this.ID) {
                    return(false);
          }
          if (this.VALOR == null) {
                    if (valueObject.getVALOR() != null)
                           return(false);
          } else if (!this.VALOR.equals(valueObject.getVALOR())) {
                    return(false);
          }
          if (this.NUMEROCOMPARENDO == null) {
                    if (valueObject.getNUMEROCOMPARENDO() != null)
                           return(false);
          } else if (!this.NUMEROCOMPARENDO.equals(valueObject.getNUMEROCOMPARENDO())) {
                    return(false);
          }
          if (this.POLCA == null) {
                    if (valueObject.getPOLCA() != null)
                           return(false);
          } else if (!this.POLCA.equals(valueObject.getPOLCA())) {
                    return(false);
          }
          if (this.NROIDENTIFICACION == null) {
                    if (valueObject.getNROIDENTIFICACION() != null)
                           return(false);
          } else if (!this.NROIDENTIFICACION.equals(valueObject.getNROIDENTIFICACION())) {
                    return(false);
          }
          if (valueObject.getIDLIQUIDACION() != this.IDLIQUIDACION) {
                    return(false);
          }
          if (this.FECHAPAGO == null) {
                    if (valueObject.getFECHAPAGO() != null)
                           return(false);
          } else if (!this.FECHAPAGO.equals(valueObject.getFECHAPAGO())) {
                    return(false);
          }
          if (this.NUMERO_RECIBO == null) {
                    if (valueObject.getNUMERO_RECIBO() != null)
                           return(false);
          } else if (!this.NUMERO_RECIBO.equals(valueObject.getNUMERO_RECIBO())) {
                    return(false);
          }
          if (this.NROCONSIGNACIONBANCO == null) {
                    if (valueObject.getNROCONSIGNACIONBANCO() != null)
                           return(false);
          } else if (!this.NROCONSIGNACIONBANCO.equals(valueObject.getNROCONSIGNACIONBANCO())) {
                    return(false);
          }
          if (this.HORAREGISTRO == null) {
                    if (valueObject.getHORAREGISTRO() != null)
                           return(false);
          } else if (!this.HORAREGISTRO.equals(valueObject.getHORAREGISTRO())) {
                    return(false);
          }
          if (valueObject.getVALORFORMA() != this.VALORFORMA) {
                    return(false);
          }
          if (valueObject.getID_TIPOPAGO() != this.ID_TIPOPAGO) {
                    return(false);
          }
          if (this.DESCRIPCION == null) {
                    if (valueObject.getDESCRIPCION() != null)
                           return(false);
          } else if (!this.DESCRIPCION.equals(valueObject.getDESCRIPCION())) {
                    return(false);
          }
          
        
          return true;
    }



    /**
     * toString will return String object representing the state of this 
     * valueObject. This is useful during application development, and 
     * possibly when application is writing object states in textlog.
     */
    public String toString() {
        StringBuffer out = new StringBuffer(this.getDaogenVersion());
        out.append("\nclass ViewPagosSimit, mapping to table VIEW_PAGOS_SIMIT\n");
        out.append("Persistent attributes: \n"); 
        out.append("ID = " + this.ID + "\n"); 
        out.append("VALOR = " + this.VALOR + "\n"); 
        out.append("NUMEROCOMPARENDO = " + this.NUMEROCOMPARENDO + "\n"); 
        out.append("POLCA = " + this.POLCA + "\n"); 
        out.append("NROIDENTIFICACION = " + this.NROIDENTIFICACION + "\n"); 
        out.append("IDLIQUIDACION = " + this.IDLIQUIDACION + "\n"); 
        out.append("FECHAPAGO = " + this.FECHAPAGO + "\n"); 
        out.append("NUMERO_RECIBO = " + this.NUMERO_RECIBO + "\n"); 
        out.append("NROCONSIGNACIONBANCO = " + this.NROCONSIGNACIONBANCO + "\n"); 
        out.append("HORAREGISTRO = " + this.HORAREGISTRO + "\n"); 
        out.append("VALORFORMA = " + this.VALORFORMA + "\n"); 
        out.append("ID_TIPOPAGO = " + this.ID_TIPOPAGO + "\n"); 
        out.append("DESCRIPCION = " + this.DESCRIPCION + "\n"); 
        return out.toString();
    }


    /**
     * Clone will return identical deep copy of this valueObject.
     * Note, that this method is different than the clone() which
     * is defined in java.lang.Object. Here, the retuned cloned object
     * will also have all its attributes cloned.
     */
    public Object clone() {
        ViewPagosSimit cloned = new ViewPagosSimit();

        cloned.setID(this.ID); 
        if (this.VALOR != null)
             cloned.setVALOR(new String(this.VALOR)); 
        if (this.NUMEROCOMPARENDO != null)
             cloned.setNUMEROCOMPARENDO(new String(this.NUMEROCOMPARENDO)); 
        if (this.POLCA != null)
             cloned.setPOLCA(new String(this.POLCA)); 
        if (this.NROIDENTIFICACION != null)
             cloned.setNROIDENTIFICACION(new String(this.NROIDENTIFICACION)); 
        cloned.setIDLIQUIDACION(this.IDLIQUIDACION); 
        if (this.FECHAPAGO != null)
             cloned.setFECHAPAGO(new String(this.FECHAPAGO)); 
        if (this.NUMERO_RECIBO != null)
             cloned.setNUMERO_RECIBO(new String(this.NUMERO_RECIBO)); 
        if (this.NROCONSIGNACIONBANCO != null)
             cloned.setNROCONSIGNACIONBANCO(new String(this.NROCONSIGNACIONBANCO)); 
        if (this.HORAREGISTRO != null)
             cloned.setHORAREGISTRO(new String(this.HORAREGISTRO)); 
        cloned.setVALORFORMA(this.VALORFORMA);
        cloned.setID_TIPOPAGO(this.ID_TIPOPAGO);
        if (this.DESCRIPCION != null)
             cloned.setDESCRIPCION(new String(this.DESCRIPCION)); 
        return cloned;
    }



    /** 
     * getDaogenVersion will return information about
     * generator which created these sources.
     */
    public String getDaogenVersion() {
        return "DaoGen version 2.4.1";
    }
}

package modelo.datos.objetos.comparendos.liquidador;

import java.io.Serializable;

/**
  * Reciboscomparendo Value Object.
  * This class is value object representing database table RECIBOSCOMPARENDO
  * This class is intented to be used together with associated Dao object.
  */

 /**
  * This sourcecode has been generated by FREE DaoGen generator version 2.4.1.
  * The usage of generated code is restricted to OpenSource software projects
  * only. DaoGen is available in http://titaniclinux.net/daogen/
  * It has been programmed by Tuomo Lukka, Tuomo.Lukka@iki.fi
  *
  * DaoGen license: The following DaoGen generated source code is licensed
  * under the terms of GNU GPL license. The full text for license is available
  * in GNU project's pages: http://www.gnu.org/copyleft/gpl.html
  *
  * If you wish to use the DaoGen generator to produce code for closed-source
  * commercial applications, you must pay the lisence fee. The price is
  * 5 USD or 5 Eur for each database table, you are generating code for.
  * (That includes unlimited amount of iterations with all supported languages
  * for each database table you are paying for.) Send mail to
  * "Tuomo.Lukka@iki.fi" for more information. Thank you!
  */



public class Reciboscomparendo implements Cloneable, Serializable {

    /** 
     * Persistent Instance variables. This data is directly 
     * mapped to the columns of database table.
     */
    private int ID;
    private String NUMERO_RECIBO;
    private double VALOR;
    private String FECHACREACION;
    private int IDLIQUIDACION;
    private int ESTADO;
    private String FECHAPAGO;
    private int IDINFRACTOR;
    private String NUMEROOFICIO;
    private String FECHAOFICIO;
    private int IDORIGENPAGO;
    private String FECHAREGISTRO;
    private String HORAREGISTRO;
    private int IDUSUARIO;
    private String FECHAREGISTROPAGO;
    private int IDUSRPAGO;
    private String NROCONSIGNACIONBANCO;



    /** 
     * Constructors. DaoGen generates two constructors by default.
     * The first one takes no arguments and provides the most simple
     * way to create object instance. The another one takes one
     * argument, which is the primary key of the corresponding table.
     */

    public Reciboscomparendo () {

    }

    public Reciboscomparendo (int IDIn) {

          this.ID = IDIn;

    }


    /** 
     * Get- and Set-methods for persistent variables. The default
     * behaviour does not make any checks against malformed data,
     * so these might require some manual additions.
     */

    public int getID() {
          return this.ID;
    }
    public void setID(int IDIn) {
          this.ID = IDIn;
    }

    public String getNUMERO_RECIBO() {
          return this.NUMERO_RECIBO;
    }
    public void setNUMERO_RECIBO(String NUMERO_RECIBOIn) {
          this.NUMERO_RECIBO = NUMERO_RECIBOIn;
    }

    public double getVALOR() {
          return this.VALOR;
    }
    public void setVALOR(double VALORIn) {
          this.VALOR = VALORIn;
    }

    public String getFECHACREACION() {
          return this.FECHACREACION;
    }
    public void setFECHACREACION(String FECHACREACIONIn) {
          this.FECHACREACION = FECHACREACIONIn;
    }

    public int getIDLIQUIDACION() {
          return this.IDLIQUIDACION;
    }
    public void setIDLIQUIDACION(int IDLIQUIDACIONIn) {
          this.IDLIQUIDACION = IDLIQUIDACIONIn;
    }

    public int getESTADO() {
          return this.ESTADO;
    }
    public void setESTADO(int ESTADOIn) {
          this.ESTADO = ESTADOIn;
    }

    public String getFECHAPAGO() {
          return this.FECHAPAGO;
    }
    public void setFECHAPAGO(String FECHAPAGOIn) {
          this.FECHAPAGO = FECHAPAGOIn;
    }

    public int getIDINFRACTOR() {
          return this.IDINFRACTOR;
    }
    public void setIDINFRACTOR(int IDINFRACTORIn) {
          this.IDINFRACTOR = IDINFRACTORIn;
    }

    public String getNUMEROOFICIO() {
          return this.NUMEROOFICIO;
    }
    public void setNUMEROOFICIO(String NUMEROOFICIOIn) {
          this.NUMEROOFICIO = NUMEROOFICIOIn;
    }

    public String getFECHAOFICIO() {
          return this.FECHAOFICIO;
    }
    public void setFECHAOFICIO(String FECHAOFICIOIn) {
          this.FECHAOFICIO = FECHAOFICIOIn;
    }

    public int getIDORIGENPAGO() {
          return this.IDORIGENPAGO;
    }
    public void setIDORIGENPAGO(int IDORIGENPAGOIn) {
          this.IDORIGENPAGO = IDORIGENPAGOIn;
    }

    public String getFECHAREGISTRO() {
          return this.FECHAREGISTRO;
    }
    public void setFECHAREGISTRO(String FECHAREGISTROIn) {
          this.FECHAREGISTRO = FECHAREGISTROIn;
    }

    public String getHORAREGISTRO() {
          return this.HORAREGISTRO;
    }
    public void setHORAREGISTRO(String HORAREGISTROIn) {
          this.HORAREGISTRO = HORAREGISTROIn;
    }

    public int getIDUSUARIO() {
          return this.IDUSUARIO;
    }
    public void setIDUSUARIO(int IDUSUARIOIn) {
          this.IDUSUARIO = IDUSUARIOIn;
    }

    public String getFECHAREGISTROPAGO() {
          return this.FECHAREGISTROPAGO;
    }
    public void setFECHAREGISTROPAGO(String FECHAREGISTROPAGOIn) {
          this.FECHAREGISTROPAGO = FECHAREGISTROPAGOIn;
    }

    public int getIDUSRPAGO() {
          return this.IDUSRPAGO;
    }
    public void setIDUSRPAGO(int IDUSRPAGOIn) {
          this.IDUSRPAGO = IDUSRPAGOIn;
    }

    public String getNROCONSIGNACIONBANCO() {
          return this.NROCONSIGNACIONBANCO;
    }
    public void setNROCONSIGNACIONBANCO(String NROCONSIGNACIONBANCOIn) {
          this.NROCONSIGNACIONBANCO = NROCONSIGNACIONBANCOIn;
    }



    /** 
     * setAll allows to set all persistent variables in one method call.
     * This is useful, when all data is available and it is needed to 
     * set the initial state of this object. Note that this method will
     * directly modify instance variales, without going trough the 
     * individual set-methods.
     */

    public void setAll(int IDIn,
          String NUMERO_RECIBOIn,
          double VALORIn,
          String FECHACREACIONIn,
          int IDLIQUIDACIONIn,
          int ESTADOIn,
          String FECHAPAGOIn,
          int IDINFRACTORIn,
          String NUMEROOFICIOIn,
          String FECHAOFICIOIn,
          int IDORIGENPAGOIn,
          String FECHAREGISTROIn,
          String HORAREGISTROIn,
          int IDUSUARIOIn,
          String FECHAREGISTROPAGOIn,
          int IDUSRPAGOIn,
          String NROCONSIGNACIONBANCOIn) {
          this.ID = IDIn;
          this.NUMERO_RECIBO = NUMERO_RECIBOIn;
          this.VALOR = VALORIn;
          this.FECHACREACION = FECHACREACIONIn;
          this.IDLIQUIDACION = IDLIQUIDACIONIn;
          this.ESTADO = ESTADOIn;
          this.FECHAPAGO = FECHAPAGOIn;
          this.IDINFRACTOR = IDINFRACTORIn;
          this.NUMEROOFICIO = NUMEROOFICIOIn;
          this.FECHAOFICIO = FECHAOFICIOIn;
          this.IDORIGENPAGO = IDORIGENPAGOIn;
          this.FECHAREGISTRO = FECHAREGISTROIn;
          this.HORAREGISTRO = HORAREGISTROIn;
          this.IDUSUARIO = IDUSUARIOIn;
          this.FECHAREGISTROPAGO = FECHAREGISTROPAGOIn;
          this.IDUSRPAGO = IDUSRPAGOIn;
          this.NROCONSIGNACIONBANCO = NROCONSIGNACIONBANCOIn;
    }


    /** 
     * hasEqualMapping-method will compare two Reciboscomparendo instances
     * and return true if they contain same values in all persistent instance 
     * variables. If hasEqualMapping returns true, it does not mean the objects
     * are the same instance. However it does mean that in that moment, they 
     * are mapped to the same row in database.
     */
    public boolean hasEqualMapping(Reciboscomparendo valueObject) {

          if (valueObject.getID() != this.ID) {
                    return(false);
          }
          if (this.NUMERO_RECIBO == null) {
                    if (valueObject.getNUMERO_RECIBO() != null)
                           return(false);
          } else if (!this.NUMERO_RECIBO.equals(valueObject.getNUMERO_RECIBO())) {
                    return(false);
          }
          if (valueObject.getVALOR() != this.VALOR) {
                    return(false);
          }
          if (this.FECHACREACION == null) {
                    if (valueObject.getFECHACREACION() != null)
                           return(false);
          } else if (!this.FECHACREACION.equals(valueObject.getFECHACREACION())) {
                    return(false);
          }
          if (valueObject.getIDLIQUIDACION() != this.IDLIQUIDACION) {
                    return(false);
          }
          if (valueObject.getESTADO() != this.ESTADO) {
                    return(false);
          }
          if (this.FECHAPAGO == null) {
                    if (valueObject.getFECHAPAGO() != null)
                           return(false);
          } else if (!this.FECHAPAGO.equals(valueObject.getFECHAPAGO())) {
                    return(false);
          }
          if (valueObject.getIDINFRACTOR() != this.IDINFRACTOR) {
                    return(false);
          }
          if (this.NUMEROOFICIO == null) {
                    if (valueObject.getNUMEROOFICIO() != null)
                           return(false);
          } else if (!this.NUMEROOFICIO.equals(valueObject.getNUMEROOFICIO())) {
                    return(false);
          }
          if (this.FECHAOFICIO == null) {
                    if (valueObject.getFECHAOFICIO() != null)
                           return(false);
          } else if (!this.FECHAOFICIO.equals(valueObject.getFECHAOFICIO())) {
                    return(false);
          }
          if (valueObject.getIDORIGENPAGO() != this.IDORIGENPAGO) {
                    return(false);
          }
          if (this.FECHAREGISTRO == null) {
                    if (valueObject.getFECHAREGISTRO() != null)
                           return(false);
          } else if (!this.FECHAREGISTRO.equals(valueObject.getFECHAREGISTRO())) {
                    return(false);
          }
          if (this.HORAREGISTRO == null) {
                    if (valueObject.getHORAREGISTRO() != null)
                           return(false);
          } else if (!this.HORAREGISTRO.equals(valueObject.getHORAREGISTRO())) {
                    return(false);
          }
          if (valueObject.getIDUSUARIO() != this.IDUSUARIO) {
                    return(false);
          }
          if (this.FECHAREGISTROPAGO == null) {
                    if (valueObject.getFECHAREGISTROPAGO() != null)
                           return(false);
          } else if (!this.FECHAREGISTROPAGO.equals(valueObject.getFECHAREGISTROPAGO())) {
                    return(false);
          }
          if (valueObject.getIDUSRPAGO() != this.IDUSRPAGO) {
                    return(false);
          }
          if (this.NROCONSIGNACIONBANCO == null) {
                    if (valueObject.getNROCONSIGNACIONBANCO() != null)
                           return(false);
          } else if (!this.NROCONSIGNACIONBANCO.equals(valueObject.getNROCONSIGNACIONBANCO())) {
                    return(false);
          }

          return true;
    }



    /**
     * toString will return String object representing the state of this 
     * valueObject. This is useful during application development, and 
     * possibly when application is writing object states in textlog.
     */
    public String toString() {
        StringBuffer out = new StringBuffer(this.getDaogenVersion());
        out.append("\nclass Reciboscomparendo, mapping to table RECIBOSCOMPARENDO\n");
        out.append("Persistent attributes: \n"); 
        out.append("ID = " + this.ID + "\n"); 
        out.append("NUMERO_RECIBO = " + this.NUMERO_RECIBO + "\n"); 
        out.append("VALOR = " + this.VALOR + "\n"); 
        out.append("FECHACREACION = " + this.FECHACREACION + "\n"); 
        out.append("IDLIQUIDACION = " + this.IDLIQUIDACION + "\n"); 
        out.append("ESTADO = " + this.ESTADO + "\n"); 
        out.append("FECHAPAGO = " + this.FECHAPAGO + "\n"); 
        out.append("IDINFRACTOR = " + this.IDINFRACTOR + "\n"); 
        out.append("NUMEROOFICIO = " + this.NUMEROOFICIO + "\n"); 
        out.append("FECHAOFICIO = " + this.FECHAOFICIO + "\n"); 
        out.append("IDORIGENPAGO = " + this.IDORIGENPAGO + "\n"); 
        out.append("FECHAREGISTRO = " + this.FECHAREGISTRO + "\n"); 
        out.append("HORAREGISTRO = " + this.HORAREGISTRO + "\n"); 
        out.append("IDUSUARIO = " + this.IDUSUARIO + "\n"); 
        out.append("FECHAREGISTROPAGO = " + this.FECHAREGISTROPAGO + "\n"); 
        out.append("IDUSRPAGO = " + this.IDUSRPAGO + "\n"); 
        out.append("NROCONSIGNACIONBANCO = " + this.NROCONSIGNACIONBANCO + "\n"); 
        return out.toString();
    }


    /**
     * Clone will return identical deep copy of this valueObject.
     * Note, that this method is different than the clone() which
     * is defined in java.lang.Object. Here, the retuned cloned object
     * will also have all its attributes cloned.
     */
    public Object clone() {
        Reciboscomparendo cloned = new Reciboscomparendo();

        cloned.setID(this.ID); 
        if (this.NUMERO_RECIBO != null)
             cloned.setNUMERO_RECIBO(new String(this.NUMERO_RECIBO)); 
        cloned.setVALOR(this.VALOR); 
        if (this.FECHACREACION != null)
             cloned.setFECHACREACION(new String(this.FECHACREACION)); 
        cloned.setIDLIQUIDACION(this.IDLIQUIDACION); 
        cloned.setESTADO(this.ESTADO); 
        if (this.FECHAPAGO != null)
             cloned.setFECHAPAGO(new String(this.FECHAPAGO)); 
        cloned.setIDINFRACTOR(this.IDINFRACTOR); 
        if (this.NUMEROOFICIO != null)
             cloned.setNUMEROOFICIO(new String(this.NUMEROOFICIO)); 
        if (this.FECHAOFICIO != null)
             cloned.setFECHAOFICIO(new String(this.FECHAOFICIO)); 
        cloned.setIDORIGENPAGO(this.IDORIGENPAGO); 
        if (this.FECHAREGISTRO != null)
             cloned.setFECHAREGISTRO(new String(this.FECHAREGISTRO)); 
        if (this.HORAREGISTRO != null)
             cloned.setHORAREGISTRO(new String(this.HORAREGISTRO)); 
        cloned.setIDUSUARIO(this.IDUSUARIO); 
        if (this.FECHAREGISTROPAGO != null)
             cloned.setFECHAREGISTROPAGO(new String(this.FECHAREGISTROPAGO)); 
        cloned.setIDUSRPAGO(this.IDUSRPAGO); 
        if (this.NROCONSIGNACIONBANCO != null)
             cloned.setNROCONSIGNACIONBANCO(new String(this.NROCONSIGNACIONBANCO)); 
        return cloned;
    }



    /** 
     * getDaogenVersion will return information about
     * generator which created these sources.
     */
    public String getDaogenVersion() {
        return "DaoGen version 2.4.1";
    }

}

package modelo.datos.objetos.comparendos.planos;

import java.io.*;
import java.sql.*;
import java.util.*;
import java.math.*;

 /**
  * ViewVehiculoComparendo Value Object.
  * This class is value object representing database table VIEW_VEHICULO_COMPARENDO
  * This class is intented to be used together with associated Dao object.
  */

 /**
  * This sourcecode has been generated by FREE DaoGen generator version 2.4.1.
  * The usage of generated code is restricted to OpenSource software projects
  * only. DaoGen is available in http://titaniclinux.net/daogen/
  * It has been programmed by Tuomo Lukka, Tuomo.Lukka@iki.fi
  *
  * DaoGen license: The following DaoGen generated source code is licensed
  * under the terms of GNU GPL license. The full text for license is available
  * in GNU project's pages: http://www.gnu.org/copyleft/gpl.html
  *
  * If you wish to use the DaoGen generator to produce code for closed-source
  * commercial applications, you must pay the lisence fee. The price is
  * 5 USD or 5 Eur for each database table, you are generating code for.
  * (That includes unlimited amount of iterations with all supported languages
  * for each database table you are paying for.) Send mail to
  * "Tuomo.Lukka@iki.fi" for more information. Thank you!
  */



public class ViewVehiculoComparendo implements Cloneable, Serializable {

    /** 
     * Persistent Instance variables. This data is directly 
     * mapped to the columns of database table.
     */
    private String PLACA;
    private int ID_CVEHICULO;
    private int ID_SERVICIO;
    private String NROLICENCIA;
    private String NITMATRICULA;
    private String COD_RADIOACCION;
    private String COD_MODTRANSPORTE;
    private String COD_TIPOTRANSPORTE;
    private String TARJETAOPERACION;
    private String NIT;
    private String RAZONSOCIAL;
    private String CODCIUDAD;



    /** 
     * Constructors. DaoGen generates two constructors by default.
     * The first one takes no arguments and provides the most simple
     * way to create object instance. The another one takes one
     * argument, which is the primary key of the corresponding table.
     */

    public ViewVehiculoComparendo () {

    }

    public ViewVehiculoComparendo (String PLACAIn) {

          this.PLACA = PLACAIn;

    }


    /** 
     * Get- and Set-methods for persistent variables. The default
     * behaviour does not make any checks against malformed data,
     * so these might require some manual additions.
     */

    public String getPLACA() {
          return this.PLACA;
    }
    public void setPLACA(String PLACAIn) {
          this.PLACA = PLACAIn;
    }

    public int getID_CVEHICULO() {
          return this.ID_CVEHICULO;
    }
    public void setID_CVEHICULO(int ID_CVEHICULOIn) {
          this.ID_CVEHICULO = ID_CVEHICULOIn;
    }

    public int getID_SERVICIO() {
          return this.ID_SERVICIO;
    }
    public void setID_SERVICIO(int ID_SERVICIOIn) {
          this.ID_SERVICIO = ID_SERVICIOIn;
    }

    public String getNROLICENCIA() {
          return this.NROLICENCIA;
    }
    public void setNROLICENCIA(String NROLICENCIAIn) {
          this.NROLICENCIA = NROLICENCIAIn;
    }

    public String getNITMATRICULA() {
          return this.NITMATRICULA;
    }
    public void setNITMATRICULA(String NITMATRICULAIn) {
          this.NITMATRICULA = NITMATRICULAIn;
    }

    public String getCOD_RADIOACCION() {
          return this.COD_RADIOACCION;
    }
    public void setCOD_RADIOACCION(String COD_RADIOACCIONIn) {
          this.COD_RADIOACCION = COD_RADIOACCIONIn;
    }

    public String getCOD_MODTRANSPORTE() {
          return this.COD_MODTRANSPORTE;
    }
    public void setCOD_MODTRANSPORTE(String COD_MODTRANSPORTEIn) {
          this.COD_MODTRANSPORTE = COD_MODTRANSPORTEIn;
    }

    public String getCOD_TIPOTRANSPORTE() {
          return this.COD_TIPOTRANSPORTE;
    }
    public void setCOD_TIPOTRANSPORTE(String COD_TIPOTRANSPORTEIn) {
          this.COD_TIPOTRANSPORTE = COD_TIPOTRANSPORTEIn;
    }

    public String getTARJETAOPERACION() {
          return this.TARJETAOPERACION;
    }
    public void setTARJETAOPERACION(String TARJETAOPERACIONIn) {
          this.TARJETAOPERACION = TARJETAOPERACIONIn;
    }

    public String getNIT() {
          return this.NIT;
    }
    public void setNIT(String NITIn) {
          this.NIT = NITIn;
    }

    public String getRAZONSOCIAL() {
          return this.RAZONSOCIAL;
    }
    public void setRAZONSOCIAL(String RAZONSOCIALIn) {
          this.RAZONSOCIAL = RAZONSOCIALIn;
    }

    public String getCODCIUDAD() {
          return this.CODCIUDAD;
    }
    public void setCODCIUDAD(String CODCIUDADIn) {
          this.CODCIUDAD = CODCIUDADIn;
    }



    /** 
     * setAll allows to set all persistent variables in one method call.
     * This is useful, when all data is available and it is needed to 
     * set the initial state of this object. Note that this method will
     * directly modify instance variales, without going trough the 
     * individual set-methods.
     */

    public void setAll(String PLACAIn,
          int ID_CVEHICULOIn,
          int ID_SERVICIOIn,
          String NROLICENCIAIn,
          String NITMATRICULAIn,
          String COD_RADIOACCIONIn,
          String COD_MODTRANSPORTEIn,
          String COD_TIPOTRANSPORTEIn,
          String TARJETAOPERACIONIn,
          String NITIn,
          String RAZONSOCIALIn,
          String CODCIUDADIn) {
          this.PLACA = PLACAIn;
          this.ID_CVEHICULO = ID_CVEHICULOIn;
          this.ID_SERVICIO = ID_SERVICIOIn;
          this.NROLICENCIA = NROLICENCIAIn;
          this.NITMATRICULA = NITMATRICULAIn;
          this.COD_RADIOACCION = COD_RADIOACCIONIn;
          this.COD_MODTRANSPORTE = COD_MODTRANSPORTEIn;
          this.COD_TIPOTRANSPORTE = COD_TIPOTRANSPORTEIn;
          this.TARJETAOPERACION = TARJETAOPERACIONIn;
          this.NIT = NITIn;
          this.RAZONSOCIAL = RAZONSOCIALIn;
          this.CODCIUDAD = CODCIUDADIn;
    }


    /** 
     * hasEqualMapping-method will compare two ViewVehiculoComparendo instances
     * and return true if they contain same values in all persistent instance 
     * variables. If hasEqualMapping returns true, it does not mean the objects
     * are the same instance. However it does mean that in that moment, they 
     * are mapped to the same row in database.
     */
    public boolean hasEqualMapping(ViewVehiculoComparendo valueObject) {

          if (this.PLACA == null) {
                    if (valueObject.getPLACA() != null)
                           return(false);
          } else if (!this.PLACA.equals(valueObject.getPLACA())) {
                    return(false);
          }
          if (valueObject.getID_CVEHICULO() != this.ID_CVEHICULO) {
                    return(false);
          }
          if (valueObject.getID_SERVICIO() != this.ID_SERVICIO) {
                    return(false);
          }
          if (this.NROLICENCIA == null) {
                    if (valueObject.getNROLICENCIA() != null)
                           return(false);
          } else if (!this.NROLICENCIA.equals(valueObject.getNROLICENCIA())) {
                    return(false);
          }
          if (this.NITMATRICULA == null) {
                    if (valueObject.getNITMATRICULA() != null)
                           return(false);
          } else if (!this.NITMATRICULA.equals(valueObject.getNITMATRICULA())) {
                    return(false);
          }
          if (this.COD_RADIOACCION == null) {
                    if (valueObject.getCOD_RADIOACCION() != null)
                           return(false);
          } else if (!this.COD_RADIOACCION.equals(valueObject.getCOD_RADIOACCION())) {
                    return(false);
          }
          if (this.COD_MODTRANSPORTE == null) {
                    if (valueObject.getCOD_MODTRANSPORTE() != null)
                           return(false);
          } else if (!this.COD_MODTRANSPORTE.equals(valueObject.getCOD_MODTRANSPORTE())) {
                    return(false);
          }
          if (this.COD_TIPOTRANSPORTE == null) {
                    if (valueObject.getCOD_TIPOTRANSPORTE() != null)
                           return(false);
          } else if (!this.COD_TIPOTRANSPORTE.equals(valueObject.getCOD_TIPOTRANSPORTE())) {
                    return(false);
          }
          if (this.TARJETAOPERACION == null) {
                    if (valueObject.getTARJETAOPERACION() != null)
                           return(false);
          } else if (!this.TARJETAOPERACION.equals(valueObject.getTARJETAOPERACION())) {
                    return(false);
          }
          if (this.NIT == null) {
                    if (valueObject.getNIT() != null)
                           return(false);
          } else if (!this.NIT.equals(valueObject.getNIT())) {
                    return(false);
          }
          if (this.RAZONSOCIAL == null) {
                    if (valueObject.getRAZONSOCIAL() != null)
                           return(false);
          } else if (!this.RAZONSOCIAL.equals(valueObject.getRAZONSOCIAL())) {
                    return(false);
          }
          if (this.CODCIUDAD == null) {
                    if (valueObject.getCODCIUDAD() != null)
                           return(false);
          } else if (!this.CODCIUDAD.equals(valueObject.getCODCIUDAD())) {
                    return(false);
          }

          return true;
    }



    /**
     * toString will return String object representing the state of this 
     * valueObject. This is useful during application development, and 
     * possibly when application is writing object states in textlog.
     */
    public String toString() {
        StringBuffer out = new StringBuffer(this.getDaogenVersion());
        out.append("\nclass ViewVehiculoComparendo, mapping to table VIEW_VEHICULO_COMPARENDO\n");
        out.append("Persistent attributes: \n"); 
        out.append("PLACA = " + this.PLACA + "\n"); 
        out.append("ID_CVEHICULO = " + this.ID_CVEHICULO + "\n"); 
        out.append("ID_SERVICIO = " + this.ID_SERVICIO + "\n"); 
        out.append("NROLICENCIA = " + this.NROLICENCIA + "\n"); 
        out.append("NITMATRICULA = " + this.NITMATRICULA + "\n"); 
        out.append("COD_RADIOACCION = " + this.COD_RADIOACCION + "\n"); 
        out.append("COD_MODTRANSPORTE = " + this.COD_MODTRANSPORTE + "\n"); 
        out.append("COD_TIPOTRANSPORTE = " + this.COD_TIPOTRANSPORTE + "\n"); 
        out.append("TARJETAOPERACION = " + this.TARJETAOPERACION + "\n"); 
        out.append("NIT = " + this.NIT + "\n"); 
        out.append("RAZONSOCIAL = " + this.RAZONSOCIAL + "\n"); 
        out.append("CODCIUDAD = " + this.CODCIUDAD + "\n"); 
        return out.toString();
    }


    /**
     * Clone will return identical deep copy of this valueObject.
     * Note, that this method is different than the clone() which
     * is defined in java.lang.Object. Here, the retuned cloned object
     * will also have all its attributes cloned.
     */
    public Object clone() {
        ViewVehiculoComparendo cloned = new ViewVehiculoComparendo();

        if (this.PLACA != null)
             cloned.setPLACA(new String(this.PLACA)); 
        cloned.setID_CVEHICULO(this.ID_CVEHICULO); 
        cloned.setID_SERVICIO(this.ID_SERVICIO); 
        if (this.NROLICENCIA != null)
             cloned.setNROLICENCIA(new String(this.NROLICENCIA)); 
        if (this.NITMATRICULA != null)
             cloned.setNITMATRICULA(new String(this.NITMATRICULA)); 
        if (this.COD_RADIOACCION != null)
             cloned.setCOD_RADIOACCION(new String(this.COD_RADIOACCION)); 
        if (this.COD_MODTRANSPORTE != null)
             cloned.setCOD_MODTRANSPORTE(new String(this.COD_MODTRANSPORTE)); 
        if (this.COD_TIPOTRANSPORTE != null)
             cloned.setCOD_TIPOTRANSPORTE(new String(this.COD_TIPOTRANSPORTE)); 
        if (this.TARJETAOPERACION != null)
             cloned.setTARJETAOPERACION(new String(this.TARJETAOPERACION)); 
        if (this.NIT != null)
             cloned.setNIT(new String(this.NIT)); 
        if (this.RAZONSOCIAL != null)
             cloned.setRAZONSOCIAL(new String(this.RAZONSOCIAL)); 
        if (this.CODCIUDAD != null)
             cloned.setCODCIUDAD(new String(this.CODCIUDAD)); 
        return cloned;
    }



    /** 
     * getDaogenVersion will return information about
     * generator which created these sources.
     */
    public String getDaogenVersion() {
        return "DaoGen version 2.4.1";
    }

}
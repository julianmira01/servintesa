package modelo.datos.objetos.comparendos.planos;

import java.io.*;
import java.sql.*;
import java.util.*;
import java.math.*;

 /**
  * ViewResoluciones Value Object.
  * This class is value object representing database table VIEW_RESOLUCIONES
  * This class is intented to be used together with associated Dao object.
  */

 /**
  * This sourcecode has been generated by FREE DaoGen generator version 2.4.1.
  * The usage of generated code is restricted to OpenSource software projects
  * only. DaoGen is available in http://titaniclinux.net/daogen/
  * It has been programmed by Tuomo Lukka, Tuomo.Lukka@iki.fi
  *
  * DaoGen license: The following DaoGen generated source code is licensed
  * under the terms of GNU GPL license. The full text for license is available
  * in GNU project's pages: http://www.gnu.org/copyleft/gpl.html
  *
  * If you wish to use the DaoGen generator to produce code for closed-source
  * commercial applications, you must pay the lisence fee. The price is
  * 5 USD or 5 Eur for each database table, you are generating code for.
  * (That includes unlimited amount of iterations with all supported languages
  * for each database table you are paying for.) Send mail to
  * "Tuomo.Lukka@iki.fi" for more information. Thank you!
  */



public class ViewResoluciones implements Cloneable, Serializable {

    /** 
     * Persistent Instance variables. This data is directly 
     * mapped to the columns of database table.
     */
    private String NUMERO;
    private String FECHA;
    private String CODTIPORESOLUCION;
    private String NUMEROCOMPARENDO;
    private int ID_COMPARENDO;
    private String FECHACOMPARENDO;
    private String POLCA;
    private String VALORALCOLEMIA;
    private String NROIDENTIFICACION;
    private String ID_DOCTO;
    private String NOMBRES;
    private String APELLIDOS;
    private String DIRECCION;
    private String TELEFONO;
    private String CODCIUDAD;
    private String ID_DEPTO;
    private String VALORINFRACCION;
    private int ID;
    private String COD_INFRACCION;
    private String NUEVO_CODIGO;
    private String NUEVO_CODIGOCORREGIDO;
    private int IDREPORTECOMPARENDO;



    /** 
     * Constructors. DaoGen generates two constructors by default.
     * The first one takes no arguments and provides the most simple
     * way to create object instance. The another one takes one
     * argument, which is the primary key of the corresponding table.
     */

    public ViewResoluciones () {

    }

    public ViewResoluciones (String NUMEROIn) {

          this.NUMERO = NUMEROIn;

    }


    /** 
     * Get- and Set-methods for persistent variables. The default
     * behaviour does not make any checks against malformed data,
     * so these might require some manual additions.
     */

    public String getNUMERO() {
          return this.NUMERO;
    }
    public void setNUMERO(String NUMEROIn) {
          this.NUMERO = NUMEROIn;
    }

    public String getFECHA() {
          return this.FECHA;
    }
    public void setFECHA(String FECHAIn) {
          this.FECHA = FECHAIn;
    }

    public String getCODTIPORESOLUCION() {
          return this.CODTIPORESOLUCION;
    }
    public void setCODTIPORESOLUCION(String CODTIPORESOLUCIONIn) {
          this.CODTIPORESOLUCION = CODTIPORESOLUCIONIn;
    }

    public String getNUMEROCOMPARENDO() {
          return this.NUMEROCOMPARENDO;
    }
    public void setNUMEROCOMPARENDO(String NUMEROCOMPARENDOIn) {
          this.NUMEROCOMPARENDO = NUMEROCOMPARENDOIn;
    }

    public int getID_COMPARENDO() {
          return this.ID_COMPARENDO;
    }
    public void setID_COMPARENDO(int ID_COMPARENDOIn) {
          this.ID_COMPARENDO = ID_COMPARENDOIn;
    }

    public String getFECHACOMPARENDO() {
          return this.FECHACOMPARENDO;
    }
    public void setFECHACOMPARENDO(String FECHACOMPARENDOIn) {
          this.FECHACOMPARENDO = FECHACOMPARENDOIn;
    }

    public String getPOLCA() {
          return this.POLCA;
    }
    public void setPOLCA(String POLCAIn) {
          this.POLCA = POLCAIn;
    }

    public String getVALORALCOLEMIA() {
          return this.VALORALCOLEMIA;
    }
    public void setVALORALCOLEMIA(String VALORALCOLEMIAIn) {
          this.VALORALCOLEMIA = VALORALCOLEMIAIn;
    }

    public String getNROIDENTIFICACION() {
          return this.NROIDENTIFICACION;
    }
    public void setNROIDENTIFICACION(String NROIDENTIFICACIONIn) {
          this.NROIDENTIFICACION = NROIDENTIFICACIONIn;
    }

    public String getID_DOCTO() {
          return this.ID_DOCTO;
    }
    public void setID_DOCTO(String ID_DOCTOIn) {
          this.ID_DOCTO = ID_DOCTOIn;
    }

    public String getNOMBRES() {
          return this.NOMBRES;
    }
    public void setNOMBRES(String NOMBRESIn) {
          this.NOMBRES = NOMBRESIn;
    }

    public String getAPELLIDOS() {
          return this.APELLIDOS;
    }
    public void setAPELLIDOS(String APELLIDOSIn) {
          this.APELLIDOS = APELLIDOSIn;
    }

    public String getDIRECCION() {
          return this.DIRECCION;
    }
    public void setDIRECCION(String DIRECCIONIn) {
          this.DIRECCION = DIRECCIONIn;
    }

    public String getTELEFONO() {
          return this.TELEFONO;
    }
    public void setTELEFONO(String TELEFONOIn) {
          this.TELEFONO = TELEFONOIn;
    }

    public String getCODCIUDAD() {
          return this.CODCIUDAD;
    }
    public void setCODCIUDAD(String CODCIUDADIn) {
          this.CODCIUDAD = CODCIUDADIn;
    }

    public String getID_DEPTO() {
          return this.ID_DEPTO;
    }
    public void setID_DEPTO(String ID_DEPTOIn) {
          this.ID_DEPTO = ID_DEPTOIn;
    }

    public String getVALORINFRACCION() {
          return this.VALORINFRACCION;
    }
    public void setVALORINFRACCION(String VALORINFRACCIONIn) {
          this.VALORINFRACCION = VALORINFRACCIONIn;
    }

    public int getID() {
          return this.ID;
    }
    public void setID(int IDIn) {
          this.ID = IDIn;
    }

    public String getCOD_INFRACCION() {
          return this.COD_INFRACCION;
    }
    public void setCOD_INFRACCION(String COD_INFRACCIONIn) {
          this.COD_INFRACCION = COD_INFRACCIONIn;
    }

    public String getNUEVO_CODIGO() {
          return this.NUEVO_CODIGO;
    }
    public void setNUEVO_CODIGO(String NUEVO_CODIGOIn) {
          this.NUEVO_CODIGO = NUEVO_CODIGOIn;
    }
    public String getNUEVO_CODIGOCORREGIDO() {
        return NUEVO_CODIGOCORREGIDO;
    }

    public void setNUEVO_CODIGOCORREGIDO(String NUEVO_CODIGOCORREGIDO) {
        this.NUEVO_CODIGOCORREGIDO = NUEVO_CODIGOCORREGIDO;
    }

    public int getIDREPORTECOMPARENDO() {
        return IDREPORTECOMPARENDO;
    }

    public void setIDREPORTECOMPARENDO(int IDREPORTECOMPARENDO) {
        this.IDREPORTECOMPARENDO = IDREPORTECOMPARENDO;
    }



    /** 
     * setAll allows to set all persistent variables in one method call.
     * This is useful, when all data is available and it is needed to 
     * set the initial state of this object. Note that this method will
     * directly modify instance variales, without going trough the 
     * individual set-methods.
     */

    public void setAll(String NUMEROIn,
          String FECHAIn,
          String CODTIPORESOLUCIONIn,
          String NUMEROCOMPARENDOIn,
          int ID_COMPARENDOIn,
          String FECHACOMPARENDOIn,
          String POLCAIn,
          String VALORALCOLEMIAIn,
          String NROIDENTIFICACIONIn,
          String ID_DOCTOIn,
          String NOMBRESIn,
          String APELLIDOSIn,
          String DIRECCIONIn,
          String TELEFONOIn,
          String CODCIUDADIn,
          String ID_DEPTOIn,
          String VALORINFRACCIONIn,
          int IDIn,
          String COD_INFRACCIONIn,
          String NUEVO_CODIGOIn,
          String NUEVO_CODIGOCORREGIDOIn,
          int IDREPORTECOMPARENDOIn) {
          this.NUMERO = NUMEROIn;
          this.FECHA = FECHAIn;
          this.CODTIPORESOLUCION = CODTIPORESOLUCIONIn;
          this.NUMEROCOMPARENDO = NUMEROCOMPARENDOIn;
          this.ID_COMPARENDO = ID_COMPARENDOIn;
          this.FECHACOMPARENDO = FECHACOMPARENDOIn;
          this.POLCA = POLCAIn;
          this.VALORALCOLEMIA = VALORALCOLEMIAIn;
          this.NROIDENTIFICACION = NROIDENTIFICACIONIn;
          this.ID_DOCTO = ID_DOCTOIn;
          this.NOMBRES = NOMBRESIn;
          this.APELLIDOS = APELLIDOSIn;
          this.DIRECCION = DIRECCIONIn;
          this.TELEFONO = TELEFONOIn;
          this.CODCIUDAD = CODCIUDADIn;
          this.ID_DEPTO = ID_DEPTOIn;
          this.VALORINFRACCION = VALORINFRACCIONIn;
          this.ID = IDIn;
          this.COD_INFRACCION = COD_INFRACCIONIn;
          this.NUEVO_CODIGO = NUEVO_CODIGOIn;
          this.NUEVO_CODIGOCORREGIDO = NUEVO_CODIGOCORREGIDOIn;
          this.IDREPORTECOMPARENDO = IDREPORTECOMPARENDOIn;
    }


    /** 
     * hasEqualMapping-method will compare two ViewResoluciones instances
     * and return true if they contain same values in all persistent instance 
     * variables. If hasEqualMapping returns true, it does not mean the objects
     * are the same instance. However it does mean that in that moment, they 
     * are mapped to the same row in database.
     */
    public boolean hasEqualMapping(ViewResoluciones valueObject) {

          if (this.NUMERO == null) {
                    if (valueObject.getNUMERO() != null)
                           return(false);
          } else if (!this.NUMERO.equals(valueObject.getNUMERO())) {
                    return(false);
          }
          if (this.FECHA == null) {
                    if (valueObject.getFECHA() != null)
                           return(false);
          } else if (!this.FECHA.equals(valueObject.getFECHA())) {
                    return(false);
          }
          if (this.CODTIPORESOLUCION == null) {
                    if (valueObject.getCODTIPORESOLUCION() != null)
                           return(false);
          } else if (!this.CODTIPORESOLUCION.equals(valueObject.getCODTIPORESOLUCION())) {
                    return(false);
          }
          if (this.NUMEROCOMPARENDO == null) {
                    if (valueObject.getNUMEROCOMPARENDO() != null)
                           return(false);
          } else if (!this.NUMEROCOMPARENDO.equals(valueObject.getNUMEROCOMPARENDO())) {
                    return(false);
          }
          if (valueObject.getID_COMPARENDO() != this.ID_COMPARENDO) {
                    return(false);
          }
          if (this.FECHACOMPARENDO == null) {
                    if (valueObject.getFECHACOMPARENDO() != null)
                           return(false);
          } else if (!this.FECHACOMPARENDO.equals(valueObject.getFECHACOMPARENDO())) {
                    return(false);
          }
          if (this.POLCA == null) {
                    if (valueObject.getPOLCA() != null)
                           return(false);
          } else if (!this.POLCA.equals(valueObject.getPOLCA())) {
                    return(false);
          }
          if (this.VALORALCOLEMIA == null) {
                    if (valueObject.getVALORALCOLEMIA() != null)
                           return(false);
          } else if (!this.VALORALCOLEMIA.equals(valueObject.getVALORALCOLEMIA())) {
                    return(false);
          }
          if (this.NROIDENTIFICACION == null) {
                    if (valueObject.getNROIDENTIFICACION() != null)
                           return(false);
          } else if (!this.NROIDENTIFICACION.equals(valueObject.getNROIDENTIFICACION())) {
                    return(false);
          }
          if (this.ID_DOCTO == null) {
                    if (valueObject.getID_DOCTO() != null)
                           return(false);
          } else if (!this.ID_DOCTO.equals(valueObject.getID_DOCTO())) {
                    return(false);
          }
          if (this.NOMBRES == null) {
                    if (valueObject.getNOMBRES() != null)
                           return(false);
          } else if (!this.NOMBRES.equals(valueObject.getNOMBRES())) {
                    return(false);
          }
          if (this.APELLIDOS == null) {
                    if (valueObject.getAPELLIDOS() != null)
                           return(false);
          } else if (!this.APELLIDOS.equals(valueObject.getAPELLIDOS())) {
                    return(false);
          }
          if (this.DIRECCION == null) {
                    if (valueObject.getDIRECCION() != null)
                           return(false);
          } else if (!this.DIRECCION.equals(valueObject.getDIRECCION())) {
                    return(false);
          }
          if (this.TELEFONO == null) {
                    if (valueObject.getTELEFONO() != null)
                           return(false);
          } else if (!this.TELEFONO.equals(valueObject.getTELEFONO())) {
                    return(false);
          }
          if (this.CODCIUDAD == null) {
                    if (valueObject.getCODCIUDAD() != null)
                           return(false);
          } else if (!this.CODCIUDAD.equals(valueObject.getCODCIUDAD())) {
                    return(false);
          }
          if (this.ID_DEPTO == null) {
                    if (valueObject.getID_DEPTO() != null)
                           return(false);
          } else if (!this.ID_DEPTO.equals(valueObject.getID_DEPTO())) {
                    return(false);
          }
          if (this.VALORINFRACCION == null) {
                    if (valueObject.getVALORINFRACCION() != null)
                           return(false);
          } else if (!this.VALORINFRACCION.equals(valueObject.getVALORINFRACCION())) {
                    return(false);
          }
          if (valueObject.getID() != this.ID) {
                    return(false);
          }
          if (this.COD_INFRACCION == null) {
                    if (valueObject.getCOD_INFRACCION() != null)
                           return(false);
          } else if (!this.COD_INFRACCION.equals(valueObject.getCOD_INFRACCION())) {
                    return(false);
          }
          if (this.NUEVO_CODIGO == null) {
                    if (valueObject.getNUEVO_CODIGO() != null)
                           return(false);
          } else if (!this.NUEVO_CODIGO.equals(valueObject.getNUEVO_CODIGO())) {
                    return(false);
          }
        if (this.NUEVO_CODIGOCORREGIDO == null) {
                  if (valueObject.getNUEVO_CODIGOCORREGIDO() != null)
                         return(false);
        } else if (!this.NUEVO_CODIGOCORREGIDO.equals(valueObject.getNUEVO_CODIGOCORREGIDO())) {
                  return(false);
        }
        if (valueObject.getIDREPORTECOMPARENDO() != this.IDREPORTECOMPARENDO) {
                  return(false);
        }

          return true;
    }



    /**
     * toString will return String object representing the state of this 
     * valueObject. This is useful during application development, and 
     * possibly when application is writing object states in textlog.
     */
    public String toString() {
        StringBuffer out = new StringBuffer(this.getDaogenVersion());
        out.append("\nclass ViewResoluciones, mapping to table VIEW_RESOLUCIONES\n");
        out.append("Persistent attributes: \n"); 
        out.append("NUMERO = " + this.NUMERO + "\n"); 
        out.append("FECHA = " + this.FECHA + "\n"); 
        out.append("CODTIPORESOLUCION = " + this.CODTIPORESOLUCION + "\n"); 
        out.append("NUMEROCOMPARENDO = " + this.NUMEROCOMPARENDO + "\n"); 
        out.append("ID_COMPARENDO = " + this.ID_COMPARENDO + "\n"); 
        out.append("FECHACOMPARENDO = " + this.FECHACOMPARENDO + "\n"); 
        out.append("POLCA = " + this.POLCA + "\n"); 
        out.append("VALORALCOLEMIA = " + this.VALORALCOLEMIA + "\n"); 
        out.append("NROIDENTIFICACION = " + this.NROIDENTIFICACION + "\n"); 
        out.append("ID_DOCTO = " + this.ID_DOCTO + "\n"); 
        out.append("NOMBRES = " + this.NOMBRES + "\n"); 
        out.append("APELLIDOS = " + this.APELLIDOS + "\n"); 
        out.append("DIRECCION = " + this.DIRECCION + "\n"); 
        out.append("TELEFONO = " + this.TELEFONO + "\n"); 
        out.append("CODCIUDAD = " + this.CODCIUDAD + "\n"); 
        out.append("ID_DEPTO = " + this.ID_DEPTO + "\n"); 
        out.append("VALORINFRACCION = " + this.VALORINFRACCION + "\n"); 
        out.append("ID = " + this.ID + "\n"); 
        out.append("COD_INFRACCION = " + this.COD_INFRACCION + "\n"); 
        out.append("NUEVO_CODIGO = " + this.NUEVO_CODIGO + "\n"); 
        out.append("NUEVO_CODIGOCORREGIDO = " + this.NUEVO_CODIGOCORREGIDO + "\n");
        out.append("IDREPORTECOMPARENDO = " + this.IDREPORTECOMPARENDO + "\n");
        return out.toString();
    }


    /**
     * Clone will return identical deep copy of this valueObject.
     * Note, that this method is different than the clone() which
     * is defined in java.lang.Object. Here, the retuned cloned object
     * will also have all its attributes cloned.
     */
    public Object clone() {
        ViewResoluciones cloned = new ViewResoluciones();

        if (this.NUMERO != null)
             cloned.setNUMERO(new String(this.NUMERO)); 
        if (this.FECHA != null)
             cloned.setFECHA(new String(this.FECHA)); 
        if (this.CODTIPORESOLUCION != null)
             cloned.setCODTIPORESOLUCION(new String(this.CODTIPORESOLUCION)); 
        if (this.NUMEROCOMPARENDO != null)
             cloned.setNUMEROCOMPARENDO(new String(this.NUMEROCOMPARENDO)); 
        cloned.setID_COMPARENDO(this.ID_COMPARENDO); 
        if (this.FECHACOMPARENDO != null)
             cloned.setFECHACOMPARENDO(new String(this.FECHACOMPARENDO)); 
        if (this.POLCA != null)
             cloned.setPOLCA(new String(this.POLCA)); 
        if (this.VALORALCOLEMIA != null)
             cloned.setVALORALCOLEMIA(new String(this.VALORALCOLEMIA)); 
        if (this.NROIDENTIFICACION != null)
             cloned.setNROIDENTIFICACION(new String(this.NROIDENTIFICACION)); 
        if (this.ID_DOCTO != null)
             cloned.setID_DOCTO(new String(this.ID_DOCTO)); 
        if (this.NOMBRES != null)
             cloned.setNOMBRES(new String(this.NOMBRES)); 
        if (this.APELLIDOS != null)
             cloned.setAPELLIDOS(new String(this.APELLIDOS)); 
        if (this.DIRECCION != null)
             cloned.setDIRECCION(new String(this.DIRECCION)); 
        if (this.TELEFONO != null)
             cloned.setTELEFONO(new String(this.TELEFONO)); 
        if (this.CODCIUDAD != null)
             cloned.setCODCIUDAD(new String(this.CODCIUDAD)); 
        if (this.ID_DEPTO != null)
             cloned.setID_DEPTO(new String(this.ID_DEPTO)); 
        if (this.VALORINFRACCION != null)
             cloned.setVALORINFRACCION(new String(this.VALORINFRACCION)); 
        cloned.setID(this.ID); 
        if (this.COD_INFRACCION != null)
             cloned.setCOD_INFRACCION(new String(this.COD_INFRACCION)); 
        if (this.NUEVO_CODIGO != null)
             cloned.setNUEVO_CODIGO(new String(this.NUEVO_CODIGO)); 
        cloned.setIDREPORTECOMPARENDO(this.IDREPORTECOMPARENDO);
        return cloned;
    }



    /** 
     * getDaogenVersion will return information about
     * generator which created these sources.
     */
    public String getDaogenVersion() {
        return "DaoGen version 2.4.1";
    }
}

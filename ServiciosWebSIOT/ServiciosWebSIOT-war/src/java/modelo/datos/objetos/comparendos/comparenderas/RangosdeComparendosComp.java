package modelo.datos.objetos.comparendos.comparenderas;

import java.io.*;
import java.sql.*;
import java.util.*;
import java.math.*;

 /**
  * RangosdeComparendosComp Value Object.
  * This class is value object representing database table RangosdeComparendosComp
  * This class is intented to be used together with associated Dao object.
  */

 /**
  * This sourcecode has been generated by FREE DaoGen generator version 2.4.1.
  * The usage of generated code is restricted to OpenSource software projects
  * only. DaoGen is available in http://titaniclinux.net/daogen/
  * It has been programmed by Tuomo Lukka, Tuomo.Lukka@iki.fi
  *
  * DaoGen license: The following DaoGen generated source code is licensed
  * under the terms of GNU GPL license. The full text for license is available
  * in GNU project's pages: http://www.gnu.org/copyleft/gpl.html
  *
  * If you wish to use the DaoGen generator to produce code for closed-source
  * commercial applications, you must pay the lisence fee. The price is
  * 5 USD or 5 Eur for each database table, you are generating code for.
  * (That includes unlimited amount of iterations with all supported languages
  * for each database table you are paying for.) Send mail to
  * "Tuomo.Lukka@iki.fi" for more information. Thank you!
  */



public class RangosdeComparendosComp implements Cloneable, Serializable {

    /** 
     * Persistent Instance variables. This data is directly 
     * mapped to the columns of database table.
     */
    private int ID_RANGOCOMPARENDO;
    private String RANGOINICIAL;
    private String RANGOFINAL;
    private String FECHAASIGNACIONRANGOS;
    private String NRORESOLASIGNACION;
    private int CANTIDADRANGOS;



    /** 
     * Constructors. DaoGen generates two constructors by default.
     * The first one takes no arguments and provides the most simple
     * way to create object instance. The another one takes one
     * argument, which is the primary key of the corresponding table.
     */

    public RangosdeComparendosComp () {

    }

    public RangosdeComparendosComp (int ID_RANGOCOMPARENDOIn) {

          this.ID_RANGOCOMPARENDO = ID_RANGOCOMPARENDOIn;

    }


    /** 
     * Get- and Set-methods for persistent variables. The default
     * behaviour does not make any checks against malformed data,
     * so these might require some manual additions.
     */

    public int getID_RANGOCOMPARENDO() {
          return this.ID_RANGOCOMPARENDO;
    }
    public void setID_RANGOCOMPARENDO(int ID_RANGOCOMPARENDOIn) {
          this.ID_RANGOCOMPARENDO = ID_RANGOCOMPARENDOIn;
    }

    public String getRANGOINICIAL() {
          return this.RANGOINICIAL;
    }
    public void setRANGOINICIAL(String RANGOINICIALIn) {
          this.RANGOINICIAL = RANGOINICIALIn;
    }

    public String getRANGOFINAL() {
          return this.RANGOFINAL;
    }
    public void setRANGOFINAL(String RANGOFINALIn) {
          this.RANGOFINAL = RANGOFINALIn;
    }

    public String getFECHAASIGNACIONRANGOS() {
          return this.FECHAASIGNACIONRANGOS;
    }
    public void setFECHAASIGNACIONRANGOS(String FECHAASIGNACIONRANGOSIn) {
          this.FECHAASIGNACIONRANGOS = FECHAASIGNACIONRANGOSIn;
    }

    public String getNRORESOLASIGNACION() {
          return this.NRORESOLASIGNACION;
    }
    public void setNRORESOLASIGNACION(String NRORESOLASIGNACIONIn) {
          this.NRORESOLASIGNACION = NRORESOLASIGNACIONIn;
    }

    public int getCANTIDADRANGOS() {
          return this.CANTIDADRANGOS;
    }
    public void setCANTIDADRANGOS(int CANTIDADRANGOSIn) {
          this.CANTIDADRANGOS = CANTIDADRANGOSIn;
    }



    /** 
     * setAll allows to set all persistent variables in one method call.
     * This is useful, when all data is available and it is needed to 
     * set the initial state of this object. Note that this method will
     * directly modify instance variales, without going trough the 
     * individual set-methods.
     */

    public void setAll(int ID_RANGOCOMPARENDOIn,
          String RANGOINICIALIn,
          String RANGOFINALIn,
          String FECHAASIGNACIONRANGOSIn,
          String NRORESOLASIGNACIONIn,
          int CANTIDADRANGOSIn) {
          this.ID_RANGOCOMPARENDO = ID_RANGOCOMPARENDOIn;
          this.RANGOINICIAL = RANGOINICIALIn;
          this.RANGOFINAL = RANGOFINALIn;
          this.FECHAASIGNACIONRANGOS = FECHAASIGNACIONRANGOSIn;
          this.NRORESOLASIGNACION = NRORESOLASIGNACIONIn;
          this.CANTIDADRANGOS = CANTIDADRANGOSIn;
    }


    /** 
     * hasEqualMapping-method will compare two RangosdeComparendosComp instances
     * and return true if they contain same values in all persistent instance 
     * variables. If hasEqualMapping returns true, it does not mean the objects
     * are the same instance. However it does mean that in that moment, they 
     * are mapped to the same row in database.
     */
    public boolean hasEqualMapping(RangosdeComparendosComp valueObject) {

          if (valueObject.getID_RANGOCOMPARENDO() != this.ID_RANGOCOMPARENDO) {
                    return(false);
          }
          if (this.RANGOINICIAL == null) {
                    if (valueObject.getRANGOINICIAL() != null)
                           return(false);
          } else if (!this.RANGOINICIAL.equals(valueObject.getRANGOINICIAL())) {
                    return(false);
          }
          if (this.RANGOFINAL == null) {
                    if (valueObject.getRANGOFINAL() != null)
                           return(false);
          } else if (!this.RANGOFINAL.equals(valueObject.getRANGOFINAL())) {
                    return(false);
          }
          if (this.FECHAASIGNACIONRANGOS == null) {
                    if (valueObject.getFECHAASIGNACIONRANGOS() != null)
                           return(false);
          } else if (!this.FECHAASIGNACIONRANGOS.equals(valueObject.getFECHAASIGNACIONRANGOS())) {
                    return(false);
          }
          if (this.NRORESOLASIGNACION == null) {
                    if (valueObject.getNRORESOLASIGNACION() != null)
                           return(false);
          } else if (!this.NRORESOLASIGNACION.equals(valueObject.getNRORESOLASIGNACION())) {
                    return(false);
          }
          if (valueObject.getCANTIDADRANGOS() != this.CANTIDADRANGOS) {
                    return(false);
          }

          return true;
    }



    /**
     * toString will return String object representing the state of this 
     * valueObject. This is useful during application development, and 
     * possibly when application is writing object states in textlog.
     */
    public String toString() {
        StringBuffer out = new StringBuffer(this.getDaogenVersion());
        out.append("\nclass RangosdeComparendosComp, mapping to table RangosdeComparendosComp\n");
        out.append("Persistent attributes: \n"); 
        out.append("ID_RANGOCOMPARENDO = " + this.ID_RANGOCOMPARENDO + "\n"); 
        out.append("RANGOINICIAL = " + this.RANGOINICIAL + "\n"); 
        out.append("RANGOFINAL = " + this.RANGOFINAL + "\n"); 
        out.append("FECHAASIGNACIONRANGOS = " + this.FECHAASIGNACIONRANGOS + "\n"); 
        out.append("NRORESOLASIGNACION = " + this.NRORESOLASIGNACION + "\n"); 
        out.append("CANTIDADRANGOS = " + this.CANTIDADRANGOS + "\n"); 
        return out.toString();
    }


    /**
     * Clone will return identical deep copy of this valueObject.
     * Note, that this method is different than the clone() which
     * is defined in java.lang.Object. Here, the retuned cloned object
     * will also have all its attributes cloned.
     */
    public Object clone() {
        RangosdeComparendosComp cloned = new RangosdeComparendosComp();

        cloned.setID_RANGOCOMPARENDO(this.ID_RANGOCOMPARENDO); 
        if (this.RANGOINICIAL != null)
             cloned.setRANGOINICIAL(new String(this.RANGOINICIAL)); 
        if (this.RANGOFINAL != null)
             cloned.setRANGOFINAL(new String(this.RANGOFINAL)); 
        if (this.FECHAASIGNACIONRANGOS != null)
             cloned.setFECHAASIGNACIONRANGOS(new String(this.FECHAASIGNACIONRANGOS)); 
        if (this.NRORESOLASIGNACION != null)
             cloned.setNRORESOLASIGNACION(new String(this.NRORESOLASIGNACION)); 
        cloned.setCANTIDADRANGOS(this.CANTIDADRANGOS); 
        return cloned;
    }



    /** 
     * getDaogenVersion will return information about
     * generator which created these sources.
     */
    public String getDaogenVersion() {
        return "DaoGen version 2.4.1";
    }

}

